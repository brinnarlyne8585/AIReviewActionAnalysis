Repository,File_Path,Initial_Commit_SHA,Initial_Commit_Time,Initial_Commit_Content,Last_Commit_SHA,Last_Commit_Time,Last_Commit_Content,Time_Difference_(Days),Modification_Count
TeTedo/NFT_lottery,.github/workflows/cr.yml,0b0400cbb6c63d800e3b0077650f8c5f9be454ab,2023-06-18 08:04:26,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",ac5f9c08482e53c6ad404b9e3174d9e1b466c776,2023-06-20 15:42:19,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",2,2
gfargo/coco,.github/workflows/ai-review.yml,b31dfcfc70bfe125d1a3c6cc0ebc7c263d491034,2023-07-06 16:31:50,"name: AI Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",b31dfcfc70bfe125d1a3c6cc0ebc7c263d491034,2023-07-06 16:31:50,"name: AI Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",0,0
sagarkhanal07/reactnative-enterprise,.github/workflows/cr.yml,754be20d5c6ce7f357fa3438aa966b70f37f5b1b,2023-08-02 16:40:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_ENDPOINT }}
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",6ffc7ff90e6ca9aa8d23d472e0cfa35c06353ac0,2023-08-08 02:10:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_ENDPOINT }}
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check the pull request and provide any suggestions to improve the code. Provide Feedback in English Language always. Add emojis in feedback for better display.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",5,2
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_15-classroom,.github/workflows/code-review.yml,abed8b81e0eb9d54d62d06de8de28f06055b5a16,2024-07-24 06:18:03,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",abed8b81e0eb9d54d62d06de8de28f06055b5a16,2024-07-24 06:18:03,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
lsh1215/Initial-settings,.github/workflows/codereview.yml,f83fa7732960680d35800f99827389dcc35db822,2024-10-08 20:34:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",f83fa7732960680d35800f99827389dcc35db822,2024-10-08 20:34:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
yuriykulikov/AlarmClock,.github/workflows/chatgpt-code-review.yml,698405e9a549aa037b35d829c5104252dd400bbc,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",7b7bafe552ee1ab8b7c7d7f49b0d01aeb93a5404,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,2
COS-project/cos-frontend,.github/workflows/code-review.yml,fe0009aea2f5f90bd0e51c84ce6eaf71b0416ec1,2024-02-15 05:07:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",fe0009aea2f5f90bd0e51c84ce6eaf71b0416ec1,2024-02-15 05:07:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
Chochanguk/eb_proj,.github/workflows/deploy.yml,3895679f23e713820cad2e0e95a8ad5f52f70392,2024-11-17 15:27:35,"name: eb-proj-service

# eb_prac!
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:
    branches:
      - ""main""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      ##############################################################
      # 이후 이 부분은 envsubst가 추가될 예정
      ##############################################################


      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: Show Current Time
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash

      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",17fdb95c7e3930b86c5bc944f142dfa44ded2208,2024-11-19 14:10:10,"name: eb-proj-service

# eb_prac!
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:
    branches:
      - ""main""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      ##############################################################
      - name: Install envsubst
        run: sudo apt-get install -y gettext

      - name: Create application.yml.template
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 5000

          spring:
            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: jdbc:mariadb://\${RDS_HOSTNAME}:\${RDS_PORT}/\${RDS_DB_NAME}
              username: \${RDS_USERNAME}
              password: \${RDS_PASSWORD}

            jpa:
              generate-ddl: false
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  '[format_sql]': true
          EOL

      - name: Set Yaml
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          echo ""Generated application.yml:""
          cat src/main/resources/application.yml
        env:
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}

      - name: Check for Tests
        run: |
          if git diff --name-only origin/main HEAD | grep -qvE '(\.xml$|\.yml$|config/)'; then
            if [ -z ""$(find src/test -name '*ServiceTests.java')"" ]; then
              echo ""No ServiceTest found, failing the build.""
              exit 1
            fi
          else
            echo ""Only configuration files changed, skipping test check.""
          fi
      ##############################################################


      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: Show Current Time
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash

      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: |
            아래 코드를 리뷰하고, 한국어로 명확하고 간결하게 답변해주세요.
            반드시 한국어로 작성해야 합니다.
            코드 내용은 다음과 같습니다:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Generate deployment package
        run: |
          ./gradlew clean build
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: camp-env1
          environment_name: Camp-env1-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          use_existing_version_if_available: false
          wait_for_deployment: true
          wait_for_environment_recovery: 300",1,7
oktavianusw/GitHubActions,.github/workflows/GPT-Code-Reviewer.yml,3161a319242db538d8b39b0bdaa780f01ae8a734,2024-03-14 18:10:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: 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
          OPENAI_API_KEY: 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
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Fix the following code
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4000
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",092caa80da5e0b35ae3bc572b993ea14e859779b,2024-03-14 18:24:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Fix the following code
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4000
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
gravis-os/gravis-os,.github/workflows/chatgpt-codereviewer.yml,381b4025f137c00feb6b28f70e9c48ad9f440edd,2023-09-22 03:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",158dd5bced79859d1cbf4994cac00a42720030db,2023-09-22 12:53:57,"name: ChatGPT Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'GPT Review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,3
NU-WA-Project/FE,.github/workflows/cr.yml,2de980f3b8b471dd981599a280d18c8e027a60d8,2024-02-13 12:11:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",83ecb437ed24ca387bc549eb4538ded4a5a69f05,2024-03-18 07:36:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - '*'
      - '!main'

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3500
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",33,2
gameareonehour/pension-reservation,.github/workflows/code-review.yml,08cae67e198414b02c10d2fcbf6685cbfb122bbf,2024-08-29 16:37:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",08cae67e198414b02c10d2fcbf6685cbfb122bbf,2024-08-29 16:37:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",0,0
team-collabor/coworkers,.github/workflows/code-reivew.yml,c924b3441d9934ff06432c17bf8710ece52d4ea9,2024-10-16 11:01:01,"name: Code Review with ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: following code diff 에서 confusions, irregularities, 개선할 점이 있는지 확인하고 어떻게 개선할지 제시해. 필요한 모든 기능이 정상적으로 동작하는지 테스트해. 코드가 Next.js, React의 베스트 프랙티스에 맞게 작성되었는지 확인해. Tailwind CSS가 적절히 사용되었는지 확인해 주세요. 불필요하게 복잡한 클래스가 없는지 체크해 주세요. 컴포넌트 구조가 일관성 있게 설계되었는지, 지나치게 복잡하지는 않은지 확인해 주세요. Zustand를 사용한 상태 관리가 적절하게 적용되었는지 확인해 주세요. 상태가 전역적으로 필요한 곳에서만 관리되는지, 불필요하게 많은 상태가 전역으로 관리되지 않는지 체크해 주세요. TanStack Query와 Axios를 사용해 데이터를 적절하게 가져오고 캐싱하고 있는지 확인해 주세요. 에러 처리와 로딩 상태가 잘 관리되고 있는지 확인하세요. 비동기 로직이 이해하기 쉽게 작성되었는지 체크해 주세요. 불필요한 렌더링이 발생하지 않도록 코드가 잘 최적화되어 있는지 확인해 주세요. Tailwind CSS를 사용할 때, 반응형 디자인이 적절하게 구현되었는지 확인해 주세요. TanStack Query를 사용할 때 캐싱 전략이 적절한지 확인해주세요. Axios로 데이터를 요청할 때 CORS, API 키 등 보안 관련 이슈가 잘 처리되었는지 확인해 주세요. 잠재적인 에러 처리가 적절하게 이루어졌는지 체크하세요. # example: Please check if there are any confusions or irregularities in the following code diff:",d9e45810132ab58ffbfadc1d4dae9b483a56f459,2024-10-16 12:33:09,"name: Code Review with ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
",0,4
Travel-Itinerary-Platform/momento,.github/workflows/codereview_chatgpt.yml,a0c1efca73bc0ad634df5ad1467cf4296d22da80,2024-07-19 01:39:22,"# .github/workflows/codereview_chatgpt.yml 파일 생성

name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL : gpt-3.5-turbo
",a0c1efca73bc0ad634df5ad1467cf4296d22da80,2024-07-19 01:39:22,"# .github/workflows/codereview_chatgpt.yml 파일 생성

name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL : gpt-3.5-turbo
",0,0
arimounir/ai-airbnb,.github/workflows/chatgpt-review.yml,a0d5902afd4d6656a4f6df0ac58c5fcd3a7d72dc,2023-07-09 16:13:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, edited, labeled]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
",e7f6a9f0189611552b40dbb60966828ff3f6311c,2023-07-09 16:45:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, edited, labeled]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
",0,1
hyperskill/mobile-app,.github/workflows/gpt_review.yml,e61954b9bf562a4c46f9959f57be4b3b1cc0e31c,2024-01-11 07:28:12,"name: GPT Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k # https://platform.openai.com/docs/models
          PROMPT: 'Provide suggestions for improving the changes in this PR. If the PR has no clear issues, mention that no suggestions are needed. You must look at the code to see if there are any bugs, improvements, or optimizations. You must praise good changes. You must ask questions if something is not clear. This PR is for the Kotlin Multiplatform Mobile project, where the main languages are Kotlin and Swift.'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",720b1fdb229653d8c9ff7104b2f0c6b23ed353b3,2024-10-17 05:35:57,"name: GPT Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k # https://platform.openai.com/docs/models
          PROMPT: 'Provide suggestions for improving the changes in this PR. If the PR has no clear issues, mention that no suggestions are needed. You must look at the code to see if there are any bugs, improvements, or optimizations. You must praise good changes. You must ask questions if something is not clear. This PR is for the Kotlin Multiplatform Mobile project, where the main languages are Kotlin and Swift.'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",279,1
karaage0703/ai_review_example,.github/workflows/ai_code_review.yml,6119ed768e282765e08ac430c1713b42e2f0f14c,2024-07-23 00:59:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",e9049a27b50d9f152e8b8a6128d1a50820f33c79,2024-07-23 01:20:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,2
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review-classroom,.github/workflows/code-review.yml,a0a95224f4d41ed18bfd743c701bdebf169e9b0d,2024-07-24 05:18:52,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make
        sudo cp googletest/lib/*.a /usr/lib
        sudo cp googlemock/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",a0a95224f4d41ed18bfd743c701bdebf169e9b0d,2024-07-24 05:18:52,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make
        sudo cp googletest/lib/*.a /usr/lib
        sudo cp googlemock/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
jadujoel/ffmpeg-helper,.github/workflows/pr.yml,838e2b3d7f258d8df0875ccaa212c5bc1ed66ce2,2023-06-05 12:03:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_API }}
",838e2b3d7f258d8df0875ccaa212c5bc1ed66ce2,2023-06-05 12:03:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_API }}
",0,0
Tohtig/Diplom_3,.github/workflows/code-review.yml,bcb8fe385b44ac5ca4949a18207f91829308caff,2024-03-12 19:34:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Java automed QA and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",bcb8fe385b44ac5ca4949a18207f91829308caff,2024-03-12 19:34:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Java automed QA and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",0,0
alexohneander/expressway,.github/workflows/.cr.yml,a63013f3824d1256da08b32f376e3c98cd5b0b9e,2023-07-23 09:34:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",79d7f972088479d7c4f8c21f035b4145a327dcf8,2023-07-29 13:06:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",6,1
Yoowatney/GomGomFront,.github/workflows/code-review.yml,08c939e76071094b95c6ccf880d79ff36acba324,2023-12-05 11:56:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:

",08c939e76071094b95c6ccf880d79ff36acba324,2023-12-05 11:56:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:

",0,0
UgolinOlle/WhoaIDE,.github/workflows/cr.yml,218924b431668547419ddd0b2ecb2b4551a9c85b,2024-05-14 05:35:58,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",218924b431668547419ddd0b2ecb2b4551a9c85b,2024-05-14 05:35:58,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
TUSB/TheUnusualSkyBlock,.github/workflows/chatgpt-review.yml,a3723fc1527e88083c0efd10e14adf142777660f,2024-11-16 18:09:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: o1-preview-2024-09-12 # https://platform.openai.com/docs/models
          PROMPT: |
            プルリクエストの概要
            このプルリクエストは、Minecraft配布ワールド「The Unusual SkyBlock」用のデータパックリポジトリに対する変更を含んでいます。レビューを行うにあたり、以下の点に注意してください。

            レビューのポイント
            1. コードの品質や可読性を確認してください。
            2. 提案された変更が既存の機能にどのように影響するかを評価してください。
            3. セキュリティやパフォーマンスに関する懸念がないか確認してください。
            4. Minecraftのゲームプレイに影響を与える可能性のある変更について特に注意してください。
            5. プルリクエストの内容と変更内容が相違ないか確認してください。

            フィードバックの提供
            - 良い点や改善点について具体的にフィードバックを提供してください。
            - 必要に応じて、改善のための具体的な提案を行ってください。
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma
",3fbfe83ff091128af7b3d9f668473eec00dc277c,2025-01-18 19:17:59,"# kics-scan disable=555ab8f9-2001-455e-a077-f2d0f41e2fb9
---
name: PR Code Review
on:
  pull_request:
    types:
      - ready_for_review
      - synchronize
permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      # 1) issue_commentイベントならPR情報(HEAD SHA)を取得
      - name: Retrieve PR HEAD SHA (for issue_comment only)
        if: ${{ github.event_name == 'issue_comment' }}
        id: pr-info
        uses: actions/github-script@v6.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script:
            |
            // コメントされたIssueがPull Requestであることを前提
            const prNumber = context.payload.issue.number;
            // PR情報を取得
            const { data: pr } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            // HEADのSHAを出力
            core.setOutput('sha', pr.head.sha);

      # 2) チェックアウト (コメントのときは上ステップから取得したSHA, PRイベントならPull RequestのSHA)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr-info.outputs.sha || github.event.pull_request.head.sha }}

      # 3) 現在のコミットがマージコミットかを判定
      - name: Check if current commit is a merge commit
        id: check_merge
        run:
          |
          # 実際にチェックアウトしているコミットSHAを確認
          CURRENT_SHA=""${{ steps.pr-info.outputs.sha || github.event.pull_request.head.sha }}""
          PARENTS_COUNT=$(git rev-list --parents -n 1 ""${CURRENT_SHA}"" | wc -w)
          # 親が1つであれば (コミットID + 親1つ) = 2単語
          # 親が2つなら (コミットID + 親2つ) = 3単語 以上となるので、
          # 3以上ならマージコミットとみなす
          if [ ""${PARENTS_COUNT}"" -ge 3 ]; then
            echo ""is_merge=true"" >> ""${GITHUB_OUTPUT}""
          else
            echo ""is_merge=false"" >> ""${GITHUB_OUTPUT}""
          fi

      # 4) マージコミットならスキップ
      - name: Skip on merge commit
        if: steps.check_merge.outputs.is_merge == 'true'
        run:
          |
          echo ""This is a merge commit. Skipping this job.""
          exit 0

      # 5) ChatGPTを用いた自動コードレビュー
      - uses: anc95/ChatGPT-CodeReview@main
        if:
          >
          (
            (github.event_name == 'pull_request' && github.event.action == 'ready_for_review')
          )
          ||
          (
            (github.event_name == 'pull_request' && github.event.action == 'synchronize'
             && contains(github.event.pull_request.labels.*.name, 'プリーズレビュー'))
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: o1-mini
          PROMPT:
            |
            Request: perform PR review mcfuntion code for Minecraft 1.21.1
            Role: Respond as code reviewer for Minecraft distribution world “The Unusual SkyBlock”.
            Regulation: keep brief to point, 50-300 words or less
            Rule:
            . Avoid hallucination provide reliable information.
            . do not copy answers, use original content.
            . review code in Minecraft 1.21.1
            Review Refine:
            . check quality readability code
            . Evaluate impact proposed changes on existing functionality
            . identify performance concerns
            . identify potential impact on gameplay aware of changes affect gameplay
            Reference:
            - Repository: [The Unusual SkyBlock](https://github.com/TUSB/TheUnusualSkyBlock)
            - Documentation:
              - [GitHub Wiki](https://github.com/TUSB/TheUnusualSkyBlock/wiki/Top)
              - [Seesaawiki](https://seesaawiki.jp/theunusualskyblock/)
            Run Scenario: respond as code reviewer.
          top_p: 1
          temperature: 1
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: ./*,*.md
",63,22
hansung-PreCaps/Backend,.github/workflows/codereview.yml,f2f0137ce5b2cec5e402d69492e9c10e8a6477b9,2024-10-08 12:11:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",78e5b1aa3b99720f0a39fc1688285cc539942fdb,2024-10-28 06:15:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""Please review the code only for parts that are incorrect, need modification, or could be refactored. You should also suggest how the code can be improved."" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",19,1
LESSERAFIM-Aespa/TripMate,.github/workflows/bot.yml,cb29d386fd39d69aa8cabcf25a8fa8b933e7d8c0,2023-10-31 11:49:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GIT_API_KEY }}
          LANGUAGE: Korean
",cb29d386fd39d69aa8cabcf25a8fa8b933e7d8c0,2023-10-31 11:49:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GIT_API_KEY }}
          LANGUAGE: Korean
",0,0
YJU-OKURA/project_minori-gin-deployment-repo,.github/workflows/openai_code_review.yml,d7b78e27bb3b24d7297b4e1c1d6d35d9a7890ccc,2024-02-13 05:50:38,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",1cffe9312f8c06cabcbb7b255482741ac15e1c96,2024-02-13 08:09:40,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          LANGUAGE: Korean",0,5
PatientPaI/patientpal-frontend,.github/workflows/cr.yml,09280f19856d685db3fadaadfc35ac43a257381b,2024-06-10 12:35:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",fc7fc284851660179752bdf5169d4d1c8d4be296,2024-09-27 13:24:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
",109,4
jiyeonseo/ai-pairprogramming-ecommerce-sample-be,.github/workflows/code_review.yml,350ada9195258adb2143a9334ec0ac774148baab,2024-03-16 20:40:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""You are the senior Python developer in a team. A junior developer has submitted a pull request for a new feature. You need to review the code and provide feedback. Review the code and provide feedback.""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",350ada9195258adb2143a9334ec0ac774148baab,2024-03-16 20:40:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""You are the senior Python developer in a team. A junior developer has submitted a pull request for a new feature. You need to review the code and provide feedback. Review the code and provide feedback.""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
makisukurisu/teledictionary-bot,.github/workflows/code_review.yml,0b8275227e70f3b0e9af8d132f39a8d2f66c28cc,2024-03-02 14:21:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-4-turbo-preview # https://platform.openai.com/docs/models
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",82795302a0b2ad85754563426801cbe4fdc0d9bb,2024-03-02 14:26:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-4-turbo-preview # https://platform.openai.com/docs/models
",0,1
NEUQ-ACM/weekly-23,.github/workflows/coderevier.yml,33f0f488dedca6b92acd73d9e183ef48b07f0a6b,2023-08-21 09:22:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ${{secrets.PROMPT}}
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",33f0f488dedca6b92acd73d9e183ef48b07f0a6b,2023-08-21 09:22:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ${{secrets.PROMPT}}
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
WeBankFinTech/fes.js,.github/workflows/cr.yml,d11095355fe0d2ce7e6da0eaa39f91b28a69472c,2023-04-03 12:49:30,"name: Code Review


permissions:
  contents: read
  pull-requests: write


on:
  pull_request:
    types: [opened, reopened]


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1",d11095355fe0d2ce7e6da0eaa39f91b28a69472c,2023-04-03 12:49:30,"name: Code Review


permissions:
  contents: read
  pull-requests: write


on:
  pull_request:
    types: [opened, reopened]


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1",0,0
Mai0313/chess-ai,.github/workflows/openai-code-review.yml,173d8e2898d8f33d840e539295f54b4e2c2ba6ad,2024-04-14 22:43:46,"name: OpenAI Code Review

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  code-review:
    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: OpenAI Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Traditional Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.

  code-reviewers:
    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Get diff of the pull request
        id: get_diff
        shell: bash
        env:
          PULL_REQUEST_HEAD_REF: ""${{ github.event.pull_request.head.ref }}""
        run: |-
          git fetch origin ""${{ env.PULL_REQUEST_HEAD_REF }}:${{ env.PULL_REQUEST_HEAD_REF }}""
          git checkout ""${{ env.PULL_REQUEST_HEAD_REF }}""
          git diff ""origin/${{ env.PULL_REQUEST_HEAD_REF }}"" > ""diff.txt""
          # shellcheck disable=SC2086
          echo ""diff=$(cat ""diff.txt"")"" >> $GITHUB_ENV

      - name: OpenAI Code Reviewers
        uses: yu-iskw/gpt-code-review-action@v0.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_repository: ${{ github.repository }}
          github_pull_request_number: ${{ github.event.pull_request.number }}
          git_commit_hash: ${{ github.event.pull_request.head.sha }}
          model: gpt-3.5-turbo-16k
          temperature: 0.1
          max_tokens: 10000
          top_p: 1
          frequency_penalty: 0.0
          presence_penalty: 0.0
          pull_request_diff: |-
            ${{ steps.get_diff.outputs.pull_request_diff }}
          pull_request_chunk_size: 3500
          extra_prompt: |-
            You are very familiar with python too.
          log_level: ""DEBUG""
",173d8e2898d8f33d840e539295f54b4e2c2ba6ad,2024-04-14 22:43:46,"name: OpenAI Code Review

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  code-review:
    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: OpenAI Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Traditional Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.

  code-reviewers:
    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Get diff of the pull request
        id: get_diff
        shell: bash
        env:
          PULL_REQUEST_HEAD_REF: ""${{ github.event.pull_request.head.ref }}""
        run: |-
          git fetch origin ""${{ env.PULL_REQUEST_HEAD_REF }}:${{ env.PULL_REQUEST_HEAD_REF }}""
          git checkout ""${{ env.PULL_REQUEST_HEAD_REF }}""
          git diff ""origin/${{ env.PULL_REQUEST_HEAD_REF }}"" > ""diff.txt""
          # shellcheck disable=SC2086
          echo ""diff=$(cat ""diff.txt"")"" >> $GITHUB_ENV

      - name: OpenAI Code Reviewers
        uses: yu-iskw/gpt-code-review-action@v0.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_repository: ${{ github.repository }}
          github_pull_request_number: ${{ github.event.pull_request.number }}
          git_commit_hash: ${{ github.event.pull_request.head.sha }}
          model: gpt-3.5-turbo-16k
          temperature: 0.1
          max_tokens: 10000
          top_p: 1
          frequency_penalty: 0.0
          presence_penalty: 0.0
          pull_request_diff: |-
            ${{ steps.get_diff.outputs.pull_request_diff }}
          pull_request_chunk_size: 3500
          extra_prompt: |-
            You are very familiar with python too.
          log_level: ""DEBUG""
",0,0
LeoLeoLeoLei/LintStagedCICD,.github/workflows/code-review-bot.yml,01e6ee585aae2ef809bf1b5fb5e1e2b76b8211c2,2023-04-12 03:07:16,"
name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: 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
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL:
          top_p: 1
          temperature: 1",01e6ee585aae2ef809bf1b5fb5e1e2b76b8211c2,2023-04-12 03:07:16,"
name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: 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
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL:
          top_p: 1
          temperature: 1",0,0
soleo/xinjiangshao.com,.github/workflows/code-review.yml,a4b8c1d9c27f6bf977ebf6855930134796aea432,2023-03-22 02:30:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: ""Use ChatGPT for Code Review Recommendation""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",a4b8c1d9c27f6bf977ebf6855930134796aea432,2023-03-22 02:30:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: ""Use ChatGPT for Code Review Recommendation""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,0
hyperskill/content-lint,.github/workflows/chatgpt-code-review.yml,c076710b8502978a75b0b5b78137c69700b338b1,2023-08-10 14:17:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code_review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Below is a code patch for a Django + Vue.js project. You must look at the code to see if there are any bugs, improvements, or optimizations. You must praise good changes. You must ask questions if something is not clear. You must link to documentation if necessary
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2048
          MAX_PATCH_LENGTH: 2048 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",c5b223492c7b1cbdbdb1dbe657c2bbcbb8c863a0,2023-09-07 13:22:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code_review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: [self-hosted]
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Below is a code patch for a Django + Vue.js project. You must look at the code to see if there are any bugs, improvements, or optimizations. You must praise good changes. You must ask questions if something is not clear. You must link to documentation if necessary
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2048
          MAX_PATCH_LENGTH: 2048 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",27,2
Team-B1ND/alimo-ios,.github/workflows/code-review.yml,a005f32eead072a2708bb9e6a82494052800468a,2024-07-31 09:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_KEY }}
          LANGUAGE: Korean
",a005f32eead072a2708bb9e6a82494052800468a,2024-07-31 09:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_KEY }}
          LANGUAGE: Korean
",0,0
jschibelli/schibelli-next-wp,.github/workflows/main.yml,46578fc1a5b380e77fff573e7e5e34a20d38456a,2024-11-04 17:08:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please review the following code diff for any potential issues, confusions, or irregularities. Focus on identifying logical errors, code quality concerns, security vulnerabilities, and adherence to best practices. Provide clear and actionable feedback for improvements where necessary.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",46578fc1a5b380e77fff573e7e5e34a20d38456a,2024-11-04 17:08:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please review the following code diff for any potential issues, confusions, or irregularities. Focus on identifying logical errors, code quality concerns, security vulnerabilities, and adherence to best practices. Provide clear and actionable feedback for improvements where necessary.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
three-ping/SyncDay_Front,.github/workflows/deploy.yml,07735a666628966132542cfbd8f5c80b054aeaef,2024-11-27 10:39:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - ""develop""

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.7 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 6000
          MAX_PATCH_LENGTH: 8000",2dd09df7e4f389a65a762134b020400334381703,2024-11-29 08:20:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - ""develop""

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.7 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 6000
          MAX_PATCH_LENGTH: 8000",1,1
etff/web-novel,.github/workflows/deploy-develop.yml,b863861c74554c4a5e047bc02c30f2b1cd9acf9a,2023-04-13 12:42:48,"# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ ""main"" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

      # 추가
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
",4ce28074e3d30ce6ae3d380f88e274bb71e6e1d9,2023-05-07 05:37:02,"# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ ""develop"" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

      # 추가
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
",23,12
fresh-trash-project/fresh-trash-backend,.github/workflows/code_review_bot.yml,2a33be309c7c6d47230fffc5972bc12ca86ac7dc,2024-06-02 03:50:31,"name: 🤖Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          # https://github.com/PickleBoxer/dev-chatgpt-prompts?tab=readme-ov-file#code-review
          PROMPT: ""I'm working on a JAVA project and I need you to review my code and suggest improvements""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",2a33be309c7c6d47230fffc5972bc12ca86ac7dc,2024-06-02 03:50:31,"name: 🤖Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          # https://github.com/PickleBoxer/dev-chatgpt-prompts?tab=readme-ov-file#code-review
          PROMPT: ""I'm working on a JAVA project and I need you to review my code and suggest improvements""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
mopn-official/contract-core,.github/workflows/cr.yml,5ce089e89ed4b5df916d0da62b1d8bde45046e2a,2023-11-13 08:33:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:
",5ce089e89ed4b5df916d0da62b1d8bde45046e2a,2023-11-13 08:33:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:
",0,0
zae-park/zae-engine,.github/workflows/code_review_gpt.yml,c92641a4d0b8a37e0fe8d9c662f349c1d73ff44b,2024-12-13 06:23:47,"name: Code Review with GPT

on:
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened]


permissions:
  contents: read
  pull-requests: write



jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",551c7fa4ba293aebfe92b53285439654c6e73ff1,2024-12-18 01:58:17,"name: Code Review with GPT

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - dev
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  check-trigger:
    runs-on: ubuntu-latest

    outputs:
      trigger_found: ${{ steps.set_trigger.outputs.trigger_found }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check Trigger from PR or Comment
        id: check_trigger
        env:
          PR_TITLE: ""${{ github.event.pull_request.title }}""
          PR_BODY: ""${{ github.event.pull_request.body }}""
          COMMENT_BODY: ""${{ github.event.comment.body }}""
          EVENT_NAME: ""${{ github.event_name }}""
        run: |
          echo ""Checking PR or Comment for trigger '!GPT'...""
          TRIGGER_FOUND=false

          if [ ""$EVENT_NAME"" == ""pull_request"" ]; then
            if echo ""$PR_BODY"" | grep -iFq ""!GPT""; then
              TRIGGER_FOUND=true
            fi
          elif [ ""$EVENT_NAME"" == ""issue_comment"" ]; then
            # Pull Request의 댓글인지 확인
            if [ -n ""${{ github.event.issue.pull_request }}"" ]; then
              if echo ""$COMMENT_BODY"" | grep -iFq ""!GPT""; then
                TRIGGER_FOUND=true
              fi
            fi
          fi

          echo ""Trigger found: $TRIGGER_FOUND""
          echo ""::set-output name=trigger_found::$TRIGGER_FOUND""

      - name: Set Trigger Output
        id: set_trigger
        run: |
          echo ""::set-output name=trigger_found::$TRIGGER_FOUND""

  review:
    needs: check-trigger
    runs-on: ubuntu-latest
    if: needs.check-trigger.outputs.trigger_found == 'true'
    steps:
      - name: Run GPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

      - name: Skip Job if Trigger Not Found
        run: |
          echo ""⚠️ Trigger not found. Skipping the job.""
",4,7
JoosungKwon/Questioning-Musseukgi,.github/workflows/code-review-by-chat-gpt.yml,c9b8a8d74b12e1fdc339784a28fd698c4e6cece0,2023-04-05 08:35:29,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",c9b8a8d74b12e1fdc339784a28fd698c4e6cece0,2023-04-05 08:35:29,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,0
JunJD/time_stone_front,.github/workflows/cr.yml,1c38b377eece4498156e424602209faeff84f5d7,2023-07-16 12:16:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
          OPENAI_API_ENDPOINT: https://run.dingjunjie.com/v1
          MODEL: gpt-3.5-turbo-16k-0613
          LANGUAGE: Chinese
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff'
          temperature: 0 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1c38b377eece4498156e424602209faeff84f5d7,2023-07-16 12:16:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
          OPENAI_API_ENDPOINT: https://run.dingjunjie.com/v1
          MODEL: gpt-3.5-turbo-16k-0613
          LANGUAGE: Chinese
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff'
          temperature: 0 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
Bigismall/railroads,.github/workflows/pr.yml,11bc797f1dfcbddb7a03a83d32fd58c019b769ec,2023-08-08 06:02:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GITHUBPR_OPENAI_API_KEY }}
",0289ba653d6a84ee061244e44092b7e973af887e,2023-08-08 11:38:52,"name: Code Review with Chat-GPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GITHUBPR_OPENAI_API_KEY }}
",0,1
27-kusitms-6/Frontend,.github/workflows/code_review.yml,72f1a317eaa623b07fc1d610938cbf6c340c89f4,2023-04-20 08:12:20,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",77afe2eeb9fb41ef70ee31c6e698e91059f59134,2023-05-22 08:13:15,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",32,1
jgeofil/mlreadme-astro-blog,.github/workflows/cr.yml,42538c091dbf0c24dc16d5cbc71254cbc8df206f,2024-11-05 09:19:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma
",1c6c7853151d3586c02c15b3c4f25da0cfcae0e1,2024-12-24 05:23:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma
",48,2
imduchuyyy/test-code-review-bot,.github/workflows/reviewer.yml,b547fddb4485151a5f5cfb567121ef8fd1a7597d,2023-05-10 09:16:42,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0f5fffc3d032fe25ed0e0045fc46de6a9200119c,2023-05-10 09:40:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          top_p: 1
          temperature: 1
",0,2
YJU-OKURA/project_minori-next-deployment-repo,.github/workflows/openai_code_review.yml,f3d14465893216e68d61add1149c94611382d0bf,2024-02-04 03:44:06,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",d3c06302a0809c79a65d69e539a5b1cad07756e1,2024-02-12 15:10:13,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
    types: [opened, synchronize]
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",8,1
Datzu712/nodecord,.github/workflows/cr.yml,fb8e1c17fad0b888e47a257ed0feaee21b1bcd27,2023-06-02 02:24:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",fb8e1c17fad0b888e47a257ed0feaee21b1bcd27,2023-06-02 02:24:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,0
TeTedo/practice_springboot,.github/workflows/code-review-by-chat-gpt.yml,6d40e78230755c1edba43c0fd41fa450d40d1fd8,2023-05-20 12:28:34,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",6d40e78230755c1edba43c0fd41fa450d40d1fd8,2023-05-20 12:28:34,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
NextIntern/NextIntern-Frontend,.github/workflows/cr.yml,7dc427d33d25131613786fa9fbf1d08d2ccc2160,2024-05-22 15:53:52,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",1cc9acbe039921108e1348025d2ddf1da555b659,2024-07-19 19:17:09,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",58,1
FanKick/Fan_Kick,.github/workflows/code_review_from_chatgpt.yml,cd7ecf704cb74d44a86826ceca0bf73776d912dc,2024-07-06 00:17:40,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",1bcddff06187e65298e1f5ec42858a68e0655c3a,2024-07-06 01:06:07,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4-turbo
          PROMPT: |
            You are a performance optimization expert. Review this code and pay attention to the following aspects:
            1. Inefficient algorithms
            2. Unnecessary loops or operations
            3. Opportunities for memory usage optimization
            4. Database query optimization (if applicable)
            Please provide specific suggestions to improve performance.
",0,1
autoaim-jp/xlogin-jp,.github/workflows/chatpt-codereview.yml,104b92265f1f613b70c41387a564115ce000b7a6,2024-03-26 16:25:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          # MODEL: gpt-4
          top_p: 1
          temperature: 1

",4f125b407c86fe3c12c2d109c89a5c1257d2e29d,2024-03-26 16:28:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          # MODEL: gpt-4
          top_p: 1
          temperature: 1

",0,1
Dankosik/invest-api-java-sdk-starter,.github/workflows/cr.yml,9f36ac5f106cc4b377c87f1f47945b38fa3bffe7,2023-12-04 17:50:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an expert kotlin/java developer, your task is to review a pull requests. Please check if there are any confusions or irregularities in the following code diff""",c2cc72bb7d5e0e4e4c66d8fbb91ddd72f8dd45b1,2024-04-06 08:36:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_TUNNEL_API_KEY }}
          LANGUAGE: Russian
          MODEL: openchat
          OPENAI_API_ENDPOINT: https://autotests.ai/adapter/v1
          PROMPT: ""You are an experienced Kotlin/Java developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",123,7
YJU-OKURA/project_minori-express-deployment-repo,.github/workflows/openai_code_review.yml,c2b444d8ff432125d9310d5fe000aeb25eb230d9,2024-06-11 07:14:22,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          LANGUAGE: Korean
",c2b444d8ff432125d9310d5fe000aeb25eb230d9,2024-06-11 07:14:22,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, reopened, synchronize]
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          LANGUAGE: Korean
",0,0
egg528/corporate-insights-backend,.github/workflows/gpt-code-review.yml,e3591b524d007303e669129c27295e681715e424,2024-04-15 12:58:07,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
          max_tokens: 10000

",ee2863d9235576787c80ddf1ad971ad7af786a17,2024-04-25 13:05:02,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo

",10,3
pilardib/github-actions-dotnet-webapp,.github/workflows/dotnet-build.yml,e4e2cf74956f378723242db5dc67324e0ab05389,2024-06-05 15:36:36,"name: Teste GitHub Actions

on:
    push:
    schedule:
        - cron: 0 * * * *

jobs:
    job1:
        name: checks-commits
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: commit-check/commit-check-action@v1
              with:
                message: true
                branch: true
                author-name: true
                author-email: true
                commit-signoff: true
                job-summary: true
    job2:
        name: chatgpt-check-code
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    job3:
        name: checks-status
        needs: job2
        runs-on: ubuntu-latest
        steps:
            - run: echo 'Status ${{ job.status }}'
        ",f9fa979658d02ab6bd8a46fdcb863d9107e9ae4a,2024-07-01 18:09:36,"name: Teste GitHub Actions

on:
    push
#    schedule:
#        - cron: 0 * * * *

jobs:
    job1:
        name: build and test code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup-dotnet
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '6.0.x'
            - name: Install dependencies
              run: dotnet restore myprojexample.csproj

    job2:
        name: chatgpt-check-code
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    job3:
        name: checks-status
        needs: job2
        runs-on: ubuntu-latest
        steps:
            - run: echo 'Status ${{ job.status }}'
        ",26,8
lwshen/portfolio-remix,.github/workflows/cr.yml,25c8e185d6328aa1202aa3f768942ea97b9d98fc,2023-04-08 12:29:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese",d46864b46323f370f124281b30d21da88b58db0f,2024-06-05 05:55:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_API_ENDPOINT }}
          MODEL: gpt-4-turbo
          LANGUAGE: Chinese",423,1
m0nclous/click-claim-bot,.github/workflows/code-review.yml,505e9eb7afe5f2d0b20944f13e71e2e867354376,2024-07-08 17:56:20,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, reopened, synchronize]

jobs:
    chat-gpt:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@v1.0.13
              env:
                  # В начале каждого задания GitHub автоматически создает уникальный секретный токен GITHUB_TOKEN
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

                  # Токен из личного кабинета api.proxyapi.ru
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

                  # Язык Code Review
                  LANGUAGE: Russian

                  # OpenAPI endpoint. api.proxyapi.ru используется для РФ
                  OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1

                  # Используемая модель ChatGPT
                  MODEL: gpt-3.5-turbo

                  # Стартовый контекст для ChatGPT
                  PROMPT: Вы опытный разработчик на NodeJS, и ваша работа — проверять Pull Request. Пожалуйста, просмотрите следующий код на предмет каких-либо недоразумений или нарушений. Не тратьте время на комментарии о том, что уже работает отлично. Жду конструктивной критики и предложений по улучшению кода, только полезные и обстоятельные замечания.

                  # Максимальное количество токенов, которое может быть сгенерировано в завершении.
                  max_tokens: 4096
",505e9eb7afe5f2d0b20944f13e71e2e867354376,2024-07-08 17:56:20,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, reopened, synchronize]

jobs:
    chat-gpt:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@v1.0.13
              env:
                  # В начале каждого задания GitHub автоматически создает уникальный секретный токен GITHUB_TOKEN
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

                  # Токен из личного кабинета api.proxyapi.ru
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

                  # Язык Code Review
                  LANGUAGE: Russian

                  # OpenAPI endpoint. api.proxyapi.ru используется для РФ
                  OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1

                  # Используемая модель ChatGPT
                  MODEL: gpt-3.5-turbo

                  # Стартовый контекст для ChatGPT
                  PROMPT: Вы опытный разработчик на NodeJS, и ваша работа — проверять Pull Request. Пожалуйста, просмотрите следующий код на предмет каких-либо недоразумений или нарушений. Не тратьте время на комментарии о том, что уже работает отлично. Жду конструктивной критики и предложений по улучшению кода, только полезные и обстоятельные замечания.

                  # Максимальное количество токенов, которое может быть сгенерировано в завершении.
                  max_tokens: 4096
",0,0
serbi2012/riaxo-developer-blog-frontend,.github/workflows/cr.yml,df75cb18ab3c4b0a6ec002f966193cb25e13f65f,2023-11-13 01:46:56,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Korean
                  MODEL: gpt-3.5-turbo
",df75cb18ab3c4b0a6ec002f966193cb25e13f65f,2023-11-13 01:46:56,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Korean
                  MODEL: gpt-3.5-turbo
",0,0
ScooterParkBuddy/KickboardParkBuddy,.github/workflows/codereview.yml,4e68c2d4572c8007db226472d61d614dfc66b45f,2023-09-23 07:14:08,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.CODE_REVIEW_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",a219e712d163dc0136bdd3779bee0983808e22c6,2023-09-23 08:21:15,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_API_KEY }}
          LANGUAGE: Korean
",0,3
codestates-seb/fe-sprint-my-agora-states-server,.github/workflows/cr.yml,5ee1d67ad96b95748d8a1a2208062ca466c8b7fe,2023-04-06 17:00:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",e1d6fd244e09a608e3a6d41d29bdedd60bf94de4,2023-04-06 17:11:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,2
anjiyoo/momento,.github/workflows/codereview_chatgpt.yml,7a22e2fc4467266483db2f9f3f6dcbfbbfcdd14e,2024-07-08 00:45:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
      types:
      - opened
      - synchronize

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",743ef0189b5d624c8af5650fd91e95eddba015a7,2024-07-09 09:07:36,"# .github/workflows/codereview_chatgpt.yml 파일 생성

name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL : gpt-3.5-turbo",1,1
In-Self-Improvement/weekly-app,.github/workflows/cr.yml,5106868c2f794f29bdb41902eb604409f41ae24f,2024-12-03 14:32:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: ""*.js,*.ts"" # glob pattern or regex pattern to include files, separated by comma

          # IF you are using azure openai
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",8ce4d09248168e518283c4564c4e475af209da91,2024-12-06 14:24:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # glob pattern or regex pattern to ignore files, separated by comma

          # IF you are using azure openai
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",2,1
PuddyProject/Puddy_BackEnd,.github/workflows/cr.yml,3c418e49a86fc518d0baac1a30e119b7057aa850,2023-04-18 15:47:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@feature
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",2376d14ac6727ee57f9657e96f467ead7f37a49d,2023-04-19 12:23:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,1
takemo101/any-ai-codereview-test,.github/workflows/codereview.yml,58ddc8e0fe8a3fade381177ebcfdc0a3eaa326ca,2025-01-20 12:01:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: |
            あなたは経験豊富なRust開発者です。ユーザーが提供するRustコードの**重大な問題点**を指摘し、**簡潔なマークダウン形式**で報告してください。

            ## レビューの焦点
            以下の観点から、**バグ、エラー、セキュリティ脆弱性、著しいパフォーマンス低下**など、コードの品質を大きく損なう問題にのみ焦点を当ててください。
            *   **バグとエラー:** 実行時エラー、クラッシュ、未定義動作を引き起こす可能性のあるもの
            *   **セキュリティ:** 重大な脆弱性
            *   **パフォーマンス:** 著しいボトルネック
            *   **設計:** 明らかに誤った設計や、保守性を著しく損なう構造
            *   **可読性**: 可読性が極めて低い箇所
            *   **テスト**: テストが不足し、それがクリティカルな問題につながる場合

            ## 報告形式 (マークダウン)

            ```markdown
            ## コードレビュー

            ### 重大な問題点
            *   **観点:** (例: バグとエラー)
            *   **問題の簡潔な説明:**
            *   **改善提案:**
            *   **コード例 (必要な場合):** 差分がわかりやすいように記述

            ### 全体評価
            コードの品質を10段階で評価 (1が最低、10が最高。重大な問題がない場合は10)。

            評価: (評価)
            ```
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
          IGNORE_PATTERNS: *.md
          INCLUDE_PATTERNS: *.rs
",638f3678859b7fc55b282401a1fe1263480b5485,2025-01-20 14:23:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  REVIEW_API_KEY: ${{ secrets.REVIEW_API_KEY }}
  REVIEW_API_MODEL: ${{ secrets.REVIEW_API_MODEL }}

jobs:
  codereview:
    if: ${{ contains(github.event.pull_request.title, ':review') }}
    runs-on: ubuntu-latest
    steps:
      - name: Display PR title
        run: |
          echo ""PullRequest: ${{ github.event.pull_request.title }}""
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ env.REVIEW_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://openrouter.ai/api/v1
          MODEL: ${{ env.REVIEW_API_MODEL }}
          PROMPT: |
            あなたは経験豊富なRust開発者として、以下のRustコードをレビューし、`報告形式`に従って重大な問題点のみを簡潔に報告してください。

            **報告形式以外の内容は一切記述しないでください。**

            報告形式：
            ```markdown
            ### 問題点

            *   **観点:** (例: バグとエラー)
            *   **問題の簡潔な説明:**
            *   **改善提案:**
            *   **コード例 (必要な場合):** 差分がわかりやすいように記述
            ```

            レビュー観点：
            - バグ: 実行時エラー、クラッシュ、未定義動作を引き起こす可能性のあるもの
            - セキュリティ: 重大な脆弱性
            - パフォーマンス: 著しいボトルネック
            - 設計: 保守性を著しく損なう構造
            - 可読性：可読性が極めて低い箇所
            - テスト: テストが不足し、クリティカルな問題につながる場合

            軽微な問題、好みの問題は無視してください。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
          IGNORE_PATTERNS: '*.md'
          INCLUDE_PATTERNS: '*.rs'
",0,27
xnsl291/stockAccount,.github/workflows/cr.yml,00d42822af4b9b3180f2d640bf36e4196fd07b45,2024-04-23 13:09:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",36a0d2acdfe931b35e0002bd697b2bc6244e6d64,2024-04-23 13:19:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.head_commit.message, '#code-review') }} || ${{ contains(github.event.head_commit.message, '#code_review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.GPT_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo

",0,1
jimyungkoh/ecommerce-service-server,.github/workflows/code_review.yml,ca0e51d64ed4e81ba8b3f3307e562b3dfb146fc1,2024-10-06 12:55:42,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional: Add your own API key
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",6e770c93f15f81b9d0b0585df9455decc4cf2623,2024-10-08 15:40:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional: Add your own API key
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
          PROMPT: ${{secrets.PROMPT}}
",2,1
jinwp/ootd,.github/workflows/cr.yml,9b8c0defa190b2c99c11819ffd0dd7627f7ae919,2024-11-18 12:38:34,"ame: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gpt-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",9b8c0defa190b2c99c11819ffd0dd7627f7ae919,2024-11-18 12:38:34,"ame: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gpt-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
kkihwan22/creame,.github/workflows/code-review-bot.yml,a24f4143a3e752bcb8b40d5bc4c99c49ee13ac13,2023-04-16 07:04:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL:
          top_p: 1
          temperature: 1
",a24f4143a3e752bcb8b40d5bc4c99c49ee13ac13,2023-04-16 07:04:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL:
          top_p: 1
          temperature: 1
",0,0
nak-honest/java-baseball-for-review,.github/workflows/gpt_review.yml,bb51be3952929c439c64b848218ed95d9b1a5667,2023-12-13 05:49:31,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4-1106-preview
",bb51be3952929c439c64b848218ed95d9b1a5667,2023-12-13 05:49:31,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4-1106-preview
",0,0
JunHCha/sessionary,.github/workflows/2-review-code.yml,6ddb4351e06267dc49e006c1984f35d84ef4f37e,2024-10-19 18:19:14,"name: Review codes of the PR

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ready_for_review, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          temperature: 0.3
",6ddb4351e06267dc49e006c1984f35d84ef4f37e,2024-10-19 18:19:14,"name: Review codes of the PR

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ready_for_review, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          temperature: 0.3
",0,0
EGPAFMalawiHIS/test-project,.github/workflows/code-reviews.yml,886807ab006e77d7f142578ed1348dd5f470e161,2023-12-08 11:11:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English # https://platform.openai.com/docs/api-reference/engines
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 'Scrutinize this code and provide meaningful reviews to the user' # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",886807ab006e77d7f142578ed1348dd5f470e161,2023-12-08 11:11:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English # https://platform.openai.com/docs/api-reference/engines
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 'Scrutinize this code and provide meaningful reviews to the user' # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
g471000/coding-alarm-clock,.github/workflows/chatgpt-code-review.yml,698405e9a549aa037b35d829c5104252dd400bbc,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",7b7bafe552ee1ab8b7c7d7f49b0d01aeb93a5404,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,2
thisisnabi/Shortener,.github/workflows/main.yml,8c0f5618eb181c277813765d5cbd794786245693,2024-09-26 14:22:22,"name: shortener

env:
  DOTNET_VERSION: '8'

on:
  pull_request:
    branches: [ ""main"" ]
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Get the latest code
          uses: actions/checkout@v3

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}

        - name: Restore
          run: dotnet restore

        - name: Build
          run: dotnet build --no-restore

        - name: Test
          run: dotnet test --no-build

        - name: GPT Reviewer
          uses: anc95/ChatGPT-CodeReview@main
          env:
            GITHUB_TOKEN: ${{ secrets.GTOKEN }}
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            LANGUAGE: English
            OPENAI_API_ENDPOINT: https://api.openai.com/v1
            MODEL: GPT-3.5-turbo
            PROMPT: ""Please check the naming method convention and suggest best in the following code diff""
            top_p: 1
            temperature: 1
            max_tokens: 10000
            MAX_PATCH_LENGTH: 10000





",a9e9c6afd53d679d114407ac3e885d7101555315,2024-09-28 14:03:42,"name: shortener

env:
  DOTNET_VERSION: '8'

on:
  pull_request:
    branches: [ ""main"" ]
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Get the latest code
          uses: actions/checkout@v3

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}

        - name: Restore
          run: dotnet restore

        - name: Build
          run: dotnet build --no-restore

        - name: Test
          run: dotnet test --no-build

        - name: GPT Reviewer
          uses: anc95/ChatGPT-CodeReview@main
          env:
            GITHUB_TOKEN: ${{ secrets.GTOKEN }}
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            LANGUAGE: English
            OPENAI_API_ENDPOINT: https://api.openai.com/v1
            MODEL: gpt-3.5-turbo
            PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
            top_p: 1
            temperature: 1
            max_tokens: 10000
            MAX_PATCH_LENGTH: 10000





",1,3
bottle-note/bottle-note-api-server,.github/workflows/code-review.yml,9b8370152cca390867b26ebe9b72857522f79405,2024-05-01 06:57:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",9b8370152cca390867b26ebe9b72857522f79405,2024-05-01 06:57:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
marsilvarodrigues/pmrodrigues,.github/workflows/code_review.yml,63ad76c4329491ceffd1e5eb9e9395be649aab7a,2024-04-04 09:57:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Portuguese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",63ad76c4329491ceffd1e5eb9e9395be649aab7a,2024-04-04 09:57:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Portuguese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
luizleiteoliveira/tutorials,.github/workflows/review-pr.yml,e62064fd4e775831985065aa0557d9daa97cf3d0,2025-01-13 18:12:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Portuguese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.go,*.ts # glob pattern or regex pattern to include files, separated by comma
",fadf5b11344045a788694535bc99b583bfad381a,2025-01-13 19:26:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Portuguese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3000
          MAX_PATCH_LENGTH: 3000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma",0,6
Capstone-Walking/Capstone-Walking-BE,.github/workflows/gpt_code_review.yml,08def7a30a69f8d98110693420ecb84ed3547fcb,2024-04-13 15:05:37,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",08def7a30a69f8d98110693420ecb84ed3547fcb,2024-04-13 15:05:37,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",0,0
svasenkov/test-review,.github/workflows/code-review.yml,ca9de89850096a32bef426f6cc42b875a104ecc2,2024-05-04 02:02:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-rewview:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          // GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          // OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OLLAMA_API_KEY: sk-af603c6098d2444b91f53e210c106476
          OLLAMA_KEY: sk-af603c6098d2444b91f53e210c106476
          OLLAMA_TOKEN: sk-af603c6098d2444b91f53e210c106476
          LANGUAGE: Russian
          MODEL: openchat
          OPENAI_API_ENDPOINT: https://autotests.ai/adapter/v1
          PROMPT: ""You are an experienced Java automed QA developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",e18e8922c0544d46f34621709c5612e236f6c111,2024-05-04 02:44:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-rewview:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OLLAMA_API_KEY: sk-af603c6098d2444b91f53e210c106476
          OLLAMA_KEY: sk-af603c6098d2444b91f53e210c106476
          OPENAI_API_KEY: sk-af603c6098d2444b91f53e210c106476
          LANGUAGE: Russian
          MODEL: openchat
          OPENAI_API_ENDPOINT: https://autotests.ai/adapter/v1
          PROMPT: ""You are an experienced Java automed QA developer and your job is to review pull requests with homeworks. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes. Check that 'build.gradle', '.gitignore', 'TestBase.java' files exists.""
",0,4
linyqh/NarratoAI,.github/workflows/codeReview.yml,e874999bd11fb1f23234eb4cecb977292bd8f53a,2024-08-12 13:35:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  # 在提合并请求的时候触发
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

jobs:
  codeReview:
    runs-on: ubuntu-latest
    steps:
      - name: GPT代码逻辑检查
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: https://api.groq.com/openai/v1
          MODEL: llama-3.1-70b-versatile
          LANGUAGE: Chinese
",e874999bd11fb1f23234eb4cecb977292bd8f53a,2024-08-12 13:35:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  # 在提合并请求的时候触发
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

jobs:
  codeReview:
    runs-on: ubuntu-latest
    steps:
      - name: GPT代码逻辑检查
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: https://api.groq.com/openai/v1
          MODEL: llama-3.1-70b-versatile
          LANGUAGE: Chinese
",0,0
opentiny/tiny-engine-webservice,.github/workflows/ai-code-review.yml,4810aa7d7f14393d82cc5f8eae8b6a69dd9045e1,2024-03-23 08:26:04,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          MAX_TOKENS: 4096
          MAX_PATCH_LENGTH: 10000
",4810aa7d7f14393d82cc5f8eae8b6a69dd9045e1,2024-03-23 08:26:04,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          MAX_TOKENS: 4096
          MAX_PATCH_LENGTH: 10000
",0,0
OpenEduTech/MPSD,.github/workflows/codereivew.yml,e318e80e8f7127bb78a5177a9eb2b729a6c2c036,2023-03-20 07:27:46,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",e318e80e8f7127bb78a5177a9eb2b729a6c2c036,2023-03-20 07:27:46,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_12-classroom,.github/workflows/code-review.yml,07ad2594729e3e720e93afaee310948bb5afa99a,2024-07-24 06:07:39,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",07ad2594729e3e720e93afaee310948bb5afa99a,2024-07-24 06:07:39,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
AirtestProject/Airtest,.github/workflows/cr.yml,b1f3b97f7f9bffb4ee4b9aab47aa6d147b107cf9,2023-03-22 07:34:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",b1f3b97f7f9bffb4ee4b9aab47aa6d147b107cf9,2023-03-22 07:34:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",0,0
KhanhGaker/Alarm_Clock_it,.github/workflows/chatgpt-code-review.yml,e33b1cb1995c37a1f977607f73ebef5e80e6f694,2024-04-16 03:49:55,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",e33b1cb1995c37a1f977607f73ebef5e80e6f694,2024-04-16 03:49:55,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,0
HwangJunha/tdd,.github/workflows/code-review.yml,ffd7a4bcb25fc11c457bb4455b1be0df42e23d37,2024-08-28 16:24:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: contains(github.event.*.labels.*.name, 'chatGPT')
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
",51e8f1e4f5776b1b51528687b52f85963cb8aff6,2024-08-29 03:52:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: contains(github.event.*.labels.*.name, 'chatGPT')
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          PROMPT: ${{secrets.OPENAI_PROMPT}}
",0,1
Neck-Life/neck-life-be,.github/workflows/gpt_code_review.yml,0797c3c84bb6b34852517e9481e4d3687581f8fa,2024-07-09 20:19:50,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",f5202d518da84bedfac26f13523564ab1551b4b9,2024-07-18 09:04:24,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",8,2
jsjfjsfjkm-Song/NarratoAI-,.github/workflows/codeReview.yml,e874999bd11fb1f23234eb4cecb977292bd8f53a,2024-08-12 13:35:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  # 在提合并请求的时候触发
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

jobs:
  codeReview:
    runs-on: ubuntu-latest
    steps:
      - name: GPT代码逻辑检查
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: https://api.groq.com/openai/v1
          MODEL: llama-3.1-70b-versatile
          LANGUAGE: Chinese
",e874999bd11fb1f23234eb4cecb977292bd8f53a,2024-08-12 13:35:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  # 在提合并请求的时候触发
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

jobs:
  codeReview:
    runs-on: ubuntu-latest
    steps:
      - name: GPT代码逻辑检查
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_ENDPOINT: https://api.groq.com/openai/v1
          MODEL: llama-3.1-70b-versatile
          LANGUAGE: Chinese
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_14-classroom,.github/workflows/code-review.yml,f0adf669700a1569039277af866a53d2c1a11ec6,2024-07-24 06:11:20,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",f0adf669700a1569039277af866a53d2c1a11ec6,2024-07-24 06:11:20,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
ShivShrivas/Music-With-Alarm,.github/workflows/chatgpt-code-review.yml,698405e9a549aa037b35d829c5104252dd400bbc,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",7b7bafe552ee1ab8b7c7d7f49b0d01aeb93a5404,2023-04-04 15:08:13,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,2
Tohtig/ChatGPT_for_QA,.github/workflows/code-review.yml,bcb8fe385b44ac5ca4949a18207f91829308caff,2024-03-12 19:34:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Java automed QA and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",bcb8fe385b44ac5ca4949a18207f91829308caff,2024-03-12 19:34:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Java automed QA and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",0,0
JuheonOh/electrip,.github/workflows/cr.yml,ecacf9c51d065838645e57c2f74e6ff2ee2a0c48,2024-08-06 09:14:28,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",ecacf9c51d065838645e57c2f74e6ff2ee2a0c48,2024-08-06 09:14:28,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_11-classroom,.github/workflows/code-review.yml,51623d6aa9a5005d0c15061d5fde7b8a242abd6f,2024-07-24 06:04:35,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",51623d6aa9a5005d0c15061d5fde7b8a242abd6f,2024-07-24 06:04:35,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
somebody009/Academy_website,.github/workflows/cr.yml,747bf41ec07f26009e0854a70bd71e003fe620ea,2024-02-14 05:41:04,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",f33b98883e6e7f2117990e7e8cf0731676414510,2024-02-27 06:18:41,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",13,1
sajithkoshy/Ecommerce-project,.github/workflows/cr.yml,69dc49d47bebcda61a7f2bd1a9a356ea99aa3d17,2024-07-26 05:37:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",69dc49d47bebcda61a7f2bd1a9a356ea99aa3d17,2024-07-26 05:37:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
yuriykulikov/SimplePaymentTracker,.github/workflows/chatgpt-code-review.yml,3efc707988caca6ee9156150a7d5be6a03a459c6,2023-04-06 15:35:04,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",3efc707988caca6ee9156150a7d5be6a03a459c6,2023-04-06 15:35:04,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ChatGPT:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,0
aadeshbhujbal/DSA-Website,.github/workflows/cr.yml,747bf41ec07f26009e0854a70bd71e003fe620ea,2024-02-14 05:41:04,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",f33b98883e6e7f2117990e7e8cf0731676414510,2024-02-27 06:18:41,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",13,1
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_10-classroom,.github/workflows/code-review.yml,4f87c8774266da47c7aead1a1ff07d53d707ac0f,2024-07-24 06:00:31,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",4f87c8774266da47c7aead1a1ff07d53d707ac0f,2024-07-24 06:00:31,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ..

    - name: Build the project
      run: |
        cd build
        make

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: build/feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
2623642447/Neev,.github/workflows/codereivew.yml,e318e80e8f7127bb78a5177a9eb2b729a6c2c036,2023-03-20 07:27:46,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",e318e80e8f7127bb78a5177a9eb2b729a6c2c036,2023-03-20 07:27:46,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
TeTedo/delivery-api,.github/workflows/cr.yml,35e30d42365de87e0ac4528e3a929d6a0197a644,2023-06-18 12:31:57,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",edda07d425cd74e8a91afefcd04bdf06e73d75ff,2023-06-20 15:45:14,"name: CR - Code Review By Chat Gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  codeReviewByChatGpt:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",2,1
Synaptrix/ChatGPT-Desktop,.github/workflows/code-review.yml,1574f28b75a27fe6eea67c0ab14b1389ad8d398c,2023-03-23 21:25:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo-0301
          top_p: 1
          temperature: 0.8
",1574f28b75a27fe6eea67c0ab14b1389ad8d398c,2023-03-23 21:25:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo-0301
          top_p: 1
          temperature: 0.8
",0,0
AirtestProject/Poco,.github/workflows/cr.yml,3e90e5ebe2ba82305d0c664553de8c3d2acb5200,2023-03-29 08:40:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",3e90e5ebe2ba82305d0c664553de8c3d2acb5200,2023-03-29 08:40:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",0,0
bottle-note/bottle-note-frontend,.github/workflows/code-review.yml,2974a7031201066ee6d2bdb4bd6e56557ec359e6,2024-05-01 11:38:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",2974a7031201066ee6d2bdb4bd6e56557ec359e6,2024-05-01 11:38:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
99winnmin/moa-backend,.github/workflows/cr.yml,c5a5c5e4ef1ffb4bacbed0c79be905e03a893f91,2023-03-27 10:27:45,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",c5a5c5e4ef1ffb4bacbed0c79be905e03a893f91,2023-03-27 10:27:45,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
FISCO-BCOS/FISCO-BCOS,.github/workflows/cr.yml,0203982429ee06909b47410629c1b333ff69a957,2023-03-13 11:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",6ce0724e1ac454cf92461f41f1d1bf433dacb18f,2023-03-16 07:39:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write
  # id-token: read

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",2,3
SangJLee1103/FLO-RX,.github/workflows/main.yml,2b55214d2e62d676bdf7665f08731db14089dd94,2024-03-27 06:19:11,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_APPI_KEY }}
          LANGUAGE: Korean
",2b55214d2e62d676bdf7665f08731db14089dd94,2024-03-27 06:19:11,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_APPI_KEY }}
          LANGUAGE: Korean
",0,0
JiMoJjing/Overwatch,.github/workflows/cr.yml,5eb7ea552eaeacffad190f16db2aae895dbf02ef,2024-05-29 07:24:17,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",5eb7ea552eaeacffad190f16db2aae895dbf02ef,2024-05-29 07:24:17,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
NEUQ-ACM/weekly-report-24,.github/workflows/coderevier.yml,980fb27d9a76508c8e65ff0bd1c44cad30774e34,2024-05-30 02:46:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ${{secrets.PROMPT}}
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",980fb27d9a76508c8e65ff0bd1c44cad30774e34,2024-05-30 02:46:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ${{secrets.PROMPT}}
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
serbi2012/riaxo-developer-blog-backend,.github/workflows/cr.yml,6328bbec7326f99078856ac006cd1579295b69f0,2023-11-13 01:53:09,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Korean
                  MODEL: gpt-3.5-turbo
",6328bbec7326f99078856ac006cd1579295b69f0,2023-11-13 01:53:09,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Korean
                  MODEL: gpt-3.5-turbo
",0,0
Lenok1998/Chat_GPT_for_qa,.github/workflows/cr.yml,237ed0073f71c5be8c775430710f4edf19b8f84e,2024-09-29 18:11:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Java automed QA and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""",e79336e56954e0964d3dcf8793b5748156768af0,2024-10-12 15:35:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-rewview:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          move to secrets!
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          MODEL: openchat
          OPENAI_API_ENDPOINT: https://autotests.ai/adapter/v1
          PROMPT: ""You are an experienced Java Automation QA developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",12,4
nyasuto/db,.github/workflows/cr.yml,395055519dc30f0bb24acf4cc14fbb133a056aa3,2024-11-29 11:17:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1

",395055519dc30f0bb24acf4cc14fbb133a056aa3,2024-11-29 11:17:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1

",0,0
transmission-remote-gui/transgui,.github/workflows/chatgpt-codereview.yml,26a1e99d586c82d01a3816f465976db843992205,2023-05-21 17:37:03,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-4
          top_p: 1
          temperature: 0.2
",26a1e99d586c82d01a3816f465976db843992205,2023-05-21 17:37:03,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-4
          top_p: 1
          temperature: 0.2
",0,0
gdsc-ssu/garbage-collector-client,.github/workflows/cr.yml,f7c5fa712443530687c79632ed569563d08c308b,2023-03-15 11:42:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",f7c5fa712443530687c79632ed569563d08c308b,2023-03-15 11:42:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_9-classroom,.github/workflows/code-review.yml,2c86c6f4ee19ed37e929293a03193773087ce373,2024-07-24 05:56:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",2c86c6f4ee19ed37e929293a03193773087ce373,2024-07-24 05:56:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
mingeun0507/moa-backend,.github/workflows/cr.yml,c5a5c5e4ef1ffb4bacbed0c79be905e03a893f91,2023-03-27 10:27:45,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",c5a5c5e4ef1ffb4bacbed0c79be905e03a893f91,2023-03-27 10:27:45,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
opentiny/tiny-engine-data-center,.github/workflows/ai-code-review.yml,a5e4a1abec2f1b22cd7c36f6608c4e092b1f7e29,2024-03-21 13:23:32,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          MAX_TOKENS: 4096
          MAX_PATCH_LENGTH: 10000
",a5e4a1abec2f1b22cd7c36f6608c4e092b1f7e29,2024-03-21 13:23:32,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          MAX_TOKENS: 4096
          MAX_PATCH_LENGTH: 10000
",0,0
storm-software/acidic,.github/workflows/code-review.yml,23b19d0a68a54e7d20547f1c6de9fafe49dddadc,2023-11-09 17:50:56,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",5ad62e51cd0dd5e3149d1bac10e06adb10b6c380,2024-02-11 09:08:55,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

env:
  CI: true
  NX_VERBOSE_LOGGING: true
  GITHUB_ACTOR: stormie-bot
  GITHUB_TOKEN: ${{ secrets.STORMIE_GITHUB_TOKEN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main

",93,2
cofinder-team/Scrapy-Crawler,.github/workflows/build-check.yml,3c6ed59db3e6b1c1deccd6dec36bd0aa6e3ab6e9,2023-08-17 14:19:09,"name: Build Docker

on:
  pull_request:
    branches: [ ""main"" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build
        run: docker build .


      - uses: anc95/ChatGPT-CodeReview@main
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

            LANGUAGE: English
            OPENAI_API_ENDPOINT: https://api.openai.com/v1
            MODEL: gpt-3.5-turbo
            PROMPT: Please check if there are any confusions or irregularities in the following code diff:
            top_p: 1
            temperature: 1
            max_tokens: 10000
            MAX_PATCH_LENGTH: 10000

",1a7f5132aa98404131ab8ddc73378596e4aec3fe,2023-08-17 14:20:57,"name: Build Docker

on:
  pull_request:
    branches: [ ""main"", ""dev""]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build
        run: docker build .


      - uses: anc95/ChatGPT-CodeReview@main
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

            LANGUAGE: English
            OPENAI_API_ENDPOINT: https://api.openai.com/v1
            MODEL: gpt-3.5-turbo
            PROMPT: Please check if there are any confusions or irregularities in the following code diff:
            top_p: 1
            temperature: 1
            max_tokens: 10000
            MAX_PATCH_LENGTH: 10000

",0,1
matamong/LlamaIndex_RAG_service_lab,.github/workflows/cr.yml,f5de98c332373d02f3c0a49973f6e4436b363d99,2024-06-22 17:15:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, ready_for_review, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          Prompt: ""You are a senior software engineer. You consider the following:\n\
1. Code readability and maintainability: The code must be clear and easy to understand. This helps other developers quickly understand the code and make necessary changes easily.\n\
\n\
2. Efficiency: The code must be optimized to use system resources effectively. This is especially important for applications that handle large volumes of data or where response time is critical.\n\
\n\
3. Scalability: The system must be able to scale easily as it grows or as the user base expands. This is a very important consideration at the early stages of architectural design.\n\
\n\
4. Security: It is crucial to prevent security vulnerabilities in the code. This is essential to protect the system from external attacks.\n\
\n\
5. Testability: It is important that the code is designed to be properly tested. This includes easily implementing various tests such as unit tests and integration tests.\n\
\n\
6. Collaboration with the team: Sharing knowledge within the team through code reviews, pair programming, etc., fosters collaboration. This improves code quality and reduces errors in the development process.\n\
\n\
7. Compliance and standards: Compliance with regulatory requirements and programming standards applicable to a specific industry or market must be adhered to.\n\
\n\
\n\
Below is a part of the code written by a junior software engineer. Considering the above, review the junior's code to help them grow and ensure the project is well-maintained without bugs""
          LANGUAGE: English",bb91c76fe2bb7f11eec21c02f4b0232f620dbeb8,2024-06-22 17:40:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, ready_for_review, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    name: ChatGPT Code Reviewer
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          Prompt: |
            You are a senior software engineer. You consider the following:
            1. Code readability and maintainability: The code must be clear and easy to understand. This helps other developers quickly understand the code and make necessary changes easily.

            2. Efficiency: The code must be optimized to use system resources effectively. This is especially important for applications that handle large volumes of data or where response time is critical.

            3. Scalability: The system must be able to scale easily as it grows or as the user base expands. This is a very important consideration at the early stages of architectural design.

            4. Security: It is crucial to prevent security vulnerabilities in the code. This is essential to protect the system from external attacks.

            5. Testability: It is important that the code is designed to be properly tested. This includes easily implementing various tests such as unit tests and integration tests.

            6. Documentation: There must be sufficient and clear documentation of the code. This helps new developers contribute to the project or understand the system.

            7. Collaboration with the team: Sharing knowledge within the team through code reviews, pair programming, etc., fosters collaboration. This improves code quality and reduces errors in the development process.

            8. Compliance and standards: Compliance with regulatory requirements and programming standards applicable to a specific industry or market must be adhered to.

            Below is a part of the code written by a junior software engineer. Considering the above, review the junior's code to help them grow and ensure the project is well-maintained.
          LANGUAGE: English",0,2
yukieiji/ExtremeRoles,.github/workflows/review.yml,2d175f00edd051737d4c1a989f27ad965ce83a01,2025-01-24 18:03:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  codereview:
    # タイトルに`:review`が含まれている場合のみ実行
    if: |
      github.event.comment.user.type != 'Bot'
      && github.event.issue.pull_request != null
      && (
        false
        || (
          github.event.comment.body == '!review'
          || startsWith(github.event.comment.body, '!review ')
          || startsWith(github.event.comment.body, '!review\n')
        )
      )
    runs-on: ubuntu-latest
    steps:
      # プルリクエストのタイトルを表示
      - name: Display PR title
        run: |
          echo ""PullRequest: ${{ github.event.pull_request.title }}""
      # ChatGPT-CodeReviewを実行
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.REVIEW_API_KEY }}
          LANGUAGE: Japanese
          # OpenRouterのエンドポイントを指定
          OPENAI_API_ENDPOINT: https://openrouter.ai/api/v1
          # 利用するモデルを指定
          MODEL: google/gemini-2.0-flash-thinking-exp:free
          # プロンプトをカスタマイズ
          PROMPT: |
            あなたはCSharpのコードをレビューするレビュアーです、入力されるCSharpコードを以下の観点を元にレビューしてください

            --- レビュー観点 ---
            - Nullチェックや境界チェックが抜けていないか
            - 適切にNullableを使用しているか
            - UnityにおけるCSharpのコーディングルールを守れているか
            - 変更の妥当性、及びアルゴリズムの正確性
            - パフォーマンスにおいて重大な問題が存在していないか
            --- レビュー観点終了 ---

            --- 返答形式 ---
            - 日本語にて返信を行う
            - 返答はわかりやすくかつ簡潔に行うこと
            - 問題点と修正点、修正方法を記載すること
            --- 返答形式終了 ---

          top_p: 1
          temperature: 0.5
          max_tokens: 8192
          MAX_PATCH_LENGTH: 8192
          IGNORE_PATTERNS: '*.md'
          INCLUDE_PATTERNS: '*.cs'
",151c2910e22855ac7203801388fcc25a47a236f1,2025-01-24 18:19:33,"name: CodeReview

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  codereview:
    # タイトルに`:review`が含まれている場合のみ実行
    if: ${{ contains(github.event.pull_request.title, '!review') }}
    runs-on: ubuntu-latest
    steps:
      # プルリクエストのタイトルを表示
      - name: Display PR title
        run: |
          echo ""PullRequest: ${{ github.event.pull_request.title }}""
      # ChatGPT-CodeReviewを実行
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.REVIEW_API_KEY }}
          LANGUAGE: Japanese
          # OpenRouterのエンドポイントを指定
          OPENAI_API_ENDPOINT: https://openrouter.ai/api/v1
          # 利用するモデルを指定
          MODEL: google/gemini-2.0-flash-thinking-exp:free
          # プロンプトをカスタマイズ
          PROMPT: |
            あなたはCSharpのコードをレビューするレビュアーです、入力されるCSharpコードを以下の観点を元にレビューしてください

            --- レビュー観点 ---
            - Nullチェックや境界チェックが抜けていないか
            - 適切にNullableを使用しているか
            - UnityにおけるCSharpのコーディングルールを守れているか
            - 変更の妥当性、及びアルゴリズムの正確性
            - パフォーマンスにおいて重大な問題が存在していないか
            --- レビュー観点終了 ---

            --- 返答形式 ---
            - 日本語にて返信を行う
            - 返答はわかりやすくかつ簡潔に行うこと
            - 問題点と修正点、修正方法を記載すること
            --- 返答形式終了 ---

          top_p: 1
          temperature: 0.5
          max_tokens: 32768
          IGNORE_PATTERNS: '*.md'
          INCLUDE_PATTERNS: '*.cs'
",0,2
Chia1104/chia1104.dev,.github/workflows/gpt-review.yml,87b7abfd0256ea565cc24567756d6ad4da7e86df,2023-04-30 08:42:33,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'reviewer:gpt') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLIC_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",e36141e45ad5d14b3b625efa3019c1ede6dd8779,2023-05-01 11:38:11,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, labeled, unlabeled, synchronize, reopened ]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'reviewer:gpt') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLIC_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",1,1
JustCode-Gallery/Gallery-with-me,.github/workflows/code_review_from_chatgpt.yml,f6cbd151367c83df13b27825fb5fbfd5c224b3bc,2024-07-05 07:24:25,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.ChatGPT_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",f6cbd151367c83df13b27825fb5fbfd5c224b3bc,2024-07-05 07:24:25,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.ChatGPT_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
kanghanhee/BBangMap-Server,.github/workflows/code_review.yml,620dcaff76906057423e3f6e4d5bae36f1a85152,2023-07-11 03:56:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
",2e59246f73fac740b4b922eaa36a4d1de8acb000,2023-07-11 03:56:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
",0,1
nicLucian/leetcode,.github/workflows/main.yml,1c131e0aca036dcc437bd67db71ef2b1b375ff8a,2023-10-30 09:02:46,"              - name: ChatGPT CodeReviewer
                uses: anc95/ChatGPT-CodeReview@v1.0.11
",1914d14f57d8df9ede820771fd3ad59b3865d1d8,2023-10-30 09:18:52,"- name: ChatGPT CodeReviewer
  # You may pin to the exact commit or the version.
  # uses: anc95/ChatGPT-CodeReview@f908e4ba50b12b43efb9051f40df0d9db64c088c
  uses: anc95/ChatGPT-CodeReview@v1.0.11
",0,2
AndreVianna/LocalizationTools,.github/workflows/codereview.yml,72982e3a41028f797ddb8c88ef125ecf26280544,2023-08-10 01:23:32,"- name: ChatGPT CodeReviewer
  uses: anc95/ChatGPT-CodeReview@v1.0.10
",004742eee28c335eadf598701ff352f06b5ffdf8,2023-08-10 01:41:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-32k-0613
          PROMPT: Please, check if there are any confusions, erros, irregularities, and the use of best practices in the following code diff. Please explain your analysis and propose in a simple and diret way corrections.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.75 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 32768
",0,4
hana-jung/devcamp-2310-frontend,.github/workflows/cr.yml,d0f7352d4e3dc041fc7c08394e964151baec1626,2023-10-19 08:56:27,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",d0f7352d4e3dc041fc7c08394e964151baec1626,2023-10-19 08:56:27,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
anc95/ChatGPT-CodeReview,.github/workflows/cr.yml,820ecd79174c5d4b14dcdb0b65fbe5f37014e50e,2024-11-22 03:22:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.bianxie.ai/v1
          LOG_LEVEL: debug
",238e1084367a9ffaef1a74878a4cf9abdf24d729,2024-12-11 03:27:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.bianxie.ai/v1
          LOG_LEVEL: debug
          INCLUDE_PATTERNS: 'src/**/*'
",19,2
kangjehun/Learning_to_Drive_in_Seconds,.github/workflows/cr.yml,31d8394be27ed19dde0e635a92f4b8b9582314a5,2024-02-28 11:00:31,"name: ChatGPT CodeReviewer

uses: anc95/ChatGPT-CodeReview@v1.0.12
",67f476d1e188f6f067e784ab7649009d2b804cff,2024-02-28 11:18:53,"name: ChatGPT CodeReviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,6
Chaslee4/test-repo,.github/workflows/main.yml,ad7ec7f1f90478f35e03395966df475a6c233eb0,2023-04-19 13:15:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          LANGUAGE: Chinese
",ad7ec7f1f90478f35e03395966df475a6c233eb0,2023-04-19 13:15:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          LANGUAGE: Chinese
",0,0
sshrik/miro,.github/workflows/code-review.yml,7a1991fdd4c741e86767fa33d39f1144d93e45a0,2024-03-24 03:45:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          ",7a1991fdd4c741e86767fa33d39f1144d93e45a0,2024-03-24 03:45:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          ",0,0
iDevGon/chatgpt-code-review,.github/workflows/review.yml,8106918fe3f28d10b630eda3c00434896604e54b,2024-05-11 04:21:23,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",8106918fe3f28d10b630eda3c00434896604e54b,2024-05-11 04:21:23,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo",0,0
EveryMutsa/Every-Mutsa,.github/workflows/cr.yml,2427df10346c05df3872229848bfb80343ed2e88,2023-06-24 15:41:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }} # 선택적; review라는 레이블이 붙은 경우에만 GPT가 리뷰함
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # 선택적
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",2427df10346c05df3872229848bfb80343ed2e88,2023-06-24 15:41:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }} # 선택적; review라는 레이블이 붙은 경우에만 GPT가 리뷰함
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # 선택적
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,0
KelvinQiu802/douban-comp2013j-server,.github/workflows/codereview.yml,10078fb905411a6b2ac1ccb0481b4983093f46ba,2023-05-08 06:51:42,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",10078fb905411a6b2ac1ccb0481b4983093f46ba,2023-05-08 06:51:42,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
kamada-maki/zenn-docs,.github/workflows/ai-Review.yml,47325fbbf92ee590e7a3bbf6f25a22787b10789c,2024-05-27 13:33:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    paths:
      - ""**.md""

jobs:
  gpt-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            あなたは技術記事を書くプロのライターです。回答は日本語でお願いします。
            渡された技術情報について、わかりやすく、読みやすい記事になるようレビューしてください。
            特に以下の点に注意してください:
              - 読者が初心者から中級者であることを想定して、専門用語の説明を含めること
              - 技術的なコンセプトやプロセスをステップバイステップで説明すること
              - 実例やコードサンプルを使って具体的に説明すること
              - 視覚的に分かりやすい図やイラストを追加する提案をすること
              - 重要なポイントを強調し、要点をまとめること
              - 個人的な見解や感想は、客観的事実と異なると分かるようにすること

            誰にとっても理解しやすい技術記事になるよう、積極的に工夫してください。
            あなたに渡される情報は一部分であるため、前提知識が必要な場合にはそれを補足する説明を追加してください。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",74287ca9311dcfd8be88e2dbb1fc6b86558232ea,2024-06-09 01:27:23,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            あなたは技術記事を書くプロのライターです。回答は日本語でお願いします。
            渡された技術情報について、わかりやすく、読みやすい記事になるようレビューしてください。
            特に以下の点に注意してください:
              - 誤字脱字や文法ミスを指摘すること
              - 読者が初心者から中級者であることを想定して、専門用語の説明を含めること
              - 技術的なコンセプトやプロセスをステップバイステップで説明すること
              - 実例やコードサンプルを使って具体的に説明すること
              - 視覚的に分かりやすい図やイラストを追加する提案をすること
              - 重要なポイントを強調し、要点をまとめること
              - 個人的な見解や感想は、客観的事実と異なると分かるようにすること

            誰にとっても理解しやすい技術記事になるよう、積極的に工夫してください。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",12,3
JadeKim042386/My3D-BACKEND,.github/workflows/code_review_bot.yml,9a596f301ed4d37c2708a8c9aedd8f2303426fb9,2024-02-28 13:54:35,"name: 🤖Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",f77bab56e1a923168b81735ff0b78a45eaf4e09c,2024-03-04 04:02:04,"name: 🤖Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          # https://github.com/PickleBoxer/dev-chatgpt-prompts?tab=readme-ov-file#code-review
          PROMPT: ""I'm working on a JAVA project and I need you to review my code and suggest improvements. If you haven't improvements, ignore.""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4,2
topaoad/my-ec-app-monorepo,.github/workflows/cr.yml,e865728c97af95a47eceaba06bf789473a9c1ed5,2024-09-11 05:54:50,"name: Code Review

permissions:
  issues: write
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",e865728c97af95a47eceaba06bf789473a9c1ed5,2024-09-11 05:54:50,"name: Code Review

permissions:
  issues: write
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
harsh432004/attendance-system-app,.github/workflows/cr.yml,7ce2b67f8706c44b54d8859406fd9967eec09253,2024-12-29 09:22:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.js,*.ts # glob pattern or regex pattern to include files, separated by comma

          # IF you are using azure openai
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",eda994a0ad297b511ec123decc2cab64398816ab,2024-12-29 10:29:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: /node_modules/**/*,*.md
          INCLUDE_PATTERNS: *.js,*.ts

          # Optional Azure configurations
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",0,1
jimyungkoh/hhplus-lecture-registration-system,.github/workflows/code_review.yml,c94cda5642883a43f47863b5e730cefc9d562547,2024-10-01 15:13:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional: Add your own API key
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",77e68a46538256b66e9b0adcfc69b36116c6c780,2024-10-01 23:28:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional: Add your own API key
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,2
leeleesj/vision-ai-lab,.github/workflows/code-review.yml,3dd842a54a13a7fff9a962fe4c3094182efb8d83,2024-08-22 09:33:15,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",3dd842a54a13a7fff9a962fe4c3094182efb8d83,2024-08-22 09:33:15,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
gumsu/mini-o-house-server,.github/workflows/chatgpt.yml,a351955217a7b424de1a06b2f99cb8a930dea96a,2023-04-01 07:47:26,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",9befadd15f260ba29bc224f4cbb2173c7891deaa,2023-04-03 13:12:41,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",2,1
cround-team/cround-server,.github/workflows/code-review-from-gpt.yml,8dcdd35a03ae671e7f7d9869c411166ba8dcfff0,2023-05-06 10:50:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",8974f7600727a4c32ad36646a873458352064ceb,2023-05-07 06:50:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,2
Yunwoo911/GYMVYM,.github/workflows/cr.yml,616e5f48f64094adcada69fd60df81d38ad84707,2024-07-09 12:22:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",70249a05a09c53f9cb112c405a2a1f70ec246e9f,2024-07-09 13:56:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
          PROMPT: provide a code review in Korean.
",0,7
fec-cache-me-if-you-can/FEC-cache-up,.github/workflows/cr.yml,24362740a35140c9f8eacdf7048b3ec508119742,2024-10-23 02:52:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          PROMPT: |
            As an experienced React developer, review the following code diff for a React application. Analyze both the removed (-) and added (+) lines. Focus on:

            1. Impact on component structure and organization
            2. Changes in state management and hooks usage
            3. Performance implications
            4. Adherence to React best practices
            5. Code readability and maintainability improvements or regressions
            6. Changes in error handling and edge case coverage
            7. Accessibility improvements or regressions
            8. Effects on responsive design
            9. Implications for testing coverage and quality
            10. Security considerations

            For each significant change:
            - Explain the purpose and potential impact
            - Suggest improvements if necessary
            - Highlight good practices introduced
            - Identify any potential bugs or code smells
            - Provide specific refactoring suggestions where applicable

            Be concise but thorough. Prioritize the most important findings.
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",24362740a35140c9f8eacdf7048b3ec508119742,2024-10-23 02:52:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          PROMPT: |
            As an experienced React developer, review the following code diff for a React application. Analyze both the removed (-) and added (+) lines. Focus on:

            1. Impact on component structure and organization
            2. Changes in state management and hooks usage
            3. Performance implications
            4. Adherence to React best practices
            5. Code readability and maintainability improvements or regressions
            6. Changes in error handling and edge case coverage
            7. Accessibility improvements or regressions
            8. Effects on responsive design
            9. Implications for testing coverage and quality
            10. Security considerations

            For each significant change:
            - Explain the purpose and potential impact
            - Suggest improvements if necessary
            - Highlight good practices introduced
            - Identify any potential bugs or code smells
            - Provide specific refactoring suggestions where applicable

            Be concise but thorough. Prioritize the most important findings.
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",0,0
meimei-kr/whack-a-mole,.github/workflows/cr.yml,a7b12aa3f37e638fda98de5a5ef4c2a53ea39cab,2023-12-31 09:41:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese # 言語
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # 使用するモデル
          top_p: 1
          temperature: 1",a7b12aa3f37e638fda98de5a5ef4c2a53ea39cab,2023-12-31 09:41:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese # 言語
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # 使用するモデル
          top_p: 1
          temperature: 1",0,0
DedSecTeam17/hero_app,.github/workflows/pr.yml,d64c796b301f01394b625b8e4d1d1ce51035f7a2,2023-04-02 19:19:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",d64c796b301f01394b625b8e4d1d1ce51035f7a2,2023-04-02 19:19:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
Team-pingping/pingping-FE,.github/workflows/cr.yml,74407f42f325b005ed1677c82817397047d8c88f,2025-01-08 20:42:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",74407f42f325b005ed1677c82817397047d8c88f,2025-01-08 20:42:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
gimdongwon/kangnamlion,.github/workflows/cr.yml,199d1406986cbf45bb65905c9efd203d89180986,2023-05-21 11:57:08,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",199d1406986cbf45bb65905c9efd203d89180986,2023-05-21 11:57:08,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
potenday-project/311TEN003,.github/workflows/Code-Review.yml,62dd8a812556171f0876c55f104d6c1d7c88a3f4,2023-11-04 07:33:49,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [""main""]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_SECRET_KEY }}
          LANGUAGE: Korean
",74e34b92ea0aff8059e28d4933873855a1aad466,2023-11-04 09:19:48,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [""main""]

jobs:
  Create_ChatGPT_CodeReview:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_SECRET_KEY }}
          LANGUAGE: Korean
",0,1
BCSDLab/KOIN_ADMIN_V2,.github/workflows/cr.yml,8ce1878ed425c43de6556464b3761509832165b7,2024-09-09 04:08:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} #  Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",9562fb7ed0af80db304f7d29cf9981e23caf242f,2024-09-22 11:08:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} #  Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 다음 코드에서 오류가 있는지 검토하고 개선 사항이 있다면 diff 형식으로 제안해줘. 이때 제안하는 코드블록은 전체코드가 아닌 개선이 필요한 부분만 포함해야해. 리뷰를 할 때 주요 사항과 개선 제안 사항을 간단하게 설명하고 코드 오류를 검토해줘. 개선사항이 어떤 형식인지는 알려주지 않아도 좋아. 단순 주석추가, 수정이 필요하지 않은 내용은 제외해줘.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 1500 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",13,6
ai-paas/hub-connect,.github/workflows/cr.yml,3714cd4086bb84d5985a4de4d2e66c42a80282c8,2024-08-21 08:41:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",3714cd4086bb84d5985a4de4d2e66c42a80282c8,2024-08-21 08:41:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
boocam-project/FastTime-backend,.github/workflows/cr.yml,f3aa1c96185110904961fe31eb22a46841e4aceb,2024-03-05 13:09:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT: gpt-4-0125-preview
",e9a42e5f39838c7f4eff59579cf4a9f4da401278,2024-03-07 09:05:01,"name: Code Review by gpt

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",1,3
UnUniFi/chain,.github/workflows/cr.yml,a882b585d967db399cade2078e711fa9b4e9936c,2023-03-23 02:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",81f211fe6c256a1cf2ebc13e086765d3982f2e99,2023-06-05 06:48:16,"permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",74,3
psurabh/ai_devops,.github/workflows/cr.yml,b60e6cea4abfe7149fc37dd12d25e9e7bfab6cf7,2023-05-30 04:40:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1
",b60e6cea4abfe7149fc37dd12d25e9e7bfab6cf7,2023-05-30 04:40:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1
",0,0
leedy1100/nextjs-test,.github/workflows/cr.yml,6994ec1dd225d1c3fb6cd179ecf3da2636ad4323,2024-03-29 01:08:40,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",7963d8bf6b105203fe9c3b363632f885524e8f32,2024-04-01 05:51:07,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    if: contains(github.event.pull_request.body, '#code-review')
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",3,4
ChatCode9/ChatCode-backend,.github/workflows/cr.yml,eadf7b8651a6293152698ee03a6403dff5057dd0,2024-07-02 15:34:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",51f13878ce93bd0d4872bcd3ca540b5cef3a3a96,2024-07-10 06:23:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",7,2
6-dreaming-stars/space-star-front-monorepo,.github/workflows/cr.yml,b41ac58a06689d760a9baecd639e58f7861db684,2024-05-23 06:07:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  test:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
          PROMPT: 'Next.JS v14, Typescript, TailwindCSS를 사용'
",ddee5195e2c62145525041894c56520ac148d7e0,2024-05-23 06:12:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  test:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,1
dsm23/realtime-chat-app,.github/workflows/cr.yml,5cfb3422488bf516bfe825fc69c61c47f3cc5207,2024-09-17 16:01:05,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",5cfb3422488bf516bfe825fc69c61c47f3cc5207,2024-09-17 16:01:05,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
jhkim-a/codereview,.github/workflows/cr.yml,4497e3aa01d507cee05ab5eee6574d56b91a95b6,2024-05-27 10:14:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
",4497e3aa01d507cee05ab5eee6574d56b91a95b6,2024-05-27 10:14:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
",0,0
DevCamp-TeamSparta/backend-material,.github/workflows/cr.yml,8c0f7a3e013e270a041d8929b1eb30af2d101616,2024-02-28 23:12:16,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",8c0f7a3e013e270a041d8929b1eb30af2d101616,2024-02-28 23:12:16,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",0,0
hanyuancheung/gpt-go,.github/workflows/cr.yml,d871187900d0d1293329bc182fd9e6c977d933a7,2023-03-24 05:56:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",762ba4c6785a57771462c639ba1954a12b7cba94,2023-03-29 09:38:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",5,1
TeroBaje/fastify-enterprise,.github/workflows/cr.yml,c4eb80b7da593d9e8d765f9d83723682026addf3,2023-09-07 06:02:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_ENDPOINT }}
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Feedback should be in English. Please check the pull request and provide any suggestions to improve. Avoid package.json and config files. Add emojis in feedback for better display. Don't make the feedback too long. Just point out what to improve in few lines. Also check only security issues if there is any on function levels.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4b29a96ebb897e6efed04ac8d58d2bb072d5a25e,2023-09-07 06:04:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_ENDPOINT }}
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ${{secrets.OPENAI_PROMPT}}
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
graytree3652/mirishop,.github/workflows/cr.yml,54c3af40113abb92ee7d99500052550ca2785da7,2024-02-28 09:35:35,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_AI }}
          LANGUAGE: Korean
",54c3af40113abb92ee7d99500052550ca2785da7,2024-02-28 09:35:35,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_AI }}
          LANGUAGE: Korean
",0,0
rodrigue10/SignumExplorer,.github/workflows/cr.yml,4083374513b5c2f58d0dc775efb69ada4c134b24,2023-05-25 19:28:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          top_p: 1
          temperature: 1
",4083374513b5c2f58d0dc775efb69ada4c134b24,2023-05-25 19:28:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          top_p: 1
          temperature: 1
",0,0
WeBankFinTech/fes-design,.github/workflows/cr.yml,dca0d5c011c6504adaaa67e7ab1f0a67af2254a0,2023-03-21 06:37:03,"name: Code Review


permissions:
  contents: read
  pull-requests: write


on:
  pull_request:
    types: [opened, reopened]


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1",7135ed3d138aacddb5fe34d18405672067e4a6fb,2023-08-25 04:58:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1",156,1
DDD-Community/Chevit-Android,.github/workflows/code-review.yml,b9cd69864bba0480097650b99828010e4e2f32c0,2023-06-05 15:59:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    name: Code Review By Chatgpt
    runs-on: ubuntu-latest
    steps:
      - name: CodeReview
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",d7cfc082e4f71fc58b2873edd2c3ef1789b75435,2023-07-10 14:33:29,"name: code-review

permissions:
  contents: read
  pull-requests: write

on:
  merge_group:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    name: Code Review By Chatgpt
    runs-on: ubuntu-latest
    steps:
      - name: CodeReview
        uses: anc95/ChatGPT-CodeReview@main
        timeout-minutes: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",34,3
Quolls/Possum-FullStackJS,.github/workflows/cr.yml,bd695f7aca8f45740154fd05dd925c62783f66b3,2024-02-21 06:32:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-0125 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",8bb9694be232650f7994b4227f2f493d8d2d6d36,2024-03-27 08:57:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://aihubmix.com/v1
          MODEL: gpt-4-0125-preview # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          # max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",35,2
HanJaeJoon/HaruHana,.github/workflows/cr.yml,c31e54019dc363250e63fa1d1bd0159c02c6c8f1,2023-06-03 06:30:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1",c31e54019dc363250e63fa1d1bd0159c02c6c8f1,2023-06-03 06:30:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1",0,0
Talljack/react-starter,.github/workflows/cr.yml,84f91a44d2fc615d34e9db76fab726d8fa2b5a66,2023-04-03 06:07:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",84f91a44d2fc615d34e9db76fab726d8fa2b5a66,2023-04-03 06:07:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
shogo0x2e/chatgpt-cr-test,.github/workflows/cr.yml,fd2b4c7d9822539ad67fedfd1f9e8538ff30e928,2023-10-09 03:59:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: | # example: Please check if there are any confusions or irregularities in the following code diff:
            あなたは @ChatGPT-CR（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",fd2b4c7d9822539ad67fedfd1f9e8538ff30e928,2023-10-09 03:59:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: | # example: Please check if there are any confusions or irregularities in the following code diff:
            あなたは @ChatGPT-CR（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
cianclarke/cianclarke.com,.github/workflows/cr.yml,4e89e4329cc8bc69ef8fca0fef1de50d7c22e150,2023-07-11 09:16:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",12a69251528ecebd95afb837f21e38be70d28035,2023-07-11 09:38:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 3500
          MAX_PATCH_LENGTH: 3500 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_8-classroom,.github/workflows/code-review.yml,c7e3834d053537a4d12467b62132c24b1d132de6,2024-07-24 05:56:39,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",c7e3834d053537a4d12467b62132c24b1d132de6,2024-07-24 05:56:39,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
wizmap/wizmap2,.github/workflows/cr.yml,96f1b5b3eadac4e06eefa81ad5beb167ca5a6cf9,2024-07-10 00:24:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",96f1b5b3eadac4e06eefa81ad5beb167ca5a6cf9,2024-07-10 00:24:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
luyuancpp/mmorpg,.github/workflows/cr.yml,357a44b01d218ec6e494427e25bd52d4c2ef878b,2024-07-24 09:51:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 1 # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",357a44b01d218ec6e494427e25bd52d4c2ef878b,2024-07-24 09:51:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 1 # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
blowin/BlowinCleanCode,.github/workflows/code-review.yml,328f9aedd3115e5cb23e2119d86c0471911440c8,2023-03-23 16:28:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",328f9aedd3115e5cb23e2119d86c0471911440c8,2023-03-23 16:28:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_5-classroom,.github/workflows/code-review.yml,64562e799e21d5ef14cce8dd79a21f969dcdad32,2024-07-24 05:45:04,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",64562e799e21d5ef14cce8dd79a21f969dcdad32,2024-07-24 05:45:04,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
fleeto/sudoku,.github/workflows/cr.yml,9d1595c8201c24b9b73460dafff96a801aa74010,2023-03-15 03:19:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",9d1595c8201c24b9b73460dafff96a801aa74010,2023-03-15 03:19:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
yuminn-k/project_freee-attendance-keeper,.github/workflows/code_review.yml,f23972e240f28df0de4d1a1910384f9ff5781b82,2024-03-14 02:24:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",f23972e240f28df0de4d1a1910384f9ff5781b82,2024-03-14 02:24:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
VladislavPetyukevich/GulagGazRoom,.github/workflows/cr.yml,678f2ddb35a0a66ffb8941325f9db808d760d972,2023-03-23 15:58:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",678f2ddb35a0a66ffb8941325f9db808d760d972,2023-03-23 15:58:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
let-s-record-it/Server,.github/workflows/codereview.yml,6457f850072fdb9d1e8b92685af11d3273490aa2,2024-04-15 16:55:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",6457f850072fdb9d1e8b92685af11d3273490aa2,2024-04-15 16:55:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
MyoungSoo7/pharmacyrecommend,.github/workflows/ai-code-review.yml,55042c614bd25ea7becdcfefe26ec4a656ee6591,2023-12-17 09:24:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",55042c614bd25ea7becdcfefe26ec4a656ee6591,2023-12-17 09:24:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
JadeKim042386/SpringBoot2Messaging,.github/workflows/cr.yml,d9f8f50d6d8bb254785aa1470a8758b69dbc97d7,2024-02-28 13:41:22,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1dd376fe3cfa6495d2eb2c54bc784c622d4f0531,2024-03-02 07:03:39,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""I'm working on a JAVA project and I need you to review my code and suggest improvements. If you haven't improvements, ignore.""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",2,3
sylee6529/board,.github/workflows/cr.yml,057e4dc0d46678c3cc65443a1a0aa5929bb11377,2024-01-02 08:15:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",057e4dc0d46678c3cc65443a1a0aa5929bb11377,2024-01-02 08:15:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
topaoad/my-ec-site,.github/workflows/cr.yml,2e95abfb4b4fd37f08fb9a1ec61e928da1165a2d,2024-04-06 02:15:04,"name: Code Review

permissions:
  issues: write
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",2e95abfb4b4fd37f08fb9a1ec61e928da1165a2d,2024-04-06 02:15:04,"name: Code Review

permissions:
  issues: write
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
dsm23/dsm23-next-markdown-blog-starter,.github/workflows/cr.yml,f7c5c66dd74828b1a68df7c560abbd70e223d323,2024-09-23 14:45:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",c3f822ca44cdc0f37250f6228ed50b33e88a50cd,2025-01-12 16:44:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",111,1
mate-academy/layout_catalog,.github/workflows/main.yml,8f80ce7dfee12490d7d63a51255026324ed2d174,2023-03-23 14:35:15,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: GPT-3.5
          top_p: 1
          temperature: 1
",729a4006359d5cfe70237dd0847837e09cc03507,2023-03-23 14:48:13,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: GPT-4
          top_p: 1
          temperature: 1
",0,1
practice0000001/practice0000001-classroom-ba35f0-classroom_test_gpt_2-classroom,.github/workflows/code-review.yml,d8236b316baac5b7624ec407f66ebea018531b06,2024-07-24 05:24:29,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make
        sudo cp googletest/libgtest.a /usr/lib
        sudo cp googlemock/libgmock.a /usr/lib
        sudo cp googletest/libgtest_main.a /usr/lib
        sudo cp googlemock/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",d8236b316baac5b7624ec407f66ebea018531b06,2024-07-24 05:24:29,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make
        sudo cp googletest/libgtest.a /usr/lib
        sudo cp googlemock/libgmock.a /usr/lib
        sudo cp googletest/libgtest_main.a /usr/lib
        sudo cp googlemock/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
fei-ke/HMSPush,.github/workflows/cr.yml,2525f954a6374023c612a7709d0b0bc1e904607d,2023-03-22 11:35:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",2525f954a6374023c612a7709d0b0bc1e904607d,2023-03-22 11:35:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_2-classroom,.github/workflows/code-review.yml,d6221506226691acb6f6c4f0f40368022c643e25,2024-07-24 05:37:12,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/libgtest.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgtest_main.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",d6221506226691acb6f6c4f0f40368022c643e25,2024-07-24 05:37:12,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/libgtest.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgtest_main.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
UnUniFi/web-apps,.github/workflows/cr.yml,0bb51c0660d2fadcfeb9669630b5c9dccc90ddb5,2023-03-23 10:22:01,"permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",604a0f277ca5f19ef68e3041b328d95b2fb13b34,2023-06-05 06:48:34,"permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",73,4
reeschan/my-pingpong-game,.github/workflows/cr.yml,dfe0b16ebd1322b7f9a607b2dbf75f745526ecfd,2024-10-25 21:08:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: GPT-4o mini # https://platform.openai.com/docs/models
          PROMPT: ""lease check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma
",f6547a8a458059579abdc88ea51cc2fe5c87edcd,2024-10-26 00:00:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: "".*\\.wav$|.*\\.unity$|.*\\.asset$|.*\\.meta$"" # Regex pattern to ignore files, separated by comma
",0,7
BCSDLab/BCSD_INTERNAL_WEB,.github/workflows/cr.yml,a3a26ce3b280610b9fb5d407cd7eb82f1ee02a93,2024-09-06 17:10:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",c2ec0bc0c07205681f7ede9917075942d2caf5eb,2024-09-22 11:09:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} #  Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 다음 코드에서 오류가 있는지 검토하고 개선 사항이 있다면 diff 형식으로 제안해줘. 이때 제안하는 코드블록은 전체코드가 아닌 개선이 필요한 부분만 포함해야해. 리뷰를 할 때 주요 사항과 개선 제안 사항을 간단하게 설명하고 코드 오류를 검토해줘. 개선사항이 어떤 형식인지는 알려주지 않아도 좋아. 단순 주석추가, 수정이 필요하지 않은 내용은 제외해줘.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 1500 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",15,8
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_4-classroom,.github/workflows/code-review.yml,e0ddf6d64dbc7ac17b759fe1baaf30871800e1d9,2024-07-24 05:40:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",e0ddf6d64dbc7ac17b759fe1baaf30871800e1d9,2024-07-24 05:40:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git
        cd googletest
        sudo mkdir -p build
        cd build
        sudo cmake ..
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/*.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
upgundecha/gpt-pr-test,.github/workflows/pylint.yml,49766cec6667f11224c080456a31295357669881,2023-03-03 03:53:55,"name: Pylint

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [""3.8"", ""3.9"", ""3.10""]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - uses: anc95/ChatGPT-CodeReview@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",49766cec6667f11224c080456a31295357669881,2023-03-03 03:53:55,"name: Pylint

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [""3.8"", ""3.9"", ""3.10""]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - uses: anc95/ChatGPT-CodeReview@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
Talljack/follower-history,.github/workflows/cr.yml,3ff408ecd6a0b2f403ae1603f54c65ca5ace9845,2023-10-28 12:04:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",3ff408ecd6a0b2f403ae1603f54c65ca5ace9845,2023-10-28 12:04:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
KelvinQiu802/monopoly,.github/workflows/codereview.yml,b71ea082a289d7bd64289f2df319fe8ef029cd39,2023-05-10 04:54:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",b71ea082a289d7bd64289f2df319fe8ef029cd39,2023-05-10 04:54:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
Whale0928/springboot-practice,.github/workflows/code-review.yml,f00d09e296928c96e5fe159013160a1399acf52a,2024-04-30 18:01:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT: ""만약 간단한 오탈자 수정 , 문장구조 , 설정파일등 간단한 수준이라면 리뷰를 스킵해주세요.""",6a0a94871aecf056ba7ae9941a7e2a8d0052bcaa,2024-05-01 06:46:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: ""contains(github.event.pull_request.title, '[코드리뷰]')""
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,16
GaryZhangstu/generate-leaderboard,.github/workflows/review.yml,e240b90327ee8e2bc057412bf0c89fa4baa72faf,2024-06-11 07:18:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.moonshot.cn/v1
          MODEL: moonshot-v1-8k
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4a57524cf0b37cfe25d5971c2753fc1dbde8ccd6,2024-06-13 08:17:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.moonshot.cn/v1
          MODEL: moonshot-v1-8k
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 100000
          MAX_PATCH_LENGTH: 100000
",2,1
almond-bongbong/react-simple-toasts,.github/workflows/99_codereview.yml,41e0042ea2e050da2ad909409c10dfcac9367339,2023-08-26 01:45:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-3.5-turbo""
",41e0042ea2e050da2ad909409c10dfcac9367339,2023-08-26 01:45:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-3.5-turbo""
",0,0
mia2583/TodayTomorrow,.github/workflows/cr.yml,48f5efe499afcda4ba4e98e12a1b2a5404b57f69,2024-12-08 07:44:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma
",aa651133693b161130c8289cfe74cf5bd2a6c907,2024-12-16 13:43:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          max_tokens: 1000
          IGNORE_PATTERNS: /node_modules, *.md, *.json, *.gradle, *.xml # Regex pattern to ignore files, separated by comma
",8,2
tauto1127/accountbook_for_obsidian_rest_api,.github/workflows/GPT.yml,05ff476e42e4460b5564be22f5321314736abe20,2024-04-19 15:40:24,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    #if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Optional; to run only when a label is attached
    #if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2000
          MAX_PATCH_LENGTH: 1600 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0330ca32c7101ef7ee77a198b32441a46c12d525,2024-04-20 09:13:55,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

jobs:
  test:
    #レビューが欲しかったらラベルに「review」をつける
    if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Optional; to run only when a label is attached
    #if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          #PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2000
          MAX_PATCH_LENGTH: 1600 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,3
sinProject-Inc/sinpro-dev,.github/workflows_/cr-anc95.yml,ca4dd20bb344697bfed06fb26601f394c1ceb3f7,2023-09-04 01:50:41,"# https://github.com/anc95/ChatGPT-CodeReview
name: Code Review by anc95

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    name: Code Review by ChatGPT-CodeReview
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: English
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          # top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          # temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          # max_tokens: 10000
          # MAX_PATCH_LENGTH: 10000 # if the patch/diff le
",ca4dd20bb344697bfed06fb26601f394c1ceb3f7,2023-09-04 01:50:41,"# https://github.com/anc95/ChatGPT-CodeReview
name: Code Review by anc95

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    name: Code Review by ChatGPT-CodeReview
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: English
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          # top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          # temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          # max_tokens: 10000
          # MAX_PATCH_LENGTH: 10000 # if the patch/diff le
",0,0
lxw15337674/ww-hooks,.github/workflows/main.yml,61905f6a3cb2b773e72357a082da1471466b9d7c,2023-05-12 03:21:48,"name: Build and Deploy
on: # 监听 master 分支上的 push 事件
  push:
    branches:
      - doc
      - master
jobs:
  deploy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - run: pnpm docs:wwhooks
        # run: pnpm docs:wwutils
      - name: Deploy wwhooks
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PUBLISH_PAGES }}
          publish_dir: ./packages/ww
          name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1docs-dist
      # - name: Deploy wwutils
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.PUBLISH_PAGES }}
      #     publish_dir: ./wwutils/docs-dist

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",517c991fc15fd54997791016ff19c2d2799bb656,2023-08-28 12:52:28,"name: Build and Deploy

on:
  push:
    branches:
      - doc
      - master
  pull_request:
    types: [opened, reopened, synchronize,closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - run: pnpm docs:wwhooks
        # run: pnpm docs:wwutils
      - name: Deploy wwhooks
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PUBLISH_PAGES }}
          publish_dir: ./packages/wwhooks/docs-dist

  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",108,8
MyoungSoo7/shopping_lowprice,.github/workflows/ai-code-review.yml,e2dd5838b49ceed19b6f2d5d1a70291d7a1579ad,2023-12-17 09:24:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",e2dd5838b49ceed19b6f2d5d1a70291d7a1579ad,2023-12-17 09:24:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
lxw15337674/npm-monorepo-starter,.github/workflows/main.yml,58de8eafa4880f7c70e8d0f47240f73838d35cc8,2024-01-19 03:08:08,"name: Build and Deploy

on:
  push:
    branches:
      - doc
      - master
  pull_request:
    types: [opened, reopened, synchronize,closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - run: pnpm docs:wwhooks
        # run: pnpm docs:wwutils
      - name: Deploy wwhooks
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PUBLISH_PAGES }}
          publish_dir: ./packages/wwhooks/docs-dist

  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",58de8eafa4880f7c70e8d0f47240f73838d35cc8,2024-01-19 03:08:08,"name: Build and Deploy

on:
  push:
    branches:
      - doc
      - master
  pull_request:
    types: [opened, reopened, synchronize,closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - run: pnpm docs:wwhooks
        # run: pnpm docs:wwutils
      - name: Deploy wwhooks
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PUBLISH_PAGES }}
          publish_dir: ./packages/wwhooks/docs-dist

  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",0,0
dhtjddls/nest_board_app_wangank,.github/workflows/cr.yml,0a435f340118ed496dab9b1ddb803b134caebb68,2023-05-31 06:09:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",b04e03a1208cec3c79ac9fc9a1a010e5e230926b,2023-05-31 06:20:01,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.OSI_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,1
K-Slave/petBook-Client,.github/workflows/cr.yml,944d719f3677c0cccddef027b60a1972622238a6,2023-04-29 05:13:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",944d719f3677c0cccddef027b60a1972622238a6,2023-04-29 05:13:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
kubecub/log,.github/workflows/robot-cr.yml,7531620535de773dec7a47ff277ad2096ad34336,2023-06-12 11:12:23,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1",7531620535de773dec7a47ff277ad2096ad34336,2023-06-12 11:12:23,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1",0,0
seob717/blog,.github/workflows/code_review_from_chatgpt.yml,d87f93433ad12b66bcbeaeef8bc16ad3194b2dbc,2024-07-17 15:14:44,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo-0125",846573d384aa831eb3ef891d5677121b0cbdbfa2,2024-07-19 08:21:06,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o-mini
",1,3
gohsue/tagtype-project,.github/workflows/openai-code-review.yml,d751243717d8d32a693d7967c0ff090769de25ce,2023-03-19 04:37:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",d751243717d8d32a693d7967c0ff090769de25ce,2023-03-19 04:37:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",0,0
ksg0605/Automation-SGB-Web,.github/workflows/cr.yml,7ad92f756731844f774cba0007fe7dad87d20198,2024-07-17 00:17:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",7ad92f756731844f774cba0007fe7dad87d20198,2024-07-17 00:17:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",0,0
ts-spec/tspec,.github/workflows/code-review.yml,9b8e258693f4babd2e9adfe262b6b2f4b7901a4f,2023-06-21 09:51:18,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
          LANGUAGE: Korean
",70b67ed6b45b2bb62870b0f8e7978dbc74f7d4e3,2023-06-21 10:01:38,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
          LANGUAGE: English
",0,2
eunice-hong/AndroidTemplate,.github/workflows/code-review-with-chat-gpt.yml,a0aeac58410de95c397f5e5c8b8d7574031e3f37,2024-11-17 11:54:39,"name: Code Review with ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: /.github,*.md,*.yml # Regex pattern to ignore files, separated by comma

",965a2733904ae8d0af93c6e650ced9234d282fd5,2024-11-22 11:38:57,"name: Code Review with ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
          max_tokens: 4000
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: /.github,*.md,*.yml,*.xml,*ParameterProvider.kt

",4,3
Simon-He95/symbol-mapping-conversion,.github/workflows/cr.yml,5846bcf575c786b904e5b42c7219d6fd28cb2191,2024-03-21 02:09:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",5846bcf575c786b904e5b42c7219d6fd28cb2191,2024-03-21 02:09:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
amit-jesani/Psk_MultiProject,.github/workflows/testcodereview.yml,19c751b1bef49febac46cb0342e3d7c5fcafee89,2024-12-09 07:43:29,"name: Code Review
permissions:
  contents: read
  pull-requests: write
'on':
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.TOKEN_ACCESS }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'

",19c751b1bef49febac46cb0342e3d7c5fcafee89,2024-12-09 07:43:29,"name: Code Review
permissions:
  contents: read
  pull-requests: write
'on':
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.TOKEN_ACCESS }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'

",0,0
leonarduk/cozycatslondon,.github/workflows/code-review.yml,057638b5692cd942c8b9405b6656b2dc027993b9,2024-11-05 19:56:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",057638b5692cd942c8b9405b6656b2dc027993b9,2024-11-05 19:56:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
YJU-OKURA/project_minori-nest-deployment-repo,.github/workflows/cr.yml,bedb3cffcffa5dfdc50c1f1d895c7628de998bea,2024-01-25 04:44:30,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",bedb3cffcffa5dfdc50c1f1d895c7628de998bea,2024-01-25 04:44:30,"name: OpenAI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
sidhantpanda/docker-express-typescript-boilerplate,.github/workflows/code-review.yml,775b4d34899778e8567df1def8aeeffdc6ccfe37,2023-04-11 13:30:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo",74f8097be1117f7340c2dde1ba6b20ab2ff4f87d,2023-04-11 13:30:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
",0,2
sparcs-kaist/otlplus-server,.github/workflows/code-review.yml,8dbc5141e458f4a88d151c6a0c1d1c36888c2c8c,2024-08-19 11:52:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gpt-review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",f01c64e66745cc60b53617cdcd23c6196ee7fdda,2025-01-14 13:50:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  gpt-review:
    #    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",148,1
grzegorzxpatyk/care4pet-vet,.github/workflows/cr.yml,e48fb844f1404f690f54ab7a8e736da522577d2c,2024-04-23 22:05:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",af0b46039719cba792d4e6737277f6d5ede62217,2024-05-09 23:26:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-turbo # https://platform.openai.com/docs/models
          PROMPT: The Code submitted for review is a part of Next.js project using /app directory router and React.js at it's core. For styling there is used TailwindCSS along with NextUI UI library. Please check if there are any confusions or irregularities in the following code. Be so kind to mention if there are any possibile good practices or design patterns to implement. # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",16,5
Ash-sungho/next-nginx-docker,.github/workflows/cr.yml,e3d1650d6b60adcc5ed1cd3bb8d9281889ea7c62,2024-08-13 00:26:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",4028a980257a8dab6d65aa170358b2609068f105,2024-08-13 01:24:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,4
YAPP-Github/24th-Web-Team-1-FE,.github/workflows/gpt-code-review.yml,6813fe1154651c0685896f3a4190a8b33c9dce30,2024-06-04 05:22:37,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
",f29d0b4193666ea21368e9bb128d8ed92fe4260e,2024-06-10 00:37:42,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
",5,1
VirtueGPT/ela-prac,.github/workflows/deploy.yml,81cd55d3a766bb2a5921dee557dcbc1be0d5f0fd,2024-05-08 02:32:24,"name: ela-prac-service

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [""main"", ""dev/feature1""]
#  pull_request:
#    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: Gradle로 빌드
        run: ./gradlew clean build
        shell: bash

      - name: 현재 시간 가져오기
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: 현재 시간 출력
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash

      - name: ChatGPT 코드 리뷰
        uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: 다음 코드 차이점에 혼동이나 불규칙이 있는지 확인해주세요
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000

      - name: 배포 패키지 생성
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk 배포
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: pre-prac
          environment_name: Pre-prac-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
",a13c4da33c8c2216379d5faeab0f360b15d76eed,2024-06-26 03:12:48,"name: ela-prac-service

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [ ""main"", ""dev/feature1"" ]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: Gradle로 빌드
        run: ./gradlew clean build
        shell: bash

      - name: 현재 시간 가져오기
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: 현재 시간 출력
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash

      - name: ChatGPT 코드리뷰
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          PROMPT: 다음 코드 차이점에 혼동이나 불규칙이 있는지 확인해주세요

#      - name: 배포 패키지 생성
#        run: |
#          mkdir -p deploy
#          cp build/libs/*.jar deploy/application.jar
#          cp Procfile deploy/Procfile
#          cp -r .ebextensions deploy/.ebextensions
#          cp -r .platform deploy/.platform
#          cd deploy && zip -r deploy.zip .

#      - name: Beanstalk 배포
#        uses: einaregilsson/beanstalk-deploy@v22
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: pre-prac
#          environment_name: Pre-prac-env
#          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
#          region: ap-northeast-2
#          deployment_package: deploy/deploy.zip
",49,3
lukashevich-t/equipment-accounting,.github/workflows/cr.yml,ed5c0b447dac87bbe4498389edbc354475ae1cc6,2024-02-13 14:29:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_API_URL }}
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Kotlin/Java developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. Review only files with *.java, *.kt and *.gradle extensions. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""",ed5c0b447dac87bbe4498389edbc354475ae1cc6,2024-02-13 14:29:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: ${{ secrets.OPENAI_API_URL }}
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Kotlin/Java developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. Review only files with *.java, *.kt and *.gradle extensions. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""",0,0
reisene/HulajDusza-serwis,.github/workflows/cr.yml,1bfa8fa51b61ba8d9978c0d75ea80b8b9aefab56,2024-09-23 18:30:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: POLISH
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",e86ab1b131b600dca9a7d8bf8698fa1d2f0cec78,2024-09-27 23:28:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4,1
withpulp/next-venture,.github/workflows/cr.yml,7b6f3f95b87861854a5a6af93d609c8ba5395303,2024-04-10 19:26:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",7b6f3f95b87861854a5a6af93d609c8ba5395303,2024-04-10 19:26:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
tauto1127/mikanos,.github/workflows/GPT.yml,0cf47e776ead2c9ce643664a06062b53e8866835,2024-03-08 05:25:57,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    #if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Optional; to run only when a label is attached
    #if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2000
          MAX_PATCH_LENGTH: 1600 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0cf47e776ead2c9ce643664a06062b53e8866835,2024-03-08 05:25:57,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    #if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Optional; to run only when a label is attached
    #if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2000
          MAX_PATCH_LENGTH: 1600 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
atsukihat/portfolio-atsuki,.github/workflows/ai-review.yml,ed4a71cbd36240bcfa0d919ce3060995e534e553,2024-10-03 16:47:08,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS
            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
            また提出されたコードが特に問題がない場合は、最後にPRの作成者を褒めちぎってください。基本的に語尾はにゃんでお願いします。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",de29b77104b7cbe47f5c1de9cc568156f6ea91c0,2024-10-03 18:29:21,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS
            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
            また提出されたコードが特に問題がない場合は、最後にPRの作成者を褒めちぎってください。基本的に語尾はにゃんでお願いします。
          top_p: 1
          temperature: 1
",0,3
jsyang-dev/kids-planner,.github/workflows/code-review.yml,adf1854f544eaa41667525563e9453be25c46d6d,2023-06-10 13:20:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAPI_API_KEY }}
          LANGUAGE: Korean
",c84d3b033ba0110b78359404cfaea924fc749710,2023-06-10 13:42:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,2
TEAM-BlockVote/CapstoneDesign,.github/workflows/cr.yml,e5accb322d122c4f4511619e5a2aeb90ca6e48d0,2023-03-31 13:30:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",dda7a550b60068fee61512f7d666d7c2aba25ba5,2023-03-31 17:54:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL:
          top_p: 1
          temperature: 1",0,1
sullivanpj/open-system,.github/workflows/cr.yml,518b9ccea0822dc5d04231b2b98257fc27256377,2023-06-22 20:09:42,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0fb6adf86fc8b5068ac697289905f1c4fedea546,2023-06-23 00:33:05,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,1
Dev-JoseRonaldo/conecta-ifpe,.github/workflows/cr.yml,33a4e819db521451fa49bb4d3965ed370b05ae71,2024-09-27 14:32:09,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",beeeed17385fabe7961b087101125d42b81e25b7,2024-09-27 21:01:10,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.MY_GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,1
101market/fast-grill-url,.github/workflows/cr.yml,7f3f91ef3280b9e7353dd7f9a331f253c3211b2d,2023-04-12 13:36:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL:
          top_p: 1
          temperature: 1
",0bdc1692fb67884780656ad1fd9c2e0f3aa786cc,2023-04-12 14:12:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,1
sojeonghwang/image-creator,.github/workflows/cr.yml,f117d6e18b96bf2a9cbac0fc207193decca3f65a,2024-08-01 14:23:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",f117d6e18b96bf2a9cbac0fc207193decca3f65a,2024-08-01 14:23:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",0,0
sunjin110/nes_emu,.github/workflows/cr.yml,0f230f4bd2425084dd515e85ad9a805b8a724fbf,2025-01-14 07:01:47,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4
          # PROMPT: Please check if there are any confusions or irregularities in the following code diff
          PROMPT: |
            Please provide a thorough and constructive code review of the following NES emulator code diff. In particular, focus on the following points:

            Correctness: Are there any logical errors, emulation inaccuracies, or potential bugs?
            Performance: Could there be any bottlenecks or inefficiencies, especially important in real-time emulation scenarios?
            Maintainability and Readability: Is the code structured and documented in a way that future developers can easily understand and modify it?
            Best Practices: Are there any improvements you would suggest regarding coding standards, design patterns, or NES-specific emulation best practices?
            Potential Pitfalls: Are there any hidden issues (such as timing synchronization or memory boundary cases) that might cause unexpected behavior?

            Please highlight any areas of confusion or irregularity, explain why they might be problematic, and suggest possible fixes or improvements. The code diff is as follows:
            ```diff
            ...
            ```
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0f230f4bd2425084dd515e85ad9a805b8a724fbf,2025-01-14 07:01:47,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4
          # PROMPT: Please check if there are any confusions or irregularities in the following code diff
          PROMPT: |
            Please provide a thorough and constructive code review of the following NES emulator code diff. In particular, focus on the following points:

            Correctness: Are there any logical errors, emulation inaccuracies, or potential bugs?
            Performance: Could there be any bottlenecks or inefficiencies, especially important in real-time emulation scenarios?
            Maintainability and Readability: Is the code structured and documented in a way that future developers can easily understand and modify it?
            Best Practices: Are there any improvements you would suggest regarding coding standards, design patterns, or NES-specific emulation best practices?
            Potential Pitfalls: Are there any hidden issues (such as timing synchronization or memory boundary cases) that might cause unexpected behavior?

            Please highlight any areas of confusion or irregularity, explain why they might be problematic, and suggest possible fixes or improvements. The code diff is as follows:
            ```diff
            ...
            ```
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
QuickSwap/interface-v2,.github/workflows/code-review.yml,daa9e7166da2a19761a3ee959f9c06c70bf89e7b,2023-03-25 04:38:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1",daa9e7166da2a19761a3ee959f9c06c70bf89e7b,2023-03-25 04:38:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1",0,0
JaeJunday/linux-sandbox,.github/workflows/code-review.yml,f50b1ef10a6b694773a2ba9fabd01fc298ddff9c,2024-07-26 01:51:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1bfd40360fc8dcc722779693110bd9893131a303,2024-07-26 02:02:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
ARenewalAgent-ITS/ara5-frontend,.github/workflows/code-review.yml,22e3fde9b7d3a26119901701a1c86943ef82ed4e,2023-09-21 18:56:56,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",22e3fde9b7d3a26119901701a1c86943ef82ed4e,2023-09-21 18:56:56,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
Gothax/ideal_worldcup,.github/workflows/cr.yml,37cd0f0691c3a37e5e4925f4b72d92451df54387,2024-07-14 11:23:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",37cd0f0691c3a37e5e4925f4b72d92451df54387,2024-07-14 11:23:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,0
KleinerCodeDrago/PriceTrackerExtension,.github/workflows/cr.yml,ebe12ff13da1c7f329cc8acaf6c95c584c9c9edc,2024-02-21 08:20:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT: ""You are a software engineer who should review this pull request. You are currently typing in the comment section:""
",ebe12ff13da1c7f329cc8acaf6c95c584c9c9edc,2024-02-21 08:20:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT: ""You are a software engineer who should review this pull request. You are currently typing in the comment section:""
",0,0
saebyeok0306/Kotlin-Study,.github/workflows/codeReview.yml,8a9d97d386d325f79db73972bf0395b9c91d2129,2023-06-15 03:35:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: korea
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-turbo-3.5-0613
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",984ae4f772f48de3baa2ec06b812606e26b016d6,2023-06-15 03:49:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: 한국어
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-turbo-3.5-0613
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,3
dsm23/parkrun-organise-pacer-events,.github/workflows/cr.yml,899bbbb04b54e5b63da697fa081b860059da094c,2024-12-08 17:27:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",899bbbb04b54e5b63da697fa081b860059da094c,2024-12-08 17:27:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
imseongtae/TIL,.github/workflows/cr.yml,a10410c4917c5df9f5b5ea601950500f50154f75,2024-01-14 14:03:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",5fea68a5e4d722042003cdf7cddc8b9a9aecb555,2024-01-14 14:32:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
",0,2
okdohyuk/okdohyuk-front,.github/workflows/cr.yml,423cfab24ccc8801422806497f4d631120660945,2024-10-23 11:30:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          top_p: 1
          temperature: 1
          max_tokens: 4096",423cfab24ccc8801422806497f4d631120660945,2024-10-23 11:30:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          top_p: 1
          temperature: 1
          max_tokens: 4096",0,0
dapiao-zhangwan/test,.github/workflows/cr.yml,97a1bd0d7b17426d507864433329f2893a1cc395,2023-12-13 03:46:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:
",3958726a67959d966d05519b6202924309923804,2023-12-14 02:23:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          MODEL: gpt-4
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:
",0,1
dsm23/dunstable-ux-proposal,.github/workflows/cr.yml,d3bbb728804cc16aeca08a39291ff1d8af0c7a60,2024-08-23 21:14:23,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",cce03228cbffa0c74eddf218ff478aae20fbc21b,2024-08-23 22:28:59,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,1
algo-ds-warmup/algo-ds-warmup-cpp,.github/workflows/cr.yml,6aa398c48553f7b63583055ca612f9919c5e3c8a,2024-01-27 16:25:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-1106-preview # https://platform.openai.com/docs/models
          PROMPT: Provide code review of the change. Follow the following code review rules. 1. Say nothing except ""NOT A CODE"" if it's not a code; 2. Does not describe the change you see; 3. Inspect for a bugs,undefined behaviors, smelly code; 4. Comment only with improvements could be done; 5. Be clear and specific; 6. Use examples; 7. Evaluate algorithm code complexity if the change contains code;
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3800
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",6aa398c48553f7b63583055ca612f9919c5e3c8a,2024-01-27 16:25:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-1106-preview # https://platform.openai.com/docs/models
          PROMPT: Provide code review of the change. Follow the following code review rules. 1. Say nothing except ""NOT A CODE"" if it's not a code; 2. Does not describe the change you see; 3. Inspect for a bugs,undefined behaviors, smelly code; 4. Comment only with improvements could be done; 5. Be clear and specific; 6. Use examples; 7. Evaluate algorithm code complexity if the change contains code;
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3800
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
rowan-wang/umi-react,.github/workflows/cr.yml,bc2759887979d544503c1e94c03d77ba010e6da8,2024-12-06 07:32:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://dashscope.aliyuncs.com/compatible-mode/v1
          MODEL: qwen-coder-plus # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.js,*.ts # glob pattern or regex pattern to include files, separated by comma

          # IF you are using azure openai
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",bc2759887979d544503c1e94c03d77ba010e6da8,2024-12-06 07:32:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://dashscope.aliyuncs.com/compatible-mode/v1
          MODEL: qwen-coder-plus # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.js,*.ts # glob pattern or regex pattern to include files, separated by comma

          # IF you are using azure openai
          AZURE_API_VERSION: xx
          AZURE_DEPLOYMENT: xx
",0,0
shimopino/proc-macro-playground,.github/workflows/cr.yml,0fd9502bf1e5eba907577e61622657f9059eec2c,2023-08-16 05:01:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # Optional; to run only when a label is attached
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          PROMPT:
          top_p: 1
          temperature: 1
",e4b3a8594cad53bffe674fadd7de6a10941b6aeb,2023-08-19 07:10:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  test:
    # Optional; to run only when a label is attached
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          # https://platform.openai.com/docs/models
          # MODEL: gpt-3.5-turbo
          MODEL: gpt-4
          PROMPT: 次のコード差分から①混乱や規則に従っていないコードがあるかどうか、②Rustのベストプラクティスに従うとどのようにコードを改善できるのか、③変数名や関数名で改善できる箇所があるのか、④不足しているテストケースやアサーションがないのか、⑤関数やクロージャーで独立化させるべき処理があるのか、を確認してそれぞれの観点に関する回答をそれぞれ出力してください
          top_p: 1
          temperature: 1
",3,4
denisandreenko/fire,.github/workflows/cr.yml,ac7bfaeb9610e7a17f0152adb5b85eb6bd9351ef,2023-04-22 11:51:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
",ac7bfaeb9610e7a17f0152adb5b85eb6bd9351ef,2023-04-22 11:51:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
",0,0
CDHANSOO/nevermind,.github/workflows/cr.yml,9f18b9d7357c90a49917f1e294d91ebd3fdc5fe0,2023-11-15 05:27:09,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",c88825acfc1974e3f9fdc2fd94d3d0c822c7b669,2023-11-16 13:59:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT: After summarizing the functionality of the provided code, review the following [language] code for incorrect code and suggest improvements.
",1,1
iCloudHospital/ChatGPT-CodeReview,.github/workflows/cr.yml,5a189903d0f248f5f9ced826af49ac57b5f446a8,2024-12-09 06:23:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.bianxie.ai/v1
          LOG_LEVEL: debug
",5a189903d0f248f5f9ced826af49ac57b5f446a8,2024-12-09 06:23:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.bianxie.ai/v1
          LOG_LEVEL: debug
",0,0
HidemaruOwO/ReScaler,.github/workflows/cr.yml,33f038bd6726ffef1b24e5224e33b7984ab57d39,2023-09-11 09:17:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please answer in Japanese
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",33f038bd6726ffef1b24e5224e33b7984ab57d39,2023-09-11 09:17:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please answer in Japanese
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
the-nulldev/AI-Pipeline,.github/workflows/cr.yml,2ff9981c14a86ae3ef67a63c2dbebfb1b353f3e8,2024-03-15 10:58:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",dc3d41c6c44badf504cd36a0f438d7362e470a2d,2024-03-15 11:20:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # please check the prompt in the prompt.txt file
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4000
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,5
practice0000001/practice0000001-classroom-ba35f0-classroom_gpt_review_3-classroom,.github/workflows/code-review.yml,01c0a128294e2449e4de63d1c2f3a3fedd62b149,2024-07-24 05:37:27,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/libgtest.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgtest_main.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",01c0a128294e2449e4de63d1c2f3a3fedd62b149,2024-07-24 05:37:27,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git python3 python3-pip
        pip3 install openai

    - name: Clone Google Test
      run: |
        cd /usr/src
        sudo git clone https://github.com/google/googletest.git

    - name: Build Google Test
      run: |
        cd /usr/src/googletest
        sudo cmake .
        sudo make

    - name: Copy Google Test libraries
      run: |
        sudo cp /usr/src/googletest/build/lib/libgtest.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgtest_main.a /usr/lib
        sudo cp /usr/src/googletest/build/lib/libgmock_main.a /usr/lib

    - name: Configure CMake
      run: cmake .

    - name: Build the project
      run: make

    - name: Run tests
      run: |
        make test || true
        ./build/test_calculator > result.log 2>&1
        cat result.log

    - name: Analyze with ChatGPT
      uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean
        MODEL: gpt-3.5-turbo
        CUSTOM_PROMPT: ${{ steps.get_prompt.outputs.prompt }}

    - name: Upload feedback
      uses: actions/upload-artifact@v2
      with:
        name: feedback
        path: feedback.log

    - name: Get custom prompt
      id: get_prompt
      run: |
        echo ""::set-output name=prompt::$(cat custom_prompt.txt)""
",0,0
wolfohgiraffers/eb_proj,.github/workflows/cr.yml,2d79b49fbe7d526b644a1c256decb3e8916b979a,2024-10-21 04:51:52,"name: ela-prac-service

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - ""main""
      - ""dev/feature/*""
#  pull_request:
#    types: [ opened, reopened, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: Show Current Time
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash
  review:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Korean  # 한국어로 변경!!@@
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          # PROMPT: Please check if there are any confusions or irregularities in the following code diff
          PROMPT: 기존 코드와의 차이점을 확인하고 관련된 코드 리뷰를 작성해줘
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",e923854f40ba1a2fcb0eea799e2faf9814a3c35c,2024-10-21 04:53:17,"name: ela-prac-service

# cr.yml 이후 pr
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - ""main""
      - ""dev/feature/*""
#  pull_request:
#    types: [ opened, reopened, synchronize ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: ""+09:00""

      - name: Show Current Time
        run: echo ""CurrentTime=${{steps.current-time.outputs.formattedTime}}""
        shell: bash
  review:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Korean  # 한국어로 변경!!@@
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          # PROMPT: Please check if there are any confusions or irregularities in the following code diff
          PROMPT: 기존 코드와의 차이점을 확인하고 관련된 코드 리뷰를 작성해줘
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,1
alekseysidorov/cyberpixie,.github/workflows/cr.yml,d8d301ab0bed6d476377ab238cbb73394c545193,2023-03-15 13:57:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",d8d301ab0bed6d476377ab238cbb73394c545193,2023-03-15 13:57:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
meanking/ununifi-chain,.github/workflows/cr.yml,a882b585d967db399cade2078e711fa9b4e9936c,2023-03-23 02:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",46a002b5a8199c133d03816613b1be0aba35dc71,2023-03-23 02:51:06,"permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo
          top_p: 1
          temperature: 1
",0,2
ujeans/oxox,.github/workflows/main.yml,027f2172d43656b70c477ca6bb98161d7f31d968,2024-07-21 08:26:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",026963f0d24abd08952ae01d82a582877bdc9566,2024-07-21 14:50:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [ ""master"" ]
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,1
takemo101/pr-code-review,.github/workflows/code-review.yml,48508ab097c643a2ef8c2c32f723254d86b5efd6,2024-06-26 02:02:22,"name: ChatGPT CodeReview

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  chatgpt-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ChatGPT CodeReview
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          MODEL: gpt-3.5-turbo
          PROMPT: |
            あなたはGitHubのプルリクエストをレビューする日本人の上級開発者です。
            以下の点に注意してレビューを行い、日本語でコメントしてください：
            1. コードの品質と可読性
            2. バグやエラーの可能性
            3. パフォーマンスの問題
            4. セキュリティの懸念事項
            5. ベストプラクティスの適用
            6. ドキュメンテーションの必要性
            レビューは簡潔かつ具体的に、そして建設的な方法で行ってください。
",48508ab097c643a2ef8c2c32f723254d86b5efd6,2024-06-26 02:02:22,"name: ChatGPT CodeReview

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  chatgpt-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ChatGPT CodeReview
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          MODEL: gpt-3.5-turbo
          PROMPT: |
            あなたはGitHubのプルリクエストをレビューする日本人の上級開発者です。
            以下の点に注意してレビューを行い、日本語でコメントしてください：
            1. コードの品質と可読性
            2. バグやエラーの可能性
            3. パフォーマンスの問題
            4. セキュリティの懸念事項
            5. ベストプラクティスの適用
            6. ドキュメンテーションの必要性
            レビューは簡潔かつ具体的に、そして建設的な方法で行ってください。
",0,0
cty288/Capstone,.github/workflows/code-review.yml,6030ff990c8766ae1493e4396bea7c63a8f1f79a,2023-11-10 21:19:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions, irregularities, potential bugs, or suggestions (if any) in the following code diff. If the file is a .meta file, do not generate any content.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 1000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",262043a05e3891c4be973975466dffe4fad9198f,2023-11-10 21:47:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-1106 # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions, irregularities, potential bugs, or suggestions (if any) in the following code diff. If the file seems to be a .meta file, do not generate anything (return nothing)! If there's no major issues or suggestions, also return nothing.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 1000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,3
GreatAuk/utopia-utils,.github/workflows/chatgpt_code_review.yml,e2eed3a2e88acf183653b1fc32066f961b238133,2023-02-24 15:59:01,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",2e5d23bb4e3b88f86425d2919bcaf73da2be9adb,2024-05-10 07:13:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",440,1
yoonucho/Mrs.YH-s-birthday-card,.github/workflows/cr.yml,e5f36c327d122f8f2312dee9eae7c8c122f22dde,2024-05-16 09:29:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",e5f36c327d122f8f2312dee9eae7c8c122f22dde,2024-05-16 09:29:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
katahiromz/ReactQnA,.github/workflows/cr.yml,ca76ccd23bd2bdde6af2101b95958312ccd435b4,2023-03-04 06:18:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",ca76ccd23bd2bdde6af2101b95958312ccd435b4,2023-03-04 06:18:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
Simon-He95/empathetic-backspace,.github/workflows/cr.yml,1a801e893f9e3d1e38b31431a32bd432e3d7a923,2023-12-17 03:14:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",1a801e893f9e3d1e38b31431a32bd432e3d7a923,2023-12-17 03:14:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
Team-Walkie/Walkie-Server,.github/workflows/cr.yml,81c3f72f95db1a995623bfd68a0af11ff613bea9,2023-05-02 11:29:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",81c3f72f95db1a995623bfd68a0af11ff613bea9,2023-05-02 11:29:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
Simon-He95/trim-paste,.github/workflows/cr.yml,8aaf0c60bb6db96f43b6f0d4ab9064fd3331f7e5,2024-02-01 12:59:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",8aaf0c60bb6db96f43b6f0d4ab9064fd3331f7e5,2024-02-01 12:59:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
Nico2d/nico-watzig-portfolio,.github/workflows/cr.yml,a58dd82f70207f827234ced4fe5ca5f704d60d6b,2024-09-10 15:25:54,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types:
            - opened
            - reopened
            - synchronize

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
                  OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",a58dd82f70207f827234ced4fe5ca5f704d60d6b,2024-09-10 15:25:54,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types:
            - opened
            - reopened
            - synchronize

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
                  OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",0,0
dsm23/dsm23-next-supabase-template,.github/workflows/cr.yml,bc223494654389fd9bf6340411a31b805fb70443,2024-09-25 17:15:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",1bfbb9028842024c9abf562345535a9b36d01470,2025-01-08 17:45:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",105,1
appbaseio/reactivesearch-api,.github/workflows/code-review.yml,7c3b7456b4a556469d201bb2670db0346c43e87c,2024-06-17 11:36:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k
          PROMPT:
          top_p: 1
          temperature: 0.3
          max_tokens: 8000
          MAX_PATCH_LENGTH: 8000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",7c3b7456b4a556469d201bb2670db0346c43e87c,2024-06-17 11:36:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-16k
          PROMPT:
          top_p: 1
          temperature: 0.3
          max_tokens: 8000
          MAX_PATCH_LENGTH: 8000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
olivejua/point-system,.github/workflows/main.yml,0a6c84e6b56f81280b9f5a0449e27b8f420a4a6e,2024-06-28 02:50:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",5544c7df8e3c5277f3eef6affd78bd5ce234e2f4,2024-07-14 08:47:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",16,1
ksg0605/DailyGratitudeApp,.github/workflows/cr.yml,43b067b15390b5410bad04afc2cca781e5741392,2024-07-18 00:59:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",43b067b15390b5410bad04afc2cca781e5741392,2024-07-18 00:59:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",0,0
lopins/msdn-images,.github/workflows/codereview.yml,e01a2686019cc3ec8fc550fd6a7b8f8f89a0bc27,2024-11-06 14:14:14,"name: LLM Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.pawan.krd/cosmosrp-it/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""请检查下面的代码差异是否有不规范、潜在的问题或者优化建议，用中文回答。""
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: ""/node_modules,*.md,/dist,/.github""",e01a2686019cc3ec8fc550fd6a7b8f8f89a0bc27,2024-11-06 14:14:14,"name: LLM Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.pawan.krd/cosmosrp-it/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""请检查下面的代码差异是否有不规范、潜在的问题或者优化建议，用中文回答。""
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
          IGNORE_PATTERNS: ""/node_modules,*.md,/dist,/.github""",0,0
Andrewshin-7th-technology-student/build-CI,.github/workflows/cr.yml,35b4c6f013cd0bc427390753877d0944a62d34ba,2024-10-22 01:19:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",fe88697b485eb198d65dfc917f25b58e812fee26,2024-10-22 06:25:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
kea-onlog/backend,.github/workflows/gpt-code-review.yml,1dd4dca83db081763f549f080d2092dd0c625410,2024-03-14 14:01:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",1dd4dca83db081763f549f080d2092dd0c625410,2024-03-14 14:01:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
storm-software/stormstack,.github/workflows/cr.yml,518b9ccea0822dc5d04231b2b98257fc27256377,2023-06-22 20:09:42,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0fb6adf86fc8b5068ac697289905f1c4fedea546,2023-06-23 00:33:05,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,1
eaysin-arafat/sync-workbench-api,.github/workflows/code-review.yml,d425335a2bb02a5277e798d2510c93a4fff252a8,2024-12-26 23:07:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
",d425335a2bb02a5277e798d2510c93a4fff252a8,2024-12-26 23:07:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
",0,0
ksg0605/TeachTime,.github/workflows/cr.yml,77d9fd5c4b4f7bb888a15b26239eba6b2fa417d0,2024-07-18 03:23:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",77d9fd5c4b4f7bb888a15b26239eba6b2fa417d0,2024-07-18 03:23:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",0,0
storm-software/cyclone-ui,.github/workflows/code-review.yml,fc42a04502ba9c0732a2588e905a4fde245bef77,2024-04-11 08:12:29,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",fc42a04502ba9c0732a2588e905a4fde245bef77,2024-04-11 08:12:29,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
sullivanpj/acidic,.github/workflows/code-review.yml,7ec275f45c1c235fe691ee9477da65a8b503004d,2023-11-08 16:18:01,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",7ec275f45c1c235fe691ee9477da65a8b503004d,2023-11-08 16:18:01,"name: ""Code Review""
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
VladimirEfremov91/qa_guru_gpt_project,.github/workflows/cr.yml,1180cd419e9b174f2402e3bf9caca4693981794f,2024-07-14 11:52:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.openai.com/v1/chat/completions
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced Kotlin/Java developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",a203a30d266d6cb38c623808099b3178fe776e64,2024-07-28 11:56:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini-2024-07-18
          PROMPT: ""You are an experienced Kotlin/Java developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",14,3
14-team13/acoe-backend,.github/workflows/ci_dev.yml,a3e5d258273e035147d565f298bef4a3eae0179c,2023-04-13 13:02:33,"# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

#dev브랜치에 PR날릴때 동작
on:
  pull_request:
    branches: [ ""dev"" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 소스 체크아웃
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.HYESOO_GITHUB_TOKEN }}
        submodules: 'true'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradlew 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # application-dev.yml 보도록 프로젝트 설정 완료함, YAML은 submodule에서 copy
    - name: Build with Gradle
      if: contains(github.ref, 'dev')
      run: SPRING_PROFILES_ACTIVE=[dev] ./gradlew clean copyGitSubmodule build -x test

  test:
    runs-on: ubuntu-latest

    steps:
    # 소스 체크아웃
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.HYESOO_GITHUB_TOKEN }}
        submodules: 'true'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradlew 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 테스트
    - name: Test with Gradle
      run: SPRING_PROFILES_ACTIVE=[test] ./gradlew copyGitSubmodule test

  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.HYESOO_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

",a3e5d258273e035147d565f298bef4a3eae0179c,2023-04-13 13:02:33,"# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

#dev브랜치에 PR날릴때 동작
on:
  pull_request:
    branches: [ ""dev"" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 소스 체크아웃
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.HYESOO_GITHUB_TOKEN }}
        submodules: 'true'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradlew 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # application-dev.yml 보도록 프로젝트 설정 완료함, YAML은 submodule에서 copy
    - name: Build with Gradle
      if: contains(github.ref, 'dev')
      run: SPRING_PROFILES_ACTIVE=[dev] ./gradlew clean copyGitSubmodule build -x test

  test:
    runs-on: ubuntu-latest

    steps:
    # 소스 체크아웃
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.HYESOO_GITHUB_TOKEN }}
        submodules: 'true'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradlew 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # 테스트
    - name: Test with Gradle
      run: SPRING_PROFILES_ACTIVE=[test] ./gradlew copyGitSubmodule test

  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.HYESOO_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

",0,0
sojeonghwang/video-player-js-sdk,.github/workflows/cr.yml,56ffc39415f3f902ce148d17ea801065e0cdc12d,2024-08-05 15:04:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",56ffc39415f3f902ce148d17ea801065e0cdc12d,2024-08-05 15:04:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",0,0
ksg0605/mandalart,.github/workflows/cr.yml,ed060de2cad09a5f5071d19a651e3280754a1ca8,2024-07-17 02:02:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",ff23f0238abef8fc23c4e2036bcc36db646af7ee,2024-07-17 03:40:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o
",0,2
commonality2u/LLMKit,.github/workflows/cr.yml,f57603f9252bc3f674de60573d298befc80a32e1,2023-03-28 21:13:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1",d82e8be123d49ab762a5faf280bab36b0825a09d,2023-03-28 21:40:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1",0,1
sojeonghwang/video-processer,.github/workflows/cr.yml,690226675515710cbd3e8fb2c6747b58e59f57de,2024-08-01 14:37:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",690226675515710cbd3e8fb2c6747b58e59f57de,2024-08-01 14:37:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          LANGUAGE: Korean
",0,0
ainunns/kanban-next,.github/workflows/code-review.yml,d1b2b6ac6608470a87682db380e12d90ae7f435d,2024-03-07 08:10:40,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",d1b2b6ac6608470a87682db380e12d90ae7f435d,2024-03-07 08:10:40,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
dsm23/dsm23-tailwind-nextjs-starter-blog,.github/workflows/cr.yml,f5e8a1729170ec52e1fadb2de4999afa81ea918d,2024-10-04 13:48:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",f5e8a1729170ec52e1fadb2de4999afa81ea918d,2024-10-04 13:48:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
Simon-He95/fast-jump,.github/workflows/cr.yml,c4d4d220aeeb314159a6e2dd102c616c22babb6c,2023-12-30 08:37:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",c4d4d220aeeb314159a6e2dd102c616c22babb6c,2023-12-30 08:37:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
KDT-Final-Team4/salarying-fe,.github/workflows/cr.yml,0b8c330bbefb28dbe4b931ddf977d7bddef0d285,2023-03-27 06:26:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",5ea333c9686640944db09c33c7e0d94defa5a304,2023-04-07 06:40:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",11,3
aariprom/newbie-project-jk,.github/workflows/cr.yml,434a18135aab369ea7911405ea7065d4bcc50e58,2024-11-16 22:33:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",434a18135aab369ea7911405ea7065d4bcc50e58,2024-11-16 22:33:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,0
GDG-on-Campus-KNU/3rd-sc-ex1-CitySavior-Android,.github/workflows/cr.yml,8cfb375d3354bea8710b2658bab19fad3c0b8079,2024-01-10 13:00:54,"name: Code Review # workflow 이름

# 이 작업 동안에는 코드를 읽고 PR에 코멘트만 추가해주면 된다.
permissions:
  contents: read # 읽기 권한
  pull-requests: write # PR에 코멘트 추가 권한

on: # 언제 실행할지
  pull_request: # PR이 올라오면
    types: [ opened, reopened, synchronize ] # PR 생성 , 재생성 , 커밋같은 동기화 작업이 있을때

jobs:
  test:
    # 만약 PR에 gpt review 라는 라벨이 붙어있을때만 실행하고 싶다면 아래와 같이 작성하면 된다.
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 이 부분은 자동적으로 깃허브에서 생성되는 부분이기 때문에 따로 설정할 필요가 없다.
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # 여기서 secrets.등록한_키 이름을적어주면된다. 나는 API_KEY로 등록 했기 때문에 API_KEY로 작성했다.
          LANGUAGE: Korean #한국어
",8cfb375d3354bea8710b2658bab19fad3c0b8079,2024-01-10 13:00:54,"name: Code Review # workflow 이름

# 이 작업 동안에는 코드를 읽고 PR에 코멘트만 추가해주면 된다.
permissions:
  contents: read # 읽기 권한
  pull-requests: write # PR에 코멘트 추가 권한

on: # 언제 실행할지
  pull_request: # PR이 올라오면
    types: [ opened, reopened, synchronize ] # PR 생성 , 재생성 , 커밋같은 동기화 작업이 있을때

jobs:
  test:
    # 만약 PR에 gpt review 라는 라벨이 붙어있을때만 실행하고 싶다면 아래와 같이 작성하면 된다.
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 이 부분은 자동적으로 깃허브에서 생성되는 부분이기 때문에 따로 설정할 필요가 없다.
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # 여기서 secrets.등록한_키 이름을적어주면된다. 나는 API_KEY로 등록 했기 때문에 API_KEY로 작성했다.
          LANGUAGE: Korean #한국어
",0,0
Techeer-blabla/techeer-resume,.github/workflows/codereview.yml,50e94a8acc9d674b63e8a452e0499d15f10efec7,2024-09-21 17:45:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",6f0270fdfd50467d05c4c649779c733504c957e4,2024-10-06 14:32:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean # default: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: ""gpt-4o-mini"" # https://platform.openai.com/docs/models
          PROMPT: ""code review please"" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",14,2
LucetTin5/alchol-diary,.github/workflows/cr.yml,db7dfd3d9bf9770cd224bac3601edfc569f3bdc5,2023-04-02 10:12:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL:
          top_p: 1
          temperature: 1
",c0d1e87c42bb065105aaa78a8c026bada6659d9f,2023-04-05 15:27:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",3,1
Simon-He95/filename-detection,.github/workflows/cr.yml,f2a7cbab2bc4c7742265672521e369f64253ad5a,2023-11-29 16:16:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",f2a7cbab2bc4c7742265672521e369f64253ad5a,2023-11-29 16:16:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
aad3m/VelaPlugin,.github/workflows/codereview.yml,d1204d6b15fb48e536956864a5baef66b02eb17a,2024-07-19 17:13:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",d1204d6b15fb48e536956864a5baef66b02eb17a,2024-07-19 17:13:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
HC-kang/nestjs_study,.github/workflows/code_review.yml,d045b953bb8ca2e1712eb40f351095353c478380,2023-10-08 08:48:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push
#   pull_request:
#     types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",d31b5413c949c85d3b8b23e4055f29ef255e5673,2023-10-08 08:50:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,1
Wafulah/glace-api,.github/workflows/cr.yml,06f120c1a372415f1400609386d609887961c615,2024-10-07 17:50:36,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: python manage.py test

      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",06f120c1a372415f1400609386d609887961c615,2024-10-07 17:50:36,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: python manage.py test

      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
feilen/tuxedo-blender-plugin,.github/workflows/chatgpt.yml,fc308809798d5756f28a116f1faf5a1ebe8ddb64,2023-09-29 06:34:57,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: Please identify any major code regressions or significant improvements in the following python diff.
          #top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          #temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 5000
          #MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",46c01f54cb3e730db49399f01a5b47a6c849e7a9,2023-09-29 06:54:38,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: Please identify any major code regressions or significant improvements in the following python diff.
          #top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          #temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 5000
          #MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
pokt-network/pocket,.github/workflows/cr.yml,336cbf28a61746d8a32c58ed5ce5464434e5c51e,2023-04-06 18:45:30,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    name: GPT Review
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_OLSHANSKY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-4
          # top_p: 1
          # temperature: 1
",336cbf28a61746d8a32c58ed5ce5464434e5c51e,2023-04-06 18:45:30,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    name: GPT Review
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_OLSHANSKY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-4
          # top_p: 1
          # temperature: 1
",0,0
Rory0304/molab-renewal,.github/workflows/cr.yml,96b94a7f65c5a968425bfc1e0cfb87c4b2cc9e98,2024-01-17 09:54:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.MOLAB_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",96b94a7f65c5a968425bfc1e0cfb87c4b2cc9e98,2024-01-17 09:54:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.MOLAB_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",0,0
Himedia-bootcamp/ActionsTest,.github/workflows/codereview.yml,90661be0da62df1a98a90a6cb4d890542463a960,2024-07-02 01:19:06,"name: 코드리뷰

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ChatGPT 코드리뷰
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          PROMPT: 다음 코드 차이점에 혼동이나 불규칙이 있는지 확인해주세요(코드리뷰)
",90661be0da62df1a98a90a6cb4d890542463a960,2024-07-02 01:19:06,"name: 코드리뷰

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ChatGPT 코드리뷰
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          PROMPT: 다음 코드 차이점에 혼동이나 불규칙이 있는지 확인해주세요(코드리뷰)
",0,0
innovationCamp/messenger-service,.github/workflows/workflow-PR.yml,e515d2ef7265cf18783ed99cb43fa4374c119d14,2023-08-18 04:41:00,"name: Code Review and Build
# develop PR시 gpt 코드 리뷰 생성 후 빌드까지 진행
# PR에서는 도커 이미지 생성 X
on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize]
# opened: 새로운 풀 리퀘스트가 열릴 때
# synchronize: 풀 리퀘스트가 변경되었을 때 (새로운 커밋이 푸시되었을 때)

permissions:
  contents: write
  pull-requests: write

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.ORG_GPT_API_KEY }}
          LANGUAGE: Korean

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - run: touch ./src/main/resources/application.properties
      - run: echo ""${{ secrets.ACTIONS_BUILD_SECRETS }}"" > ./src/main/resources/application.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
",8619d343e442a62d01d701907856a63ff77ea631,2023-08-18 15:01:50,"name: Code Review and Build
# develop PR시 gpt 코드 리뷰 생성 후 빌드까지 진행
# PR에서는 도커 이미지 생성 X
on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize]
# opened: 새로운 풀 리퀘스트가 열릴 때
# synchronize: 풀 리퀘스트가 변경되었을 때 (새로운 커밋이 푸시되었을 때)

permissions:
  contents: write
  pull-requests: write

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.ORG_GPT_API_KEY }}
          LANGUAGE: Korean

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - run: touch ./src/main/resources/application.properties
      - run: echo ""${{ secrets.ACTIONS_BUILD_SECRETS }}"" > ./src/main/resources/application.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      # Docker image 생성 및 dockerhub에 push
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: khchoo/team12-docker-hub
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_PW }}

      # 서버에서 Docker compose 실행 (docker-compose.yml 파일이 서버에 있어야 함)
      # HOST_DEV = 퍼블릭 IPv4 DNS , USERNAME = ubuntu, KEY = pem 키 전체
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master # https://github.com/appleboy/ssh-action
        with:
          host: ${{ secrets.ORG_EC2_ADDRESS }}
          username: ${{ secrets.ORG_EC2_USERNAME }}
          key: ${{ secrets.ORG_EC2_PEMKEY }}
          port: 22
          script: |
            sudo usermod -aG docker $USER
            sudo docker image prune -f
            sudo docker ps
            sudo docker images
            sudo docker compose down
            sudo docker rmi $(docker images -a -q)
            sudo docker ps
            sudo docker images
            sudo docker compose up -d
",0,5
algo-ds-warmup/algo-ds-warmup-java,.github/workflows/cr.yml,694af8f7d360eb95ab81b7f825fed138c9e2efb5,2024-02-05 18:17:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-1106-preview # https://platform.openai.com/docs/models
          PROMPT: Provide code review of the change. Follow the following code review rules. 1. Say nothing except ""NOT A CODE"" if it's not a code; 2. Does not describe the change you see; 3. Inspect for a bugs,undefined behaviors, smelly code; 4. Comment only with improvements could be done; 5. Be clear and specific; 6. Use examples; 7. Evaluate algorithm code complexity if the change contains code;
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3800
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",694af8f7d360eb95ab81b7f825fed138c9e2efb5,2024-02-05 18:17:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-1106-preview # https://platform.openai.com/docs/models
          PROMPT: Provide code review of the change. Follow the following code review rules. 1. Say nothing except ""NOT A CODE"" if it's not a code; 2. Does not describe the change you see; 3. Inspect for a bugs,undefined behaviors, smelly code; 4. Comment only with improvements could be done; 5. Be clear and specific; 6. Use examples; 7. Evaluate algorithm code complexity if the change contains code;
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 3800
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
sj-distributor/PostBoy.Web,.github/workflows/CodeReview.yml,31b1a7704584db7f3dc7832c46280160f79bb521,2023-04-10 11:45:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",e7e9b77bcd643ca6a67396387f95f4ba2c077dda,2023-04-14 01:10:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",3,2
remberq/bun-bot,.github/workflows/main.yml,5e4e7a672c662cbc92f12fcd0c31f96b964a32a5,2024-02-06 07:26:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced TypeScript developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",5e4e7a672c662cbc92f12fcd0c31f96b964a32a5,2024-02-06 07:26:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          MODEL: gpt-3.5-turbo
          PROMPT: ""You are an experienced TypeScript developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""
",0,0
KleinerCodeDrago/Neuronal-Network,.github/workflows/cr.yml,7286170568439f393952c9f3d6b906ddccb4f143,2024-02-11 17:04:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",283cd6199a4ea373557f70da98d60ace3cc21cf6,2024-02-11 17:04:51,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT: ""Answer as if you where software engeneer who should check this pull request and if everything looks like it works and is up to coding standards. Don't give your summary of everything that is working, only focus on telling if you give your okay for a merge with the master branch or why not. You are currently typing in the comment field for this pull request:""",0,3
KangBaekGwa/ItemAuction,.github/workflows/code_review_from_chatgpt.yml,c57652fdc63f15c675bb5f4987621d33a2f43425,2024-10-08 05:47:30,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o-mini",98994c94e499f56ee58c54ea7bcc996ef8abd3da,2024-10-08 05:59:42,"name: ChatGPT Code Review. (Only 'dev' Branch)

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.base_ref == 'dev' && contains(github.event.pull_request.labels.*.name, 'needs-review')
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o-mini",0,1
devfrank9/nuber-eats-backend,.github/workflows/cr.yml,5fce8d70fd92649511f750c4bc0fcf607ec6d0fa,2023-03-21 05:20:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",5fce8d70fd92649511f750c4bc0fcf607ec6d0fa,2023-03-21 05:20:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,0
songyuji30/shopping-mall,.github/workflows/code_review.yml,102fa787da1d8b231ae6c30b5a228a2224ab9cab,2024-05-10 02:49:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""You are the senior Python developer in a team. A junior developer has submitted a pull request for a new feature. You need to review the code and provide feedback. Review the code and provide feedback.""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",102fa787da1d8b231ae6c30b5a228a2224ab9cab,2024-05-10 02:49:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""You are the senior Python developer in a team. A junior developer has submitted a pull request for a new feature. You need to review the code and provide feedback. Review the code and provide feedback.""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
clickcaramel/PolyglotRocks,.github/workflows/gpt-review.yml,8bb4757c110bc309768e94cd8d000923945fe19b,2023-03-17 16:57:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",8bb4757c110bc309768e94cd8d000923945fe19b,2023-03-17 16:57:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
two-clock/backend,.github/workflows/ci.yml,51df3e18691e4b6c253cd005294beab969b14dd7,2024-07-20 15:10:05,"name: build

on:
  pull_request:
    types: [ opened, synchronize ]
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Show Current Time
        run: |
          echo ""Current Time: ${{ steps.current-time.outputs.time }}""
        shell: bash

      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: 'Korean'
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          max_tokens: 100
          MAX_PATCH_LENGTH: 10000",1d9c40342fe65e36308642c6359ba5ab315fdc8f,2024-09-07 15:00:45,"name: build

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Show Current Time
        run: |
          echo ""Current Time: ${{ steps.current-time.outputs.time }}""
        shell: bash

      - name: ChatGPT codeReviewer
        uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: 'Korean'
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: Please review the code changes for any logical inconsistencies, performance issues, readability improvements, or potential bugs. Ensure the code aligns with its intended purpose, and suggest improvements for maintainability and clarity where applicable.
          top_p: 1
          MAX_PATCH_LENGTH: 10000",48,2
autoaim-jp/chatgpt-movie-web,.github/workflows/chatgpt-code-review.yml,ffda05793ae8657916c37233a7e16403317bf835,2024-12-15 09:54:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: GPT-4o # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.js,*.sh,*.html,*.css,*.yml,*.json # glob pattern or regex pattern to include files, separated by comma

",045f0308db47c050e0d728e3c16292b519915bdb,2025-01-20 13:33:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: GPT-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules # glob pattern or regex pattern to ignore files, separated by comma

",36,2
AlexMikhalochkin/home-server,.github/workflows/chat-gpt-code-review.yml,45aa873c9f56563852fd4596d78016aee03ca103,2024-07-13 11:18:51,"name: ChatGpt Code Review
permissions:
  contents: read
  issues: write
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 2000
          MAX_PATCH_LENGTH: 10000
",c1dab21dbdf2bda6757a03ff55ffc8fd348b0094,2024-07-13 12:05:57,"name: ChatGpt Code Review
permissions:
  contents: read
  issues: write
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  review-code:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 2000
          MAX_PATCH_LENGTH: 10000
",0,1
HariHodzic/post-comment-test,.github/workflows/pr.yml,2b678cc64547679ced750e5563d4eb44b6456a2c,2023-09-13 13:38:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",2b678cc64547679ced750e5563d4eb44b6456a2c,2023-09-13 13:38:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  GPT-CODE-REVIEW:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
vangona/core-point-next,.github/workflows/code-review.yml,be772e69d4aa205de45ffc4e196d902465418823,2023-11-04 12:56:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          max_tokens: 5000
          MAX_PATCH_LENGTH: 5000
",2694378a4d8ce1c0286205270710e44f9eef857a,2023-11-12 11:43:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          max_tokens: 10000
          MAX_PATCH_LENGTH: 5000
",7,1
LeeByeongMuk/nextjs-starter-kit,.github/workflows/review.yml,863e5b30439c2684019fcf8628404233e690874f,2024-09-07 15:40:47,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-4o  # gpt-3.5-turbo
          PROMPT: ""코드를 검토하고 오류 또는 불규칙성이 있는지 확인해주세요.""
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",3df5728c26688f03d3a326b96e293f821a8561cd,2024-09-19 05:26:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  review:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-4o  # https://platform.openai.com/docs/models
          PROMPT: ""변경전 소스에 대한 한줄 요약을 '## AS-IS', 변경후 소스에 대한 한줄 요약을 '## TO-BE' 라는 제목으로 요약해줘. 개선할 부분이 있다면 '## 개선' 이라는 제목으로 제안해줘. 예상되는 에러가 있다면 '## 주의' 라는 제목으로 알려줘.""
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",11,1
Blazity/next-news,.github/workflows/cr.yml,fa9a0bc707895184001eda4509940ac271f0d937,2023-09-04 08:17:06,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",4537f57cfb1034a33850830eddff982482935f98,2023-09-27 12:45:20,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    env:
      SKIP_ENV_VALIDATION: true
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",23,4
tauto1127/aspnetMVCUserTokenTest,.github/workflows/GPT.yml,c79953255fa493f61a08afa8a21b9518abe704d6,2024-01-06 03:57:29,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    #if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          top_p: 1
          temperature: 1

",8d8f13d8886ff7223afd5b6e649defb730d082ae,2024-01-08 02:02:57,"name: GPTくん

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    #if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Optional; to run only when a label is attached
    #if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          #MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          #PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 2000
          MAX_PATCH_LENGTH: 1600 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1,11
duymanh3602/mysql2mongo,.github/workflows/main.yml,cbfa42c1dce69bbd7029161f7376e4ed6f150eef,2024-01-10 10:14:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",cbfa42c1dce69bbd7029161f7376e4ed6f150eef,2024-01-10 10:14:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  push:

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",0,0
f-lab-edu/pet-link,.github/workflows/code_review.yml,233c86845da96e50de5b7b34831c9cb29355f060,2023-12-05 02:52:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",110a73a16675d877854f5e2f937471917221ac50,2023-12-06 09:31:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  code-review:
    # 커밋 내용중에 #code-review 혹은 #code_review가 포함되어 있을 때만 실행
    if: ${{ contains(github.event.head_commit.message, '#code-review') }} || ${{ contains(github.event.head_commit.message, '#code_review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",1,4
todayclothes/backend,.github/workflows/codeReview.yml,f51b351abc0397b270a6ed6fbc09338c8f67b2f0,2023-04-10 07:41:43,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",f51b351abc0397b270a6ed6fbc09338c8f67b2f0,2023-04-10 07:41:43,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",0,0
sonqh/netflix-clone-backend,.github/workflows/code-review.yml,50eecf82a5d354cfa0d3fa2f46b25a4aec957683,2025-01-25 10:33:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
",cace30fe701704801c3116e9589c56f115fc209a,2025-01-25 10:47:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English # https://platform.openai.com/docs/api-reference/chat/create#chat/create-language
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: '*.js,*.ts' # glob pattern or regex pattern to include files, separated by comma

",0,1
fuerza-assessments/teste-qa-2024,.github/workflows/cr.yml,3598a7f2cca7896b68a11f86a3485557f1ba174d,2024-01-16 14:40:46,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",3598a7f2cca7896b68a11f86a3485557f1ba174d,2024-01-16 14:40:46,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
",0,0
hyjoong/ncnc,.github/workflows/code-review.yml,fc9cc9dde52b671a902eb3beadbfeafcbead447b,2023-08-12 11:52:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_API_KEY }}
          LANGUAGE: Korean
",fc9cc9dde52b671a902eb3beadbfeafcbead447b,2023-08-12 11:52:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_API_KEY }}
          LANGUAGE: Korean
",0,0
ConceptCodes/bathrooom-queue-node,.github/workflows/code-review.yml,2b3c5c8df6c18509a6c80b08a4f7846a31922695,2023-12-24 09:52:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",2b3c5c8df6c18509a6c80b08a4f7846a31922695,2023-12-24 09:52:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
THE-FIRST-DANCE/soomga-frontend,.github/workflows/code-review.yml,5c20f9c27bb960e18f9ff10c7f2b649e5b341dc9,2024-02-21 05:56:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: KOREAN
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          max_tokens: 4096
",5c20f9c27bb960e18f9ff10c7f2b649e5b341dc9,2024-02-21 05:56:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: KOREAN
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          max_tokens: 4096
",0,0
Rakdol/P2P-Simulator,.github/workflows/cr.yml,865ed784808268545b8464bd734ac005896c9244,2024-07-25 02:31:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",865ed784808268545b8464bd734ac005896c9244,2024-07-25 02:31:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
erayozer17/acmeshop,.github/workflows/code-review.yml,c0d28439dac521110cf9a7bb88b37d6599d6c073,2024-05-26 18:32:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [labeled]

jobs:
  review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          #OPENAI_API_ENDPOINT: https://api.openai.com/v1/chat/completions
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Make a short code review in the following code difference and only point the possible mistakes or the parts against industry standards. # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          debug: true",c0d28439dac521110cf9a7bb88b37d6599d6c073,2024-05-26 18:32:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [labeled]

jobs:
  review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          #OPENAI_API_ENDPOINT: https://api.openai.com/v1/chat/completions
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Make a short code review in the following code difference and only point the possible mistakes or the parts against industry standards. # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          debug: true",0,0
KEA-DoKebi/dalkom-backend,.github/workflows/GptCodeReview.yml,b5bd41f0c428323883281c3b7fc24020203205c4,2024-02-15 00:19:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened,synchronize]
    branches:
      - dev

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",b5bd41f0c428323883281c3b7fc24020203205c4,2024-02-15 00:19:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened,synchronize]
    branches:
      - dev

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
sword-x-shield/pizza-ui,.github/workflows/code-check.yml,96e762b35e82a342606ffa600966c1eeb085525c,2023-03-23 02:35:35,"name: code check

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",96e762b35e82a342606ffa600966c1eeb085525c,2023-03-23 02:35:35,"name: code check

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
to06109/GPTTF,.github/workflows/main.yml,44840f414e6a23a6b557b96f452652a012b5d4ec,2024-11-04 14:10:51,"name: GPT Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o-mini
          PROMPT: 당신은 경험이 풍부한 개발 전문가입니다. 코드리뷰를 해주세요.

steps:
  - name: Read prompt file
    id: prompt
    uses: juliangruber/read-file-action@v1
    with:
    path: ./code-review-prompt.txt
 - name: Run GPT Code Review
   uses: anc95/ChatGPT-CodeReview@main
   env:
     GITHUB_TOKEN: ${{ secrets.TOKEN }}
     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
     LANGUAGE: Korean
     MODEL: gpt-4
     PROMPT: ${{ steps.prompt.outputs.content }}",c2ef7c09d8c704fafcc4dead021c6eebbd5382dc,2024-11-04 15:27:40,"name: GPT Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read prompt file
        id: prompt
        uses: juliangruber/read-file-action@v1
        with:
          path: ./code-review-prompt.txt
      - name: Run GPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4o-mini
          PROMPT: ${{ steps.prompt.outputs.content }}
",0,10
jnu-sf-engineering/frontend,.github/workflows/code_review_from_chatg.yml,f1cbf794031595192075190c55e5877ed938bb3f,2024-11-05 08:02:24,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
# 출처: https://itchipmunk.tistory.com/592 [다람쥐의 스프링 개발 블로그:티스토리]
",548bf185f6c4cd7a96c8ccb044b9fe86162ac043,2024-11-08 16:12:18,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run ChatGPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
          ACTIONS_RUNNER_DEBUG: 'true'  # 디버그 모드 활성화
",3,8
imseongwoo/snore_tracker,.github/workflows/cr.yml,7e2e5eb038752d990828ab0cae15412ee969b369,2024-05-02 10:11:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
          OPENAI_API_KEY: ${{secrets.OPEN_API_KEY}}
          LANGUAGE: Korean
",7e2e5eb038752d990828ab0cae15412ee969b369,2024-05-02 10:11:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
          OPENAI_API_KEY: ${{secrets.OPEN_API_KEY}}
          LANGUAGE: Korean
",0,0
2lambda123/dragonflyoss-Dragonfly2,.github/workflows/cr.yml,49ad38e7d9c675880f13044721e7de3d1a07bdb1,2023-06-28 09:34:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  chatgpt_code_review:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          top_p: 1
          temperature: 1
",6f866ad858d8bc9bed33df3f0b5373a31d87e051,2023-06-28 09:34:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - 'code-review'

jobs:
  chatgpt_code_review:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          top_p: 1
          temperature: 1
",0,1
jk-oster/simple-php-mvc,.github/workflows/cr.yml,190838997c3f325e80845364ce1b04e4460361e2,2023-07-21 18:36:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",190838997c3f325e80845364ce1b04e4460361e2,2023-07-21 18:36:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
jakobnunnendorf/shop,.github/workflows/cr.yml,06f07fbaf4c6351b6523a7ff7b4e7f9cd32a70b0,2023-05-27 16:44:05,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",66931824ce4a98f95166c35e241c4eb12e4bfb8b,2023-06-15 11:11:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",18,2
hyejj19/bottle-note-deploy,.github/workflows/code-review.yml,6fa0b02593dd366a4a5416143577abf64ed4e096,2024-05-01 11:33:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",746d84b9bb3f9aeb24f97d89a6bc9b0b9e386487,2024-08-11 05:32:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",101,1
jschibelli/nextjs-enterprise-boilerplate,.github/workflows/cr.yml,8c8855e0e7175d181583a23c0875712a19727703,2024-06-05 00:51:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",287a8d4ef5974d5bcec05184439ae03c50adb8c5,2024-06-05 00:52:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,1
MaxRozh/team-upturn,.github/workflows/cr.yml,7a167c3c1dd4ead7ff5e1774333c267101ba7a99,2024-02-10 18:58:39,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",7a167c3c1dd4ead7ff5e1774333c267101ba7a99,2024-02-10 18:58:39,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
Project-Catcher/batch-service,.github/workflows/cr.yml,335a939ebbd9016ad7dbe312ea8daee08a605839,2023-11-04 08:40:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

env:
  WEBHOOK_URL: ${{ secrets.WEBHOOK }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          MODEL: gpt-3.5-turbo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          LANGUAGE: Korean

      - name: Send Notification
        if: ${{ always() }}
        run: |
          if [[ ${{ job.status }} == ""success"" ]]; then
            MESSAGE=""✅ ${{ job.status }} 백엔드 OpenAI 코드 리뷰 성공: batch-service - by ${{ github.actor }}""
          else
            MESSAGE=""❌ ${{ job.status }} 백엔드 OpenAI 코드 리뷰 실패: batch-service - by ${{ github.actor }}""
          fi
          curl -X POST -H ""Content-Type: application/json"" --data ""{\""text\"":\""${MESSAGE}\""}"" ${{ env.WEBHOOK_URL }}",7ca031ff037410a3ddf974f90a07c475520a9beb,2023-11-20 16:03:32,"name: Code Review

permissions:
  contents: read
  pull-requests: write

env:
  WEBHOOK_URL: ${{ secrets.WEBHOOK }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code_review:
    runs-on: self-hosted
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          MODEL: gpt-3.5-turbo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          LANGUAGE: Korean

      - name: Send Notification
        if: ${{ always() }}
        run: |
          if [[ ${{ job.status }} == ""success"" ]]; then
            MESSAGE=""✅ ${{ job.status }} 백엔드 OpenAI 코드 리뷰 성공: batch-service - by ${{ github.actor }}""
          else
            MESSAGE=""❌ ${{ job.status }} 백엔드 OpenAI 코드 리뷰 실패: batch-service - by ${{ github.actor }}""
          fi
          curl -X POST -H ""Content-Type: application/json"" --data ""{\""text\"":\""${MESSAGE}\""}"" ${{ env.WEBHOOK_URL }}",16,1
9in-team/Backend_java,.github/workflows/build.yml,a21dfd80f9ab6213406dad3ee9c1115cf019969e,2023-12-28 00:01:28,"name: 9-in Team 테스트 자동화

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 프로젝트 체크아웃합니다.
        uses: actions/checkout@v2

      - name: JDK 21을 설치합니다.
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: TimeZone을 Asia/Seoul로 설정합니다
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Seoul

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Gradle 명령 실행을 위한 권한을 부여합니다
        run: chmod +x gradlew

      - name: Gradle build를 수행합니다
        run: ./gradlew clean build

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: CodeCov에서 jacoco 분석을 해줍니다.
        uses: codecov/codecov-action@v3
        env:
          name: 9in-codecov
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          files: ./team-service/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Chat GPT가 코드리뷰를 해줍니다.
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",6ecc6027a48039bb272ee3c526a20f10c4967925,2023-12-28 00:01:28,"name: 9-in Team 테스트 자동화

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 프로젝트 체크아웃합니다.
        uses: actions/checkout@v3

      - name: 자바 21을 설치합니다.
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: 시간을 서울시간으로 맞춥니다.
        uses: zcong1993/setup-timezone@master
        with:
          timezone: Asia/Seoul

      - name: 그래들 캐시를 삭제합니다.
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: 그래들 명령 실행을 위한 권한을 부여합니다
        run: chmod +x gradlew

      - name: 프로젝트를 빌드합니다.
        run: ./gradlew clean build

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ./team-service/build/test-results/test/TEST-*.xml

      - name: 실패한 라인에 코멘트 달리게 한다.
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: ./team-service/build/test-results/test/TEST-*.xml

      - name: 코드코브에서 자코코 분석을 해줍니다.
        uses: codecov/codecov-action@v3
        env:
          name: 9in-codecov
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          files: ./team-service/build/reports/jacoco/test/jacocoTestReport.xml

      - name: 챗봇이 코드리뷰를 해줍니다.
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,8
Kawasei/OpenAIReviewTest,.github/workflows/OpenAI_review.yml,a743a1ede6fdf37d0844286ff384971467502060,2024-12-24 08:08:59,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - ""**.cs""

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            あなたはシニアエンジニアです。回答は日本語でお願いします。
            誰にとっても読みやすいコードになるよう、改善点を見つけたら積極的にレビューしてください。
            指摘時には変更する理由を説明した上で、変更後のコード例を示してください。
            特に以下の点を指摘してください:
            - 誤解を招いたり、実態を正確に表していない命名があるか
            - 適切な粒度で変数が定義されているか
            - メソッド・関数の区分が適切な粒度か
            - 冗長な書き方のコードがないか
            - 複雑な条件式が作られていないか
            - 明らかなセキュリティの問題があるか
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096",a743a1ede6fdf37d0844286ff384971467502060,2024-12-24 08:08:59,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - ""**.cs""

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            あなたはシニアエンジニアです。回答は日本語でお願いします。
            誰にとっても読みやすいコードになるよう、改善点を見つけたら積極的にレビューしてください。
            指摘時には変更する理由を説明した上で、変更後のコード例を示してください。
            特に以下の点を指摘してください:
            - 誤解を招いたり、実態を正確に表していない命名があるか
            - 適切な粒度で変数が定義されているか
            - メソッド・関数の区分が適切な粒度か
            - 冗長な書き方のコードがないか
            - 複雑な条件式が作られていないか
            - 明らかなセキュリティの問題があるか
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096",0,0
leifeng/codeTest,.github/workflows/cr.yml,e7a7a938fcb27739f0cc79d29eb6da629165fb4d,2024-09-05 08:42:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:",e7a7a938fcb27739f0cc79d29eb6da629165fb4d,2024-09-05 08:42:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Chinese
          PROMPT:",0,0
tothambrus11/2048,.github/workflows/cr.yml,3caa08921c4eff55e1b8f97df4e1ef84f9d24146,2024-01-17 12:34:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",3caa08921c4eff55e1b8f97df4e1ef84f9d24146,2024-01-17 12:34:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
bingryan/WeChatAI,.github/workflows/cr.yml,8f96527bf06e7b48e4163bf0b8cb6c2d66792b3e,2023-04-26 07:37:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",8f96527bf06e7b48e4163bf0b8cb6c2d66792b3e,2023-04-26 07:37:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,0
leezer94/ui,.github/workflows/cr.yml,704a83de394c6d1c1186f377bcb33b00aa050583,2023-07-05 08:30:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
",704a83de394c6d1c1186f377bcb33b00aa050583,2023-07-05 08:30:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
",0,0
NextIntern/NextIntern-Backend,.github/workflows/cr.yml,199c3dd2bf40c8f9d8b92a64ca9bf5a956fc0411,2024-06-09 09:33:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",bf27bd896f5d032cedb077c94c3e746483d9f868,2024-06-09 09:35:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
JadeKim042386/My3D,.github/workflows/cr.yml,cfc9b2ff817b0bdcc847441f352a647b9840c10a,2024-01-15 10:22:36,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",6209ee6e176c09f4c31bb7a31037ed4db7755c94,2024-01-15 12:13:55,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff""
          temperature: 0.2 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
YasushiKobayashi/samples,.github/workflows/cr.yml,c9acaa0c0e54aeff6eb03b6660febf775ba8666d,2023-06-04 08:59:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: github.event.issue.pull_request != '' && startsWith(github.event.comment.body, '/review_gpt')
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          MODEL:
          top_p: 1
          temperature: 1
",c7d27dd97822643e12e6512c913c72471136a6b3,2024-03-01 07:50:26,"name: Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          MODEL:
          top_p: 1
          temperature: 1
",270,9
Oyeon/ChatGPT-application-python,.github/workflows/code_review.yml,5dd2f5a5bedc55f221bf3fd6cde4098a3a4c7547,2024-07-20 02:03:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: You are a code reviewer. Please check if there are any confusions or irregularities in the following code diff: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",adaf9e72dbef48efbdae060b18caa946241d8336,2024-07-20 02:11:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""You are a code reviewer. Please check if there are any confusions or irregularities in the following code diff: # example: Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,1
DavidLe-earnin/hello-world,.github/workflows/code-review.yml,17d13a77e5653148ae12d015804e98b16af45641,2023-12-27 00:46:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: check please
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",17d13a77e5653148ae12d015804e98b16af45641,2023-12-27 00:46:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: check please
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",0,0
fazlay/cis-scraping,.github/workflows/cr.yml,2ff50a138fe7a57489c74b5705b6abde3ebd9819,2024-10-31 07:03:40,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",2ff50a138fe7a57489c74b5705b6abde3ebd9819,2024-10-31 07:03:40,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",0,0
GFigting/analysis,.github/workflows/cr.yml,662df5e4d1ae8333d225f2df4f0891d3c6540130,2024-07-16 08:12:05,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
",75dca1187ded4b41f25c64f401792d2c8b5b30a3,2024-07-16 08:26:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,2
amit-kumar56/TechieBuggie,.github/workflows/cr.yml,bde4045ad419c3ae82fc6daa0ec6b09f62d8f6bd,2023-07-29 10:17:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: <https://api.openai.com/v1>
          MODEL:
          top_p: 1
          temperature: 1
",5b236b839a79734ca87f75adbc12de1e3aad8667,2023-10-15 13:03:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: <https://api.openai.com/v1>
          MODEL:
          top_p: 1
          temperature: 1
",78,2
corazzon/python-text-analysis,.github/workflows/cr.yml,22265662c7ac7d2c85b65576a402ddad5d8c58e2,2024-01-04 13:39:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:
",22265662c7ac7d2c85b65576a402ddad5d8c58e2,2024-01-04 13:39:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:
",0,0
youngsu5582/RooTrip-Clone,.github/workflows/cr.yml,0c206fddcc82882385b069b13f109afb72037371,2023-04-01 04:54:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0c206fddcc82882385b069b13f109afb72037371,2023-04-01 04:54:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
disuns/WeatherOpenApiPJ,.github/workflows/cr.yml,c61ec289ec79c598a8a112b3250bf0287105ff81,2023-05-25 07:04:06,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",c61ec289ec79c598a8a112b3250bf0287105ff81,2023-05-25 07:04:06,"# This is a basic workflow to help you get started with Actions

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
sunjin110/folio,.github/workflows/cr.yml,881d9b09f3a63b46c577a17aefffae0f169e9e12,2024-07-28 05:34:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",989fbc74bfb74529fb916838b10de51340d62bc8,2024-08-04 02:57:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          # LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",6,2
humonnom/simple-market,.github/workflows/cr.yml,efd9214f2bed77955f1fc899c6c77a155a571aed,2024-04-02 04:45:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT: gpt-4
",efd9214f2bed77955f1fc899c6c77a155a571aed,2024-04-02 04:45:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT: gpt-4
",0,0
lkcozy/web-scraper,.github/workflows/codeReview.yml,0149246da7c99f518a5d52673e5928fc53385789,2023-03-10 06:03:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",f808f27ed45857e8fe1be4e303007d5976eb8f6e,2023-08-15 06:07:37,"name: 🔍 Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          MODEL: gpt-4.0 # https://platform.openai.com/docs/models
          PROMPT: Please review the code diff below for any confusion or irregularities. Refer to the Google Code Review Developer Guide for guidance.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          # controls the randomness of the generated text, with higher values producing more diverse outputs and lower values leading to more deterministic responses.
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
",158,5
takata-kento/InfraPicToTxt,.github/workflows/cr.yml,ac0891de281149c6828debda7b3478ea6fa5380d,2024-07-18 11:40:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",15436ba0c0bec5423ebd0063272b6ce432bb4cf4,2024-07-18 12:42:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,2
iCherya/sportik,.github/workflows/cr.yml,05190680b9c62960bc2873789851ecbc2de74782,2024-07-13 14:09:43,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: Please check the pull request and provide any suggestions to improve the code.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0ea3624c38342ee73cf2ed740d73bceec39698f6,2025-01-12 14:57:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: Please check the pull request and provide any suggestions to improve the code.
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",183,2
oyeon-kwon/tailwind-responsive-web,.github/workflows/cr.yml,1b5ea40544780b2a5121af68e7eab904cbd9e490,2024-08-05 06:03:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGUAGE: Korean
      MODEL: gpt-3.5-turbo
",1b5ea40544780b2a5121af68e7eab904cbd9e490,2024-08-05 06:03:55,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGUAGE: Korean
      MODEL: gpt-3.5-turbo
",0,0
tinajeong/BulletinBoard,.github/workflows/cr.yml,b28bd72ec28ad72952c1ca53e3978fd08db1bd14,2023-05-06 11:28:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",b28bd72ec28ad72952c1ca53e3978fd08db1bd14,2023-05-06 11:28:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
",0,0
ghostnetic/adblock-filter-compiler,.github/workflows/cr.yml,1f079541671e5d2b06907c95247707d54a539820,2023-04-20 02:12:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",1f079541671e5d2b06907c95247707d54a539820,2023-04-20 02:12:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
suneunkim/next-honey-place,.github/workflows/cr.yml,b9310b7199b66ce8115ee73408cbd3a1b72aa420,2024-07-02 17:23:05,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
          REQUEST: >
            다음 Pull Request에 대한 코드를 간결하고 핵심적으로 리뷰해 주세요. 아래의 세부 사항에 따라 검토해 주세요:
            1. 추가된 기능 요약
            2. 리뷰 포인트:
              - 리팩토링 제안
            리뷰를 간결하게 작성해 주세요. 불필요한 설명을 피하고 핵심적인 부분만 언급해 주세요.
          FILE_PATTERNS: 'src/**/*.tsx'
",a4742ea5b60185059d17f799708b448a7b459624,2024-07-03 02:05:25,"name: Code Review From ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
          max_tokens: 1000
",0,4
reeschan/learn-track-app,.github/workflows/cr.yml,1765475d26e51d6f07d15cc772fb0e2cb9452334,2024-11-15 07:18:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: "".*\\.wav$|.*\\.unity$|.*\\.asset$|.*\\.meta$"" # Regex pattern to ignore files, separated by comma
",1765475d26e51d6f07d15cc772fb0e2cb9452334,2024-11-15 07:18:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: "".*\\.wav$|.*\\.unity$|.*\\.asset$|.*\\.meta$"" # Regex pattern to ignore files, separated by comma
",0,0
Matthias-Zax/selenium4-demo,.github/workflows/cr.yml,4e8bf00ff2c6741a248517c5d07d72ca38009a22,2023-09-07 10:20:00,"name: Code Review from chatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.WZHMAZA_CHATGPT_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4e8bf00ff2c6741a248517c5d07d72ca38009a22,2023-09-07 10:20:00,"name: Code Review from chatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.WZHMAZA_CHATGPT_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
KUDDY-2023/KUDDY-back,.github/workflows/cr.yml,6aa146845766ada84fa7d01aadee96de11ede970,2023-10-07 05:23:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize] #Pull Request가 열리거나, 재개되거나, 동기화될 때마다 실행

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean #코드 리뷰 언어 선택
",0a20e706980e489db61806859b4953e505288740,2023-10-07 06:41:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize] #Pull Request가 열리거나, 재개되거나, 동기화될 때마다 실행

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean #코드 리뷰 언어 선택
",0,2
wpcfan/lowcode,.github/workflows/cr.yml,071df7ab8f9bf32b961f70baeb7ab4258b4d9c58,2023-03-22 03:36:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",071df7ab8f9bf32b961f70baeb7ab4258b4d9c58,2023-03-22 03:36:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
ConceptCodes/zoomies-api-ts,.github/workflows/code-review.yml,900e70c0cf1b9a7559417fdfd90e47b9a2008975,2023-09-03 17:17:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",900e70c0cf1b9a7559417fdfd90e47b9a2008975,2023-09-03 17:17:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
yongjulejule/rlt,.github/workflows/cr.yml,e565ffd1e4ad8332e6891171668d968dfa5be17b,2023-09-20 11:39:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, '지피티야 내 코드를 평가해보거라') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          #LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",e565ffd1e4ad8332e6891171668d968dfa5be17b,2023-09-20 11:39:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, '지피티야 내 코드를 평가해보거라') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          #LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
LeeByeongMuk/starter-kit-api,.github/workflows/review.yml,a7cf2bef3f090977e6333d5ada056ff257cc3c1b,2025-01-04 13:59:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  review:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-4o  # https://platform.openai.com/docs/models
          PROMPT: ""변경전 소스에 대한 한줄 요약을 '## AS-IS', 변경후 소스에 대한 한줄 요약을 '## TO-BE' 라는 제목으로 요약해줘. 개선할 부분이 있다면 '## 개선' 이라는 제목으로 제안해줘. 예상되는 에러가 있다면 '## 주의' 라는 제목으로 알려줘.""
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",a7cf2bef3f090977e6333d5ada056ff257cc3c1b,2025-01-04 13:59:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  review:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }}
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          MODEL: gpt-4o  # https://platform.openai.com/docs/models
          PROMPT: ""변경전 소스에 대한 한줄 요약을 '## AS-IS', 변경후 소스에 대한 한줄 요약을 '## TO-BE' 라는 제목으로 요약해줘. 개선할 부분이 있다면 '## 개선' 이라는 제목으로 제안해줘. 예상되는 에러가 있다면 '## 주의' 라는 제목으로 알려줘.""
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096
",0,0
trapzpro/enterprise-d,.github/workflows/cr.yml,fbde8382d096b3bf930788e8a7fc64ae8f71afbc,2023-06-16 19:16:12,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",fbde8382d096b3bf930788e8a7fc64ae8f71afbc,2023-06-16 19:16:12,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
dm0114/block,.github/workflows/cr.yml,3052e691aa010658d810c901ccd07b49a28b989d,2023-12-24 05:20:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",3052e691aa010658d810c901ccd07b49a28b989d,2023-12-24 05:20:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",0,0
ConceptCodes/newsletter_node,.github/workflows/code-review.yml,caee0f86c59b19b28f9ea698550952191c340a66,2023-12-31 05:15:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",caee0f86c59b19b28f9ea698550952191c340a66,2023-12-31 05:15:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4 # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
Team-BomBomBom/Web-Client,.github/workflows/cr.yml,83fa395fccedb7aa891e21d87b12ad6c54d9d77b,2024-07-26 05:20:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",15a3343df0177ae1c1084173273546ebbf833ea2,2024-09-24 12:36:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",60,2
guolixin1121/fed-e-task-02-01,.github/workflows/cr.yml,d27bcc9feb01cc08b1eb78faa0320ef8b3f2b30a,2024-11-25 07:15:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",d27bcc9feb01cc08b1eb78faa0320ef8b3f2b30a,2024-11-25 07:15:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,0
Falcon-Innovations/innovations-web,.github/workflows/cr.yml,c394fc81bbe83ec1dca2db7122080946d15cf148,2023-06-07 12:24:48,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",c394fc81bbe83ec1dca2db7122080946d15cf148,2023-06-07 12:24:48,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
VictorMarques98/web-template,.github/workflows/cr.yml,e2a38d77011d561c0b4611389104d901f9dad01b,2024-01-07 10:10:06,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",e2a38d77011d561c0b4611389104d901f9dad01b,2024-01-07 10:10:06,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
kriipke/charts,.github/workflows/cr.yml,4ae3970be47829409aff2622d254eaede930e11f,2024-06-02 03:15:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",4ae3970be47829409aff2622d254eaede930e11f,2024-06-02 03:15:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
AlexArista/project2_webpage,.github/workflows/cr.yml,54452fdc3d97af8e9c2f94bc36153ffb0e2277e1,2023-06-20 02:30:27,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",54452fdc3d97af8e9c2f94bc36153ffb0e2277e1,2023-06-20 02:30:27,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",0,0
shtuder/form-pdf-mail,.github/workflows/cr.yml,98914a63bd46dbf1742619337edc1937962b6ef6,2023-10-16 08:23:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",98914a63bd46dbf1742619337edc1937962b6ef6,2023-10-16 08:23:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
JisuNa/eqcm,.github/workflows/cr.yml,53d86b65166ad4d33956a65e27f078b0afc53931,2024-09-27 00:52:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:
",53d86b65166ad4d33956a65e27f078b0afc53931,2024-09-27 00:52:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:
",0,0
THE-FIRST-DANCE/soomga-backend,.github/workflows/code-review.yml,ac6bc306a9356916b662afebb080deeb0d28e6c6,2024-02-20 14:05:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: KOREAN
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1ae4bca2ebe56a8c7655273f885f339639141ca5,2024-02-21 05:49:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: KOREAN
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          max_tokens: 4096
",0,1
badhon252/portfolio-v3,.github/workflows/cr.yml,b48bb15398dcb56827892c93bffcb273a3439a55,2024-09-02 11:06:22,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""
",a2439e279b4d94413c24c6f4db2f28106c363f36,2024-09-04 09:26:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1,1
Rakdol/mlops-pm,.github/workflows/cr.yml,5e1a47341c2b1c960ed6c24249c0277316eb7549,2024-07-25 02:31:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",5e1a47341c2b1c960ed6c24249c0277316eb7549,2024-07-25 02:31:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-3.5-turbo
",0,0
ApenasGabs/BinarySearchTree,.github/workflows/cr.yml,e1b7e3777cb547f28e2f257ba0fccd0e46984b34,2023-11-24 06:09:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",e1b7e3777cb547f28e2f257ba0fccd0e46984b34,2023-11-24 06:09:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
youngsu5582/RooTrip-Backend,.github/workflows/cr.yml,aca0e06ed245875c0d9a58d1ddfd78964d0e0dea,2023-03-17 05:47:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",aca0e06ed245875c0d9a58d1ddfd78964d0e0dea,2023-03-17 05:47:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
qq549914546/adblock_list,.github/workflows/cr.yml,1f079541671e5d2b06907c95247707d54a539820,2023-04-20 02:12:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",1f079541671e5d2b06907c95247707d54a539820,2023-04-20 02:12:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
sonqh/netlfix-clone-frontend,.github/workflows/code-review.yml,36688fe193fc2ab53f52984e9e5a358082667f92,2025-01-26 06:05:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English # https://platform.openai.com/docs/api-reference/chat/create#chat/create-language
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: '*.js,*.ts' # glob pattern or regex pattern to include files, separated by comma

",36688fe193fc2ab53f52984e9e5a358082667f92,2025-01-26 06:05:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        name: Code Review usint OpenAI GPT-3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English # https://platform.openai.com/docs/api-reference/chat/create#chat/create-language
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules/**/*,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: '*.js,*.ts' # glob pattern or regex pattern to include files, separated by comma

",0,0
SantiagoTangarife/check-in,.github/workflows/cr.yml,9028cefd71c7a03f7d8725ae3d0718915e20485d,2024-04-14 17:10:22,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",9028cefd71c7a03f7d8725ae3d0718915e20485d,2024-04-14 17:10:22,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ""${{ secrets.GITHUB_TOKEN }}""
          OPENAI_API_KEY: ""${{ secrets.OPENAI_API_KEY }}""",0,0
mimo-x/debug,.github/workflows/cr.yml,2b4a905ba03e1beb05f7ecf2dadb29e750028b1f,2023-09-11 05:50:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",2b4a905ba03e1beb05f7ecf2dadb29e750028b1f,2023-09-11 05:50:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
guesung/-Alda,.github/workflows/cr.yml,aca893aa3db06e78d1efdd5f622a9f76c43def37,2023-05-27 08:36:56,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",60209ee5a0cd7c369bfc25e01d522f0ed631854f,2024-07-05 05:49:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",404,2
yourbunnyvrote/ewos-to-go-hw,.github/workflows/cr.yml,638efd607f0f09bc40c4f140c7a02a99aa9b593a,2023-12-23 04:52:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",638efd607f0f09bc40c4f140c7a02a99aa9b593a,2023-12-23 04:52:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
JokerRd/auto_review,.github/workflows/python-app.yml,e35636a94aa7fe9085f4c40d00878df5c635cf6d,2024-05-25 17:28:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          MODEL: gpt-4o
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai
          PROMPT: ""You are an experienced Python developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""",d02ec9b9dbd330eda28db440f03bc4e923f8f36c,2024-05-25 17:28:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Russian
          MODEL: gpt-4o
          OPENAI_API_ENDPOINT: https://api.proxyapi.ru/openai/v1
          PROMPT: ""You are an experienced Python developer and your job is to review pull requests. Please review the following code for any misunderstandings or violations. Don't spend time commenting on what is already working perfectly. I'm looking for constructive criticism and suggestions for improving the code, only useful and thorough notes.""",0,2
jieseob1/insurance_server,.github/workflows/cr.yml,ebd81379470c1f97ccd54f3cf3cef7278daac2f8,2024-10-29 08:37:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",ebd81379470c1f97ccd54f3cf3cef7278daac2f8,2024-10-29 08:37:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
no-pla/connect-four,.github/workflows/cr.yml,beb39d57efdc29b53ddd141d7e5420b87d4f5309,2024-06-03 04:56:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
          PROMPT:
",1c7447205068388f695167101e4cf0a6d91c51dd,2024-06-03 08:17:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",0,1
le2sky/mealkitary-server,.github/workflows/mealkitary-code-review-automation.yml,4f0b447e4f122a8d8f9dc6911694635d3295b403,2023-08-21 14:41:34,"name: Mealkitary Code Review Automation

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [ opened, reopened, synchronize ]

jobs:
    gpt-code-review:
        if: ${{ contains(github.event.*.labels.*.name, format('run{0} gpt code review', ':')) }}
        runs-on: ubuntu-latest
        steps:
            -   uses: anc95/ChatGPT-CodeReview@main
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                    LANGUAGE: Korean
                    OPENAI_API_ENDPOINT: https://api.openai.com/v1
                    MODEL: gpt-3.5-turbo
                    top_p: 1
                    temperature: 1
",4f0b447e4f122a8d8f9dc6911694635d3295b403,2023-08-21 14:41:34,"name: Mealkitary Code Review Automation

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [ opened, reopened, synchronize ]

jobs:
    gpt-code-review:
        if: ${{ contains(github.event.*.labels.*.name, format('run{0} gpt code review', ':')) }}
        runs-on: ubuntu-latest
        steps:
            -   uses: anc95/ChatGPT-CodeReview@main
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                    LANGUAGE: Korean
                    OPENAI_API_ENDPOINT: https://api.openai.com/v1
                    MODEL: gpt-3.5-turbo
                    top_p: 1
                    temperature: 1
",0,0
BadVibessz/ewos-go-course,.github/workflows/cr.yml,35cc64ce056fc0b4dd645328d48a75da31ff5dad,2024-01-27 14:30:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",35cc64ce056fc0b4dd645328d48a75da31ff5dad,2024-01-27 14:30:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
brandonxiang/protobuf-to-typescript,.github/workflows/cr.yml,f781c7449b90016e9ec1d7304c912af5e3ffd2da,2024-09-23 08:18:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",f781c7449b90016e9ec1d7304c912af5e3ffd2da,2024-09-23 08:18:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
ew0s/ewos-to-go-hw,.github/workflows/cr.yml,638efd607f0f09bc40c4f140c7a02a99aa9b593a,2023-12-23 04:52:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",638efd607f0f09bc40c4f140c7a02a99aa9b593a,2023-12-23 04:52:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
no-pla/petpital-v2,.github/workflows/cr.yml,f62799c3f8401a8b9b4a373e5d8f7740f789b7ed,2024-08-22 08:07:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",f62799c3f8401a8b9b4a373e5d8f7740f789b7ed,2024-08-22 08:07:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",0,0
jieseob1/Enhnaced_Inventory_Server,.github/workflows/cr.yml,721a581f0e160216f25d15092ffc30ed8c8ad6ae,2023-05-21 11:05:01,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English",8fd1209f85b0b635e19cef089b8886b806930674,2024-08-11 02:00:34,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",447,2
ienrum/zustand-query,.github/workflows/cr.yaml,d999c850f3cb9d3f5879e100de2048164ff079f4,2024-04-16 02:56:41,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODELE: gpt-4
",b312f44fbf586a15a9864b402262d4beba64866f,2024-04-16 03:30:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          MODEL: gpt-4
",0,2
no-pla/hang-man-game,.github/workflows/cr.yml,ba65440ab17b61cc65c42e25e05e1033a83ff6e5,2024-03-15 16:27:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",ba65440ab17b61cc65c42e25e05e1033a83ff6e5,2024-03-15 16:27:48,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # optional
          LANGUAGE: Korean
",0,0
hirokazu-kobayashi-koba-hiro/idp-server,.github/workflows/review.yaml,b9eeb7529d70bf5d14408c7db8e777a7ca8cc197,2024-12-01 06:09:57,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
",b9eeb7529d70bf5d14408c7db8e777a7ca8cc197,2024-12-01 06:09:57,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
",0,0
ant-design/ant-design-mini,.github/workflows/chatgpt_code_review.yaml,15de2403309cbe0f949fc640d15084a94ac79450,2023-03-23 12:11:52,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",15de2403309cbe0f949fc640d15084a94ac79450,2023-03-23 12:11:52,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
alainQtec/PsCraft,.github/workflows/Codereview.yaml,aaaa500cc486bab873875ae51f8a816c157f81d8,2024-10-15 09:52:25,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.
",aaaa500cc486bab873875ae51f8a816c157f81d8,2024-10-15 09:52:25,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.
",0,0
av5ja/av5ja_stats_api,.github/workflows/review.yaml,28f18f60e94322f9d498c39713347f4e0b67538e,2024-04-12 06:05:50,"name: Code Review by ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - '**'
      - '!master'
    types: [opened, reopened, synchronize]

jobs:
  version:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Code Review
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-0125
          top_p: 1
          temperature: 1
",28f18f60e94322f9d498c39713347f4e0b67538e,2024-04-12 06:05:50,"name: Code Review by ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - '**'
      - '!master'
    types: [opened, reopened, synchronize]

jobs:
  version:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Code Review
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo-0125
          top_p: 1
          temperature: 1
",0,0
Itsuki54/kizino_niwa,.github/workflows/ai-review.yaml,48d6262020aac00c07ba2e908b42ae28be7b0cc5,2024-12-17 00:26:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese ← 　！！！言語設定！！！
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: ""Please review the following code and provide feedback on how it can be improved."" # https://platform.openai.com/docs/api-reference/chat/create#chat/create-prompt
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",42887b1b01d3a19ddab0e67858825738ae3e2deb,2024-12-26 15:46:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ github.actor == 'Itsuki54' }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          PROMPT: 'Analyze the following code for performance improvements and best practices.'
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 1000
",9,5
UM-Applied-Algorithms-Lab/AWRY,.github/workflows/chatgpt_code_review.yaml,e647598583e7a4033702a20f7592d6b29f836f4a,2024-12-04 22:11:14,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff, and be snarky about it:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: .5s # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: *.js,*.ts # glob pattern or regex pattern to include files, separated by comma",c81b0651dab8d09eb1f9d438ebed4e014b032f55,2024-12-06 19:12:20,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  automatic-gpt-code-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for accurate diffs

      - name: Debug File Changes
        run: git diff --name-only ${{ github.event.before }} ${{ github.sha }}

      - uses: anc95/ChatGPT-CodeReview@v1.0.19
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please check if there are any confusions or irregularities in the following code diff:""
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 0.7 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 5000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: '*.md' # glob pattern or regex pattern to ignore files, separated by comma
          INCLUDE_PATTERNS: '**/*.rs,**/*.yaml,**/*.yml,**/*.toml,**/*.json,**/*.xml' # glob pattern or regex pattern to include files, separated by comma",1,16
jieseob1/Enhanced_Inventory_Client,.github/workflows/cr.yml,ac331d58e3d4fe6e13e33e7b26e93f340cf3a7d3,2023-05-22 14:40:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened,synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English",837d86d7159de019ded37200f8a6c207263cef6b,2024-08-10 11:03:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",445,3
seipan/nikki,.github/workflows/chatgpt-review.yaml,ae0f047172ed2eff6451547ccc34b6854f96ed5b,2023-11-28 08:22:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          top_p: 1
          temperature: 1",0d75c65f9d4b8d249ae3ec643d6c2a2cf9845c93,2023-11-28 08:29:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          top_p: 1
          temperature: 1
          ",0,2
Zerocan/algorithm,.github/workflows/cr.yml,bf39d80c4a41dddd133a1767faf84130b5753fc9,2023-03-23 02:41:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",bf39d80c4a41dddd133a1767faf84130b5753fc9,2023-03-23 02:41:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",0,0
reeschan/kuromichan-discord-bot,.github/workflows/cr.yml,28d3d87940e6ba4929bb266bf1bbf9d640ea18e9,2024-10-31 12:28:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: "".*\\.wav$|.*\\.unity$|.*\\.asset$|.*\\.meta$"" # Regex pattern to ignore files, separated by comma
",28d3d87940e6ba4929bb266bf1bbf9d640ea18e9,2024-10-31 12:28:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini # https://platform.openai.com/docs/models
          PROMPT: 'Please check if there are any confusions or irregularities in the following code diff:'
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: "".*\\.wav$|.*\\.unity$|.*\\.asset$|.*\\.meta$"" # Regex pattern to ignore files, separated by comma
",0,0
dokimiki/manabo-next-front,.github/workflows/aicodereview.yaml,d441f8924179ecc499098295ef326eeff16c202f,2024-07-18 11:46:58,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",d2dde48986becac1073f1aa2abfec271cbcc983d,2024-07-18 22:38:09,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o-mini
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,2
mathrunet/flutter_masamune,.github/workflows/review.yaml,34c6bb1ede2ef4de1ff8781d95d07bc1896a8f7e,2024-08-07 06:51:28,"# Code review of Flutter and TypeScript files.
#
# FlutterおよびTypeScriptのファイルのコードレビューをします。
name: CodeReview

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - ""**.dart""
      - ""**.ts""

jobs:
  gpt_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4-turbo
          PROMPT: |
            あなたはベテランエンジニアです。回答は日本語でお願いします。
            渡されたコードについて改善点を見つけ、変更する理由を説明した上で、変更後のコード例を示してください。
            改善点がない場合には絶対にコメントをしないでください。
            対象とするファイルは `**.dart` と `**.ts` ファイルです。
            ただし`**.g.dart`、`**.freezed.dart`、`**.m.dart`、`**.page.dart`、`**.localize.dart`、`**.theme.dart`は自動生成されたコードなため対象外です。絶対にコメントしないでください。
            それ以外のファイルにも絶対にコメントしないでください。

            特に以下の点を指摘してください:
              - 誤解を招いたり、実態を正確に表していない命名があるか
              - 適度に変数を定義し自己ドキュメントされているか
              - 冗長な書き方のコードがないか
              - N+1問題（N+1 query problem）を引き起こす箇所
              - 読んで理解が難しい箇所にコメントが適切にされているか
              - コメントの内容は日本語として読んでわかりやすく、簡潔に説明できているか
              - 理解の難しい複雑な条件式が作られていないか
              - テスト内の説明文は、テストの内容をわかりやすく適切に表しているか
              - 明らかなセキュリティの問題があるか

            誰にとっても読みやすいコードになるよう、改善点を見つけたら積極的にレビューしてください。
            あなたに渡されるコードは一部分であるため、未定義のメソッドやクラスなどの指摘については消極的にしてください。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096",b74110eca2af7cbda4055ee8e5af710f0cad22d1,2024-08-07 08:03:30,"# Code review of Flutter and TypeScript files.
#
# FlutterおよびTypeScriptのファイルのコードレビューをします。
name: CodeReview

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - ""**.dart""
      - ""**.ts""

jobs:
  gpt_review:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o
          PROMPT: |
            あなたはベテランエンジニアです。回答は日本語でお願いします。
            渡されたコードについて改善点を見つけ、変更する理由を説明した上で、変更後のコード例を示してください。
            改善点がない場合には絶対にコメントをしないでください。
            対象とするファイルは `**.dart` と `**.ts` ファイルです。
            ただし`**.g.dart`、`**.freezed.dart`、`**.m.dart`、`**.page.dart`、`**.localize.dart`、`**.theme.dart`は自動生成されたコードなため対象外です。絶対にコメントしないでください。
            それ以外のファイルにも絶対にコメントしないでください。

            特に以下の点を指摘してください:
              - 誤解を招いたり、実態を正確に表していない命名があるか
              - 適度に変数を定義し自己ドキュメントされているか
              - 冗長な書き方のコードがないか
              - N+1問題（N+1 query problem）を引き起こす箇所
              - 読んで理解が難しい箇所にコメントが適切にされているか
              - コメントの内容は日本語として読んでわかりやすく、簡潔に説明できているか
              - 理解の難しい複雑な条件式が作られていないか
              - テスト内の説明文は、テストの内容をわかりやすく適切に表しているか
              - 明らかなセキュリティの問題があるか

            誰にとっても読みやすいコードになるよう、改善点を見つけたら積極的にレビューしてください。
            あなたに渡されるコードは一部分であるため、未定義のメソッドやクラスなどの指摘については消極的にしてください。
          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 4096",0,1
LeoAC0/hello-world-typescript_actions,.github/workflows/disable/cr.yaml,511caf88edd89c126abb156f9d7902de36cd8a05,2024-02-02 19:49:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Spanish
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",511caf88edd89c126abb156f9d7902de36cd8a05,2024-02-02 19:49:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Spanish
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.",0,0
gusah009/usingGithubFeatures,.github/workflows/cr.yaml,8ef029397c5d2b1139c04835e81add9103ef1407,2023-04-15 02:17:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",8ef029397c5d2b1139c04835e81add9103ef1407,2023-04-15 02:17:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
Precise-Finance/nestjs-k8s-leader-election,.github/workflows/pr.yaml,4a061e2d02ba01f3e7d2949f147020f082e93aed,2023-11-06 12:49:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  chatgpt_review:
    if: ${{ !contains(github.event.*.labels.*.name, 'no gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # PROMPT: Please check if there are any confusions, irregularities, security issues or performance issues in the following code diff:
          # top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          # temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          # max_tokens: 10000
          # MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
  gpt_review_node:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt summary') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - name: gpt-review-node
        uses: Precise-Finance/gpt-review@v1.1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ORG_KEY: ${{ secrets.OPENAI_ORG_KEY }}
",6426b659e501769952f2e4652d745c198bf28048,2023-11-09 20:31:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  chatgpt_review:
    if: ${{ !contains(github.event.*.labels.*.name, 'no gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          PROMPT: ""Please provide a code review for the patch below. Start with a short summary of the original code's functionality and the objective of the recent changes. Then, identify any issues with the code such as bugs, security risks, or areas for improvement in logic, structure, or performance. Your feedback should be concise and actionable.""
          # OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # PROMPT: Please check if there are any confusions, irregularities, security issues or performance issues in the following code diff:
          # top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          # temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          # max_tokens: 10000
          # MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
  gpt_review_node:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt summary') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - name: gpt-review-node
        uses: Precise-Finance/gpt-review@v1.2
        with:
          GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ORG_KEY: ${{ secrets.OPENAI_ORG_KEY }}
",3,1
Wybxc/chocho,.github/workflows/cr-bot.yaml,c325e5e479e4e638375a9de5dc8fd9eda6f3528c,2023-04-20 06:48:58,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",c325e5e479e4e638375a9de5dc8fd9eda6f3528c,2023-04-20 06:48:58,"name: ChatGPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Chinese
",0,0
ixxeL-DevOps/helm-charts,.github/workflows/pr-review-openai.yaml,1be7149ffbf065cf22303a5b02deaa40022bdcdc,2023-12-07 22:46:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: French
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",1be7149ffbf065cf22303a5b02deaa40022bdcdc,2023-12-07 22:46:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: French
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
takemo101/cms-tool,.github/workflows/code-review-pr.yaml,faea320758cc5e8de29bebb70c7d1e28d11bd21a,2024-06-26 14:25:41,"name: ChatGPT CodeReview

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]
        branches:
            - feat/**
            - fix/**

jobs:
    chatgpt-review:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: ChatGPT CodeReview
              uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Japanese
                  MODEL: gpt-3.5-turbo
                  PROMPT: |
                      あなたはGitHubのプルリクエストをレビューする日本人の上級開発者です。
                      以下の点に注意してレビューを行い、日本語でコメントしてください：
                      1. コードの品質と可読性
                      2. バグやエラーの可能性
                      3. パフォーマンスの問題
                      4. セキュリティの懸念事項
                      5. ベストプラクティスの適用
                      6. ドキュメンテーションの必要性
                      レビューは簡潔かつ具体的に、そして建設的な方法で行ってください。
",49181b3a09958f5a74dbc0ac14f7392ba2b14198,2024-07-09 07:46:53,"name: ChatGPT CodeReview

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
        types: [opened, synchronize]
        branches:
            - develop

jobs:
    chatgpt-review:
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: ChatGPT CodeReview
              uses: anc95/ChatGPT-CodeReview@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  LANGUAGE: Japanese
                  MODEL: gpt-3.5-turbo
                  PROMPT: |
                      あなたはGitHubのプルリクエストをレビューする日本人の上級開発者です。
                      ソースコードの問題点があれば、日本語でコメントしてください。
",12,4
AlexMikhalochkin/jarvis,.github/workflows/pr-chat-gpt-code-review.yaml,f96d989802fad1378d402f35032431c4202fee5b,2024-09-09 19:01:41,"name: ChatGpt Code Review
permissions:
  contents: read
  issues: write
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  review-code:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 2000
          MAX_PATCH_LENGTH: 10000
",f96d989802fad1378d402f35032431c4202fee5b,2024-09-09 19:01:41,"name: ChatGpt Code Review
permissions:
  contents: read
  issues: write
  pull-requests: write
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  review-code:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 2000
          MAX_PATCH_LENGTH: 10000
",0,0
alainQtec/JsonCli,.github/workflows/Codereview.yaml,75ad557e5cabea569dde130785f63b10c4ca7710,2024-12-05 18:58:32,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",75ad557e5cabea569dde130785f63b10c4ca7710,2024-12-05 18:58:32,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
jakoss/AndroidArchitectureTemplate,.github/workflows/cr.yaml,98c32ecfd7feb7248e85bd4bbfbc0ee52f3cd9a5,2023-04-25 07:07:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English",98c32ecfd7feb7248e85bd4bbfbc0ee52f3cd9a5,2023-04-25 07:07:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English",0,0
Certseeds/openpgpage,.github/workflows/pr.yaml,184c672a379807c1cd411c92eb5b0cc50edc3600,2023-03-03 12:38:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, submitted, edited, synchronize]

jobs:
  test:
    if: github.repository == 'Certseeds/openpgpage'
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.CHATGPT_SESSION_TOKEN }}
",80f2488d699e79607008eca98b05f3651184a33c,2023-03-26 10:48:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, submitted, edited, synchronize]

jobs:
  test:
    if: github.repository == 'Certseeds/openpgpage'
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false

      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.CHATGPT_SESSION_TOKEN }}




",22,3
opentiny/tiny-vue,.github/workflows/gpt-ci.yaml,a278aec6ac005459e6a693eb9fcaff43a2f66c48,2024-02-27 02:12:34,"name: GPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  Review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
          LANGUAGE: Chinese
          PROMPT: ${{ secrets.PROMPT }}
          max_tokens: ${{ secrets.MAX_TOKEN }}
          top_p: 1
          temperature: 1
          MAX_PATCH_LENGTH: ${{ secrets.MAX_PATH_LENGTH }} # 当修改行数超过设定值后, 则不会请求gpt进行code review
          MODEL: ${{ secrets.MODEL }} # https://platform.openai.com/docs/models",a278aec6ac005459e6a693eb9fcaff43a2f66c48,2024-02-27 02:12:34,"name: GPT Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  Review:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt-review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
          LANGUAGE: Chinese
          PROMPT: ${{ secrets.PROMPT }}
          max_tokens: ${{ secrets.MAX_TOKEN }}
          top_p: 1
          temperature: 1
          MAX_PATCH_LENGTH: ${{ secrets.MAX_PATH_LENGTH }} # 当修改行数超过设定值后, 则不会请求gpt进行code review
          MODEL: ${{ secrets.MODEL }} # https://platform.openai.com/docs/models",0,0
kubebb/core,.github/workflows/gpt-review.yaml,a3e8e095cbbdf58acd83a11a5280f95b7b939175,2023-06-26 06:15:43,"name: GPT Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    name: GPT Review
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          # MODEL: gpt-4
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          # top_p: 1
          # temperature: 1
",a8b0f41d4ab70415aed4f827f930f3c4c93bda62,2023-07-06 02:47:21,"name: GPT Review

permissions: write-all

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    name: GPT Review
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          # MODEL: gpt-4
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is larger than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          # top_p: 1
          # temperature: 1
",9,2
daniel-juyeon-kim/quicker-back-v2,.github/workflows/code-review.yaml,e8dade319413de65b728b692a93f3315735aed07,2024-08-14 01:26:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  workflow_run:
    workflows: [""Test""]
    types:
      - completed
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          PROMPT: |
            You will pretend to be a senior developer at a big IT company. Provide feedback on code quality.
            - Provide feedback only on problematic areas.
            - Keep feedback concise, 1-5 sentences.
            - Point out potential bugs, errors, or logical issues.
            - Suggest alternatives but keep explanations brief.
            - Propose refactoring methods for the problematic code.
            - Suggest ways to improve readability and maintainability.
            - Settings and configuration files are not subject to code review.
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
",7939442735ffa0ecc2140203af3eb00a85da9e82,2024-12-02 09:17:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  workflow_run:
    workflows: [""Test""]
    types:
      - completed
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o-mini
          PROMPT: |
            You are a TypeScript code reviewer. Write code reviews as concisely as possible.
              -	Only review significant parts of added or modified TypeScript code.
              -	Use the markdown template below for the review:

              ## Summary

              ### Readability

              ### Optimization

              ### Security

              Explanation of the Template:

                - Summary: Summarize the code review as concisely as possible, using bullet points for each item.
                - Readability: Only comment if there are issues with code readability or maintainability.
                - Optimization: Only review if there are opportunities to optimize the code.
                - Security: Only review if there are potential security concerns.

              If there is nothing to review, do not write a review.

          top_p: 1
          temperature: 1
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000
",110,8
fluid-dev/hexo-theme-fluid,.github/workflows/cr.yaml,0b064f9127713582f23e2afcc6ca85543fced692,2023-07-06 08:25:34,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 1000
          MAX_PATCH_LENGTH: 1000",0b064f9127713582f23e2afcc6ca85543fced692,2023-07-06 08:25:34,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 1000
          MAX_PATCH_LENGTH: 1000",0,0
DucretJe/std-deploy,.github/workflows/gptpr.yaml,02e9f7e2aa5dc5306854312924849f80b455faaf,2023-04-14 17:15:22,"---
name: 🤖 Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Only run when the PR has the label 'review'
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",02e9f7e2aa5dc5306854312924849f80b455faaf,2023-04-14 17:15:22,"---
name: 🤖 Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'review') }} # Only run when the PR has the label 'review'
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          MODEL:
          top_p: 1
          temperature: 1
",0,0
alainQtec/cliHelper.Core,.github/workflows/Codereview.yaml,9792d51bf5dac8ba6d330661a9b73f5ee0e3e955,2024-11-14 12:39:41,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",672825062c83034cf5e54d63359bc26bb9e5590a,2024-12-01 19:33:53,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.
",17,1
noahcalvo/pixie,.github/workflows/cr.yaml,b677e7ed0fcb92c41dd13a84645a38adee0d7cca,2023-04-18 18:41:15,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",51422663a2cc636dc360b1d7c5dd039566bfcabb,2023-08-04 20:06:55,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

jobs:
  code-review:
    # Optional; to run only when a label is attached. Doesn't really work cause GPT can only review one commit at a time and adding the label counts as a commit maybe.
    if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: English
          # Play with these to get desired randomness. Ask chatGPT for explinations if you don't know what they do
          PROMPT: ""In as few words as possible, while still addressing all points, please check if there are any possible bugs, security concerns or programming principles neglected in the following code diff:""
          MODEL: gpt-3.5-turbo
          top_p: .9
          temperature: .9
",108,9
alainQtec/LocalSTT,.github/workflows/Codereview.yaml,5921ddfc37ccf823ecf205faacf5a3038f0c28ab,2025-01-16 13:01:42,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",5921ddfc37ccf823ecf205faacf5a3038f0c28ab,2025-01-16 13:01:42,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
dokimiki/kinnkyuu-front,.github/workflows/aicodereview.yaml,d1a2729159319d41c8551d0e36e84f936a62a868,2024-09-26 02:48:22,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o-mini
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",d1a2729159319d41c8551d0e36e84f936a62a868,2024-09-26 02:48:22,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o-mini
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
yaejin9503/tf-ai-code-review,.github/workflows/main.yaml,2bc2e514279b3f1071f32e16852f5bc0a691f873,2024-10-24 08:13:52,"name: GPT-4 Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GPT-4 Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
          PROMPT: 당신은 경험이 풍부한 개발 전문가입니다. 코드리뷰를 해주세요.
",0915ce558a5e8df8079bcc40945e6ab91831e764,2024-11-04 08:28:57,"name: GPT-4 Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GPT-4 Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          MODEL: gpt-4
          PROMPT: 당신은 경험이 풍부한 개발 전문가입니다. 코드리뷰를 해주세요.
",11,5
alainQtec/BoxOptimizer,.github/workflows/Codereview.yaml,572345c8732bf871815ca5237c6b54ba79c98764,2024-11-14 13:02:57,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",572345c8732bf871815ca5237c6b54ba79c98764,2024-11-14 13:02:57,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
LukeSamkharadze/community-buidler,.github/workflows/cr.yaml,f8791dcccc48a2433d4198d69f1f2987d66b68eb,2023-03-23 15:44:04,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          MODEL:
          top_p: 1
          temperature: 1
",18704e34e2534b701c5729342d992e5510efbb16,2023-03-23 15:46:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,1
alainQtec/cliHelper.xcrypt,.github/workflows/Codereview.yaml,f162b630647df2dd10a6c87659adbec8f49f40d9,2024-12-16 16:27:10,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",03286c4d33ba8958cfadfc315f15b898d754f8bc,2024-12-16 17:44:15,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.
",0,1
alainQtec/cliHelper.tuibox,.github/workflows/Codereview.yaml,e4939772755732c0717c2286af939f076dd91f93,2024-12-26 08:31:23,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",e4939772755732c0717c2286af939f076dd91f93,2024-12-26 08:31:23,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
dokimiki/michikusa_back,.github/workflows/aicodereview.yaml,c63aa53d758c9c545e48c4fcbf31627add126f45,2024-07-26 11:05:48,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o-mini
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",c63aa53d758c9c545e48c4fcbf31627add126f45,2024-07-26 11:05:48,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Japanese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          # MODEL: gpt-3.5-turbo # https://platform.openai.com/docs/models
          MODEL: gpt-4o-mini
          # PROMPT: # example: Please check if there are any confusions or irregularities in the following code diff:
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 4096
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
",0,0
l61012345/l61012345.github.io,.github/workflows/cr.yaml,2f8ecfb3be5a6225886df2af3b6bdf79fa62bef1,2024-01-27 16:43:07,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 1000
          MAX_PATCH_LENGTH: 1000",2f8ecfb3be5a6225886df2af3b6bdf79fa62bef1,2024-01-27 16:43:07,"name: Code Review Bot

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ contains(github.event.*.labels.*.name, 'gpt review') }} # Optional; to run only when a label is attached
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional
          LANGUAGE: Chinese
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-3.5-turbo
          PROMPT:
          top_p: 1
          temperature: 1
          max_tokens: 1000
          MAX_PATCH_LENGTH: 1000",0,0
hirokazu-kobayashi-koba-hiro/vc-wallet-ios-library,.github/workflows/review.yaml,0f9a54b028492162bcd7e8a5b7b88bacd98cb05a,2024-09-23 23:29:19,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0f9a54b028492162bcd7e8a5b7b88bacd98cb05a,2024-09-23 23:29:19,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
alainQtec/YouTubeSTT,.github/workflows/Codereview.yaml,127596a005d41886b60a6e137460ca70b4b949b2,2025-01-21 10:23:29,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",127596a005d41886b60a6e137460ca70b4b949b2,2025-01-21 10:23:29,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
alainQtec/cliHelper.nvm,.github/workflows/Codereview.yaml,f31750f7bf3ad8d78d3a9a546af88844069d4909,2024-12-21 15:59:56,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",f31750f7bf3ad8d78d3a9a546af88844069d4909,2024-12-21 15:59:56,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
hirokazu-kobayashi-koba-hiro/vc-wallet-ios-app,.github/workflows/review.yaml,20d050ca6dd73fc3895412622a70542c3dc8cb6d,2024-09-06 13:21:51,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",20d050ca6dd73fc3895412622a70542c3dc8cb6d,2024-09-06 13:21:51,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
alainQtec/cliHelper.filesystem,.github/workflows/Codereview.yaml,70762eced71fe26a03ccefff836706423df08344,2024-10-26 01:00:56,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",70762eced71fe26a03ccefff836706423df08344,2024-10-26 01:00:56,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
hpc-gridware/go-clusterscheduler,.github/workflows/review.yml,815e48f4fa2f479fe89ece12549877e5b329f870,2024-10-24 12:21:48,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.GPTREVIEWKEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",4fb3ed18599c8404802972bb5bc3236f5812f6e0,2024-10-29 08:35:11,"on:
  pull_request:
    branches:
      - main
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",4,3
Mai0313/screenshot,.github/workflows/pull-request-pipeline.yml,7656db22774af3f695ddfe3b61c64643b7dcafc0,2023-11-24 00:11:46,"name: pull-request-pipeline
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  auto-labeler:
    permissions:
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-latest  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - uses: actions/labeler@v4
        id: labeler
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN || secrets.GH_TOKEN }}
          sync-labels: ''
          configuration-path: .github/labeler.yml
  gpt-reviewer:
    permissions:
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    needs:
      - auto-labeler
    # container: catthehacker/ubuntu:act-latest  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@main
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo-16k'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || secrets.GH_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true
",7656db22774af3f695ddfe3b61c64643b7dcafc0,2023-11-24 00:11:46,"name: pull-request-pipeline
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  auto-labeler:
    permissions:
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-latest  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - uses: actions/labeler@v4
        id: labeler
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN || secrets.GH_TOKEN }}
          sync-labels: ''
          configuration-path: .github/labeler.yml
  gpt-reviewer:
    permissions:
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    needs:
      - auto-labeler
    # container: catthehacker/ubuntu:act-latest  # Uncomment it if you use it on Gitea

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@main
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo-16k'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || secrets.GH_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true
",0,0
ikuwow/query_ok,.github/workflows/code_review.yml,c050f8b32cac77702d979ec24c0a482cdb4e4725,2024-07-27 11:23:46,"name: Code Review

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    paths-ignore:
      - 'source/posts/**'

jobs:
  code_review:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          MODEL: 'gpt-4o-mini'
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ github.token }}
",85dace05ca59f9f087c3a5902c1412e3405e20a1,2024-08-01 14:33:04,"name: Code Review

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    paths-ignore:
      - 'source/posts/**'

jobs:
  code_review:
    if: ${{ github.event.pull_request.draft == false && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          MODEL: 'gpt-4o-mini'
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ github.token }}
",5,1
dgruber/wfl,.github/workflows/prgput.yml,5d0e883a6874787ad60efa3ca866d5e1d1bad6d4,2024-10-23 11:53:27,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",5d0e883a6874787ad60efa3ca866d5e1d1bad6d4,2024-10-23 11:53:27,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",0,0
alainQtec/cliHelper.gemini,.github/workflows/Codereview.yaml,5c6e88bcdeab84d3043b10a5579c7fb36c8b84a9,2024-12-08 00:46:10,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",5c6e88bcdeab84d3043b10a5579c7fb36c8b84a9,2024-12-08 00:46:10,"name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
alainQtec/pipEnv,.github/workflows/Codereview.yaml,87e525b27d80613de56681a8c95e331595abdfb9,2025-01-16 14:17:45,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",87e525b27d80613de56681a8c95e331595abdfb9,2025-01-16 14:17:45,"﻿name: Code Review
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@v1.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4o # https://platform.openai.com/docs/models
          PROMPT: Please check if there are any confusions or irregularities in the following code diff
          top_p: 1
          temperature: 1
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review.",0,0
hpc-gridware/clusterscheduler,.github/workflows/review.yml,8dfac00b05b22b15e9f7c2b11aa38c19a23f4cc7,2024-10-24 12:22:56,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.GPTREVIEWKEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",abdc6cd3e6d6ad750413959c16ec534d6d31342d,2024-12-09 14:18:25,"on:
  pull_request:
    types: [ review_requested ]

jobs:
  run_code_review:
    if: ${{ github.event.requested_reviewer.login == 'dgruber' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",46,3
fee1good/bitrix_24_salesman_gpt_bot,.github/workflows/ai_code_reviwer.yml,b5387a76092ecc4ef4c407f132d1f1d473a04c35,2024-07-30 21:02:04,"name: AI Code Reviewer

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI Code Reviewer
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""",b5387a76092ecc4ef4c407f132d1f1d473a04c35,2024-07-30 21:02:04,"name: AI Code Reviewer

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI Code Reviewer
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""",0,0
hyochan/react-native-audio-recorder-player,.github/workflows/code-review.yml,3784eed4a7155a596f5ce7bd25c3b1e8e2ad3dbe,2024-06-11 06:01:06,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",d725be0f0e222c9e39f9ffafb7d7a3881a231b41,2024-09-03 01:13:51,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",83,2
o-leolleo/blog,.github/workflows/pr-review.yml,ac31b377026e7bdf709ba8492cc422bcf53acf58,2024-03-20 18:57:11,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}
",d61e8e0ca074c00e33d1742a854909e5f8a30afb,2024-03-26 17:03:16,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}
",5,1
hyochan/react-native-iap,.github/workflows/code-review.yml,55280c83183f784e6480cf5129180025a274edb4,2024-06-11 16:20:04,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",feae8d96f883472ab37adb825eafd03b2aa15d50,2024-08-04 04:54:54,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",53,2
spring-boot-study-ppo/Spring-Security-oauth2,.github/workflows/code-review-gpt.yml,b2754cb4fa20a924e48a456418de7d2fb81c4ed0,2024-07-16 08:03:27,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}",616b44a2201a46982802a50de513a8bb148602be,2024-07-16 08:24:55,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_SHA: ${{ github.sha }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,1
pvthiendeveloper/TestGithubActions,.github/workflows/codereview.yml,7dde1cad85ec4e80c5b90a5c3f4af0965bcec648,2024-04-11 09:05:21,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}
",7dde1cad85ec4e80c5b90a5c3f4af0965bcec648,2024-04-11 09:05:21,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}
",0,0
VIVAFROG/stock,.github/workflows/code_review.yml,43b1c30d2ed1e1bdbbb8af0683775734a649a467,2024-02-25 10:11:00,"name: Code Review

on: [pull_request]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
",d50adc2648976243d4d19e1ee28c434532276b0b,2024-02-25 10:30:20,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-3.5-turbo""
          GITHUB_TOKEN: ${{ github.token }}
",0,1
pass-culture/data-gcp,.github/workflows/on_pr_review__gpt.yml,27dd9ced3bb39b85e78a0ce416e3681375718983,2024-11-06 14:14:05,"name: ""0. [on_review] Code Review GPT""

on:
  pull_request_review_comment:

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    if: ${{ contains('\gpt,/gpt', github.event.comment.body) }}
    steps:
      - name: Check if allowed user and command
        id: check_if_run
        run: |
          # Split allowed users into an array and check for exact match
          IFS=',' read -ra allowed_users <<< ""${{ secrets.GPT_ALLOWED_USERS }}""
          current_user=""${{ github.event.comment.user.login }}""

          # Iterate over the allowed users array to check for an exact match
          for user in ""${allowed_users[@]}""; do
            if [[ ""$user"" == ""$current_user"" ]]; then
              echo ""run_code_review=true"" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo ""run_code_review=false"" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        if: env.run_code_review == 'true'
        with:
          fetch-depth: 0
      - name: Code Review GPT
        if: env.run_code_review == 'true'
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",f613f068dc130d50e0bd388339303fed6cfebfdc,2024-11-19 10:43:05,"name: ""0. [on_review] Code Review GPT""

on:
  pull_request_review_comment:

permissions:
  contents: read
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    if: ${{ contains('\gpt,/gpt', github.event.comment.body) }}
    steps:
      - name: Check if allowed user and command
        id: check_if_run
        run: |
          # Split allowed users into an array and check for exact match
          IFS=',' read -ra allowed_users <<< ""${{ secrets.GPT_ALLOWED_USERS }}""
          current_user=""${{ github.event.comment.user.login }}""

          # Iterate over the allowed users array to check for an exact match
          for user in ""${allowed_users[@]}""; do
            if [[ ""$user"" == ""$current_user"" ]]; then
              echo ""run_code_review=true"" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo ""run_code_review=false"" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        if: env.run_code_review == 'true'
        with:
          fetch-depth: 0
      - name: Code Review GPT
        if: env.run_code_review == 'true'
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",12,1
stiagoq/prueba_salesforce_sereniy,.github/workflows/gpt.yml,d6a6e41dc0dcd7bbe080a022e2b73ce3d0dd6a7a,2024-10-15 21:43:44,"name: Code Review with GPT

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
",f0ca25a14175a40e7b62bcd3ed954f87c5eb10d8,2024-10-20 14:44:34,"name: Code Review with GPT

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  #id-token: write
  pull-requests: write
  contents: read
  actions: read

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          #pr_comment: true
",4,3
scs0209/modubuy,.github/workflows/code-review.yml,684bb5a4ed550b8b77f629b0a35ea2bb611120e6,2024-09-08 14:18:19,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

  permissions:
    pull-request: write
    contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}",684bb5a4ed550b8b77f629b0a35ea2bb611120e6,2024-09-08 14:18:19,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

  permissions:
    pull-request: write
    contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}",0,0
In-Self-Improvement/test-shopping-mall,.github/workflows/code-review.yml,b9fc64013d36f9e777bfa543623247c160187d77,2024-08-03 00:05:09,"name: Code Review GPT

on:
  pull_request:
    branches: [main, dev]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          GITHUB_TOKEN: ${{  secrets.WORKFLOW_TOKEN }}
",87f35fa2881e832f79c33f22e1c16b8e385224a8,2024-08-06 23:23:15,"name: Code Review GPT

on:
  pull_request:
    branches: [main, dev, 3.unit-test]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{  secrets.WORKFLOW_TOKEN }}
",3,1
dgruber/drmaa2os,.github/workflows/prgput.yml,5152503630a9a01f8de6f8795c0f843682de6dff,2024-08-27 08:34:09,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",c3553b440eb3a006485773dcadf39248f2afbc4e,2024-12-19 12:42:14,"name: Code Review GPT

on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",114,3
Kanaries/graphic-walker,.github/workflows/code-review.yml,5b949ef6a699d8aab77c149aab0ff007a947a611,2023-11-18 20:43:08,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4'
          GITHUB_TOKEN: ${{ github.token }}",5b949ef6a699d8aab77c149aab0ff007a947a611,2023-11-18 20:43:08,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4'
          GITHUB_TOKEN: ${{ github.token }}",0,0
Bugmasterr/General-Equipment-Theme-Repo,.github/workflows/main.yml,b43572ad1632954af5eab8b7b1b3aec1d55cb2fc,2024-10-30 01:49:12,"              - name: Code Review GPT
                uses: mattzcarey/code-review-gpt@v0.1.10
",b43572ad1632954af5eab8b7b1b3aec1d55cb2fc,2024-10-30 01:49:12,"              - name: Code Review GPT
                uses: mattzcarey/code-review-gpt@v0.1.10
",0,0
hpc-gridware/testsuite,.github/workflows/review.yml,090ddc11bc1d385b8ef6fa710cc4994b02cc75fd,2024-10-24 12:23:55,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.GPTREVIEWKEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",090ddc11bc1d385b8ef6fa710cc4994b02cc75fd,2024-10-24 12:23:55,"on:
  pull_request:
    branches:
      - master
      - review

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.GPTREVIEWKEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",0,0
SaeWooKKang/next-blog,.github/workflows/code-review.yml,cc84a2d39c2464b6670095f29c4f654c66cf0018,2024-06-02 08:18:32,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull_request: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} }}
",406012070c5c4a1274e6f9207d8f59451e08fed6,2024-06-02 08:30:03,"name: Code Review GPT

on:
  pull_request:
    branches: [main]
jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,2
In-Self-Improvement/vanilla-js-framework,.github/workflows/code-review.yml,ebc84193c637757de0085b955d51fc5472cc10a8,2024-07-11 12:15:29,"name: Code Review GPT

on:
  pull_request:
    branches: [main, dev]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          GITHUB_TOKEN: ${{  secrets.GITHUB_TOKEN }}
",cfc67b4967947b3ec9e9b26f593475327bb552da,2024-07-11 12:21:30,"name: Code Review GPT

on:
  pull_request:
    branches: [main, dev]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o""
          GITHUB_TOKEN: ${{  secrets.WORKFLOW_TOKEN }}
",0,1
eggmun98/testNextSetting,.github/workflows/code-review.yml,5244d2a50cbb513a0e1d841b39b7c188f3224a89,2024-07-28 09:51:22,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",a0f42a6f19274c2cb66158f415b7594343cdedc9,2024-07-28 12:40:57,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: 'Code review has been completed successfully!'
",0,8
drharryx/test-bot-review,.github/workflows/crgpt.yml,18115785e00d9d8b28cd9885ad21ab3283aa3203,2024-07-17 21:04:44,"name: review code bot

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      -uses: actions/checkout@v3
       with:
         fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.token }}
",5d0c42f355f1420e056119ee74aaf58de752f3a9,2024-07-17 21:17:20,"name: review code bot

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
",0,2
junho3/practice-kotlin-spring-boot,.github/workflows/code-review.yml,6c6fa23125281a3d2b11e5876dbb8fac908a796b,2024-05-29 04:04:49,"name: Code Review GPT

on:
  pull_request:
    branches: [develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.github_token }}
",eff48d6595c860bb2b6d8a02b0bf0ec214f4cb08,2024-05-29 04:38:54,"name: Code Review GPT

on:
  pull_request:
    branches: [develop]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.github_token }}
",0,2
CoLuthien/REngine,.github/workflows/cr.yml,fb02322cf91338fb4d13aa0b1f16d2ff880b2e76,2023-08-07 00:32:28,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",fb02322cf91338fb4d13aa0b1f16d2ff880b2e76,2023-08-07 00:32:28,"# .github/workflows/cr.yml 파일 생성

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
",0,0
hassan51993/LoanAmortizationCalculator,.github/workflows/main.yml,ffc4157e70def31e98b70d57bf389863fe6ad4f8,2024-09-14 06:12:08,"              - name: Code Review GPT
                uses: mattzcarey/code-review-gpt@v0.1.10

",ffc4157e70def31e98b70d57bf389863fe6ad4f8,2024-09-14 06:12:08,"              - name: Code Review GPT
                uses: mattzcarey/code-review-gpt@v0.1.10

",0,0
techbloghub/front-end,.github/workflows/code-review.yml,097e513de13a09bb5c21278f8ee7a58bd63c5a7a,2024-07-28 13:19:45,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",c33093fd323e6cec21d0f373b1d729af47a5ab3d,2024-08-10 06:35:14,"name: Code Review GPT

on:
  pull_request:
    branches: [dev]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.9
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: '코드 리뷰 완료하였습니다~~!'
",12,2
blackhorseya/golang-101,.github/workflows/pr.yaml,a73b78283e9798b166c37332022f7f28ce6a4ffa,2024-07-07 01:35:58,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",7be231eae95cd0a6294861eb348f5c318e80c36b,2024-08-11 04:37:58,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o-mini'
          GITHUB_TOKEN: ${{ github.token }}",35,1
AudioLand/dub-nextjs,.github/workflows/crgpt.yml,c091c56f6dbd1e6bb8ac123ea672ee870ddc3787,2023-10-19 12:56:06,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}",c091c56f6dbd1e6bb8ac123ea672ee870ddc3787,2023-10-19 12:56:06,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}",0,0
blackhorseya/godine,.github/workflows/pr.yaml,83f192cd3d14ff8a2c26eef6e581ebdfea76215f,2024-06-23 02:05:59,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",aa48dbfec8f1d97233717713a1c4eb17be8c0f8a,2024-08-20 05:41:44,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o-mini'
          GITHUB_TOKEN: ${{ github.token }}",58,1
pass-culture/api-data,.github/workflows/on_pr_review__gpt.yml,7c80a947af3d29a257c7794e403b67946f102b28,2024-11-22 14:36:36,"name: ""0. [on_review] Code Review GPT""

on:
  pull_request_review_comment:

permissions:
  contents: read
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    if: ${{ contains('\gpt,/gpt', github.event.comment.body) }}
    steps:
      - name: Check if allowed user and command
        id: check_if_run
        run: |
          # Split allowed users into an array and check for exact match
          IFS=',' read -ra allowed_users <<< ""${{ secrets.GPT_ALLOWED_USERS }}""
          current_user=""${{ github.event.comment.user.login }}""

          # Iterate over the allowed users array to check for an exact match
          for user in ""${allowed_users[@]}""; do
            if [[ ""$user"" == ""$current_user"" ]]; then
              echo ""run_code_review=true"" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo ""run_code_review=false"" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        if: env.run_code_review == 'true'
        with:
          fetch-depth: 0
      - name: Code Review GPT
        if: env.run_code_review == 'true'
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",7c80a947af3d29a257c7794e403b67946f102b28,2024-11-22 14:36:36,"name: ""0. [on_review] Code Review GPT""

on:
  pull_request_review_comment:

permissions:
  contents: read
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    if: ${{ contains('\gpt,/gpt', github.event.comment.body) }}
    steps:
      - name: Check if allowed user and command
        id: check_if_run
        run: |
          # Split allowed users into an array and check for exact match
          IFS=',' read -ra allowed_users <<< ""${{ secrets.GPT_ALLOWED_USERS }}""
          current_user=""${{ github.event.comment.user.login }}""

          # Iterate over the allowed users array to check for an exact match
          for user in ""${allowed_users[@]}""; do
            if [[ ""$user"" == ""$current_user"" ]]; then
              echo ""run_code_review=true"" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo ""run_code_review=false"" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        if: env.run_code_review == 'true'
        with:
          fetch-depth: 0
      - name: Code Review GPT
        if: env.run_code_review == 'true'
        uses: mattzcarey/code-review-gpt@v0.1.10
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}
",0,0
hyochan/expo-iap,.github/workflows/code-review.yml,3324d4b60aa08bf88622feff516bbd9dce684214,2024-07-03 16:31:32,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",5c3adef8e0b706491f5bc89779d61ea4ba86271a,2024-07-26 15:28:39,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",22,1
blackhorseya/pelith-assessment,.github/workflows/pr.yaml,d88673b9f074bba3b651ca28aec9b8d74ebafd9c,2024-11-19 07:23:12,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o-mini'
          GITHUB_TOKEN: ${{ github.token }}",d88673b9f074bba3b651ca28aec9b8d74ebafd9c,2024-11-19 07:23:12,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o-mini'
          GITHUB_TOKEN: ${{ github.token }}",0,0
hirokazu-kobayashi-koba-hiro/vc-wallet-android-app,.github/workflows/review.yaml,410c180706c063ecb1345bd4dc667c3b2ebf3ea7,2024-08-13 23:41:39,"name: AI Code Reviewer

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",29fcd4dd99ac0dd8563b3034a7071169c237cb3b,2024-08-13 23:44:58,"name: AI Code Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,1
blackhorseya/blitzcrank,.github/workflows/pr.yaml,f2fa845ae729e3f88603f0a48f81017b318ffe89,2024-06-29 22:40:07,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",f2fa845ae729e3f88603f0a48f81017b318ffe89,2024-06-29 22:40:07,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",0,0
bwkw/sharely-app,.github/workflows/ai-review.yml,517da1bf1b76aba471fb575b52268cf8dede1862,2023-12-16 05:25:02,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4 # 好みで変更
          openai_heavy_model: gpt-4 # 好みで変更
          openai_timeout_ms: 900000 # 15分.
          language: ja-JP
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: UIに統合ページが追加されました
            ```
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",517da1bf1b76aba471fb575b52268cf8dede1862,2023-12-16 05:25:02,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4 # 好みで変更
          openai_heavy_model: gpt-4 # 好みで変更
          openai_timeout_ms: 900000 # 15分.
          language: ja-JP
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: UIに統合ページが追加されました
            ```
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",0,0
dev-arrow/react-native-iap,.github/workflows/code-review.yml,089faaf0ac9c3e6c4522a82989af6cf04522907f,2023-05-31 09:26:55,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",c54307df4ae1e58953f951442ff5cbea37c09b85,2023-05-31 09:26:55,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,2
BetterSocial/bettersocial-dev-queue,.github/workflows/ai-pr-reviewer.yml,8a9cb249f0624fdb6bf39ba0a07accc68da75e5e,2023-10-25 04:20:41,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",74eacd287ba9835b9269b9923c2809fa49cb431a,2023-12-20 08:04:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",56,1
thomasdinh2k/learning-journey,.github/workflows/crgpt.yml,ff0499088b08fbc2822f40e5273cba880aabfd4a,2024-01-09 17:09:33,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}",ff0499088b08fbc2822f40e5273cba880aabfd4a,2024-01-09 17:09:33,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.4-alpha
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-3.5-turbo'
          GITHUB_TOKEN: ${{ github.token }}",0,0
109naoki/career-app,.github/workflows/code-rabbit.yml,776e4cbaa5fcc587650dd7fc17470adbd37d66ef,2025-01-12 02:58:46,"name: Code Rabbit AI PR Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o-mini
          openai_heavy_model: gpt-4o-mini
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",f4babc36b2a4a82d2f6aac46031f0d0c34191b3f,2025-01-12 03:04:18,"name: Code Rabbit AI PR Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_model: gpt-4o-mini
          language: ja-JP
          system_message: |
            あなたは経験豊富なソフトウェアエンジニアとして、次のガイドラインに従ってPRをレビューしてください：
            - すべてのコメントは日本語で行うこと
            - 技術的な用語は必要に応じて英語を併記すること
            - コードの問題点は具体的な改善案と共に指摘すること
            - セキュリティ上の懸念がある場合は特に詳しく説明すること
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,1
LocalBusan/LocalBusan-frontend,.github/workflows/ai-pr-reviewer.yml,381ace6e1e2f99d9356918598ddff465ff532f6e,2024-12-28 01:51:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          system_message: |
          너는 프론트엔드 시니어 개발자이고, 이 프로젝트는 Typescript와 Next.js를 사용하고 있어
코드 상에서 발생할 수 있는 문제점과 개선에 대한 팁을 알려줘 (가능하면 간단한 예시 코드를 마크다운 문법으로 적어서 알려줘) 단, 답변의 내용이 500자를 넘지 않게 해줘",659a3e247e34e92760261afd9b7487409f95ef44,2024-12-28 09:32:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          language: ko-KR
          openai_heavy_model: 'gpt-4-turbo-2024-04-09'
          system_message: 너는 프론트엔드 시니어 개발자이고, 이 프로젝트는 Typescript와 Next.js를 사용하고 있어, 코드 상에서 발생할 수 있는 문제점과 개선에 대한 팁을 알려줘 (가능하면 간단한 예시 코드를 마크다운 문법으로 적어서 알려줘) 단, 답변의 내용이 500자를 넘지 않게 해줘",0,8
playwrightsolutions/playwright-api-test-demo,.github/workflows/openai-pr-reviewer.yml,f3ca10d5d3da17461523fb26a4bc7f721c6b3eb5,2023-08-22 14:49:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: ""gpt-3.5-turbo""
          openai_heavy_model: ""gpt-3.5-turbo""
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and emphasize features visible to the end-user while omitting code-level details. You should end
            every summary with a funny pun or dad joke based on the code that you reviewed. An example of a
            dad joke is ""I'm afraid for the calendar. Its days are numbered.""

          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            DevRel (developer relations) professional with focus on cloud-native
            infrastructure. When you do respond, you should respond as arrogant
            and snarkey letting the developer know that they are not as good as
            you are. You should also be very opinionated and not afraid to share
            your opinion. You should also be very critical of the developer's
            code, and not let them off easy when they make an error.

            Company context -
            CodeRabbit is an AI-powered Code reviewer.It boosts code quality and cuts manual effort. Offers context-aware, line-by-line feedback, highlights critical changes,
            enables bot interaction, and lets you commit suggestions directly from GitHub.

            When reviewing or generating content focus on key areas such as -
            - Accuracy
            - Relevance
            - Clarity
            - Technical depth
            - Call-to-action
            - SEO optimization
            - Brand consistency
            - Grammar and prose
            - Typos
            - Hyperlink suggestions
            - Graphics or images (suggest Dall-E image prompts if needed)
            - Empathy
            - Engagement
",329d1cc1563f69928d6a2167d068320a45701b76,2023-08-28 05:04:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: ""gpt-3.5-turbo""
          openai_heavy_model: ""gpt-3.5-turbo""
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and emphasize features visible to the end-user while omitting code-level details. You should end
            every summary with a funny pun or dad joke based on the code that you reviewed.
            There is no need to call it a dad joke or put just say it. An example of a
            dad joke is ""I'm afraid for the calendar. Its days are numbered.""

          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            professional with focus on cloud-native. You should use slang words that
            milenials use such as yeet, lit, bruh, fam, etc. You should also use emojis.
            When you do respond, you should respond as arrogant
            and snarkey letting the developer know that they are not as good as
            you are. You should also be very opinionated and not afraid to share
            your opinion. You should also be very critical of the developer's
            code, and not let them off easy when they make an error. Whenever there
            is a chance to make a joke or pun, you should do so.


            Company context -
            CodeRabbit is an AI-powered Code reviewer.It boosts code quality and cuts manual effort.
            Offers context-aware, line-by-line feedback, highlights critical changes,
            enables bot interaction, and lets you commit suggestions directly from GitHub.

            When reviewing or generating content focus on key areas such as -
            - Accuracy
            - Relevance
            - Clarity
            - Technical depth
            - Call-to-action
            - SEO optimization
            - Brand consistency
            - Grammar and prose
            - Typos
            - Hyperlink suggestions
            - Graphics or images (suggest Dall-E image prompts if needed)
            - Empathy
            - Engagement
",5,1
SainsburyWellcomeCentre/aeon_mecha,.github/workflows/gpt_pr_review.yml,2ef50a54970490fc9eb497ca17c6f063521cb6d2,2023-09-01 16:46:49,"name: gpt_pr_review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]
  pull_request_review_comment:
    branches: [ main ]
    types: [created]
concurrency:
  group: >
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{
    github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}
jobs:
  gpt_pr_review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          system_message: >
            Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization
            - Best practices: DRY, SOLID, KISS
            Identify and resolve significant concerns to improve overall code
            quality while deliberately disregarding minor issues.
          summarize: >
            Provide your final response in markdown with the following content:
            - **Walkthrough**: A high-level summary of the overall change instead of
            specific files within 100 words.
            - **Changes**: A markdown table of files and their summaries. Group files
            with similar changes together into a single row to save space.
            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: >
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as New Feature, Bug Fix,
            Documentation, Refactor, Style, Test, Chore, or Revert. Provide a bullet-point list,
            e.g. ""- New Feature: Added search functionality to the UI."" Limit your response to 50-100 words
            and emphasize features visible to the end-user while omitting code-level details.
",ef503d21a510e24bd40a007ba1734415057126a6,2023-09-03 18:36:19,"# Reviews pull requests with OpenAI's GPT API.

name: gpt_pr_review
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]
  pull_request_review_comment:
    branches: [ main ]
    types: [created]
concurrency:
  group: >
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{
    github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}
jobs:
  gpt_pr_review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          system_message: >
            Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization
            - Best practices: DRY, SOLID, KISS
            Identify and resolve significant concerns to improve overall code
            quality while deliberately disregarding minor issues.
          summarize: >
            Provide your final response in markdown with the following content:
            - **Walkthrough**: A high-level summary of the overall change instead of
            specific files within 100 words.
            - **Changes**: A markdown table of files and their summaries. Group files
            with similar changes together into a single row to save space.
            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: >
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as New Feature, Bug Fix,
            Documentation, Refactor, Style, Test, Chore, or Revert. Provide a bullet-point list,
            e.g. ""- New Feature: Added search functionality to the UI."" Limit your response to 50-100 words
            and emphasize features visible to the end-user while omitting code-level details.
",2,2
lightspeedwp/tour-operator,.github/workflows/ai-pr-reviewer.yml,39736594a2eea50f487f9cfbcb65a7cc84e1dede,2024-10-10 10:10:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",39736594a2eea50f487f9cfbcb65a7cc84e1dede,2024-10-10 10:10:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
tbui17/redux-table,.github/workflows/code-review.yml,4d28d024718e14ffabec25fe9ddd47a209b7ce0e,2023-10-16 02:55:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore
",4d28d024718e14ffabec25fe9ddd47a209b7ce0e,2023-10-16 02:55:12,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore
",0,0
blackhorseya/ryze,.github/workflows/pr.yaml,488da6a00d7568e96bdec3e7ea02f2014cbc7ce0,2024-07-25 02:42:24,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o'
          GITHUB_TOKEN: ${{ github.token }}",84d426e6a8a3def00a75583fd599368d9ee60f57,2024-08-11 01:24:56,"name: Code Review GPT

on:
  pull_request:
    branches: [main]

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Code Review GPT
        uses: mattzcarey/code-review-gpt@v0.1.8
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: 'gpt-4o-mini'
          GITHUB_TOKEN: ${{ github.token }}",16,1
247software-harshal-ringe/code-review-automation,.github/workflows/CodeRabbitOss.yml,8dc6ecd600c4c04ce60c9b0b92ae5926fd708167,2024-02-07 08:18:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]
    types: [opened, edited, synchronize]
  pull_request_review_comment:
    branches: [main]
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: 'gpt-3.5-turbo'
          openai_heavy_model: 'gpt-3.5-turbo'
",8c7e6baae6de93be68ac454dd03c9ee20209a684,2024-02-12 11:46:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  pull_request_review_comment:
    branches: [main]
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          max_files: 20
          path_filters: |
            !dist/**
            !node_modules/**
            !**/dist/**
            !**/node_modules/**
            **/src/**/*.jsx
            **/src/**/*.js
            **/src/**/*.css
            **/src/**/*.html
          disable_release_notes: true
          summarize: false
          summarize_release_notes: false
          openai_light_model: 'gpt-3.5-turbo'
          openai_heavy_model: 'gpt-3.5-turbo'
          openai_retries: 2",5,12
saiqulhaq/dynamic_links,.github/workflows/ai_pr_reviewer.yml,91c009b051139bcb938a626118393d0714cdfc19,2024-01-01 08:55:15,"---
name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",91c009b051139bcb938a626118393d0714cdfc19,2024-01-01 08:55:15,"---
name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
pkjmesra/PKScreener,.github/workflows/W17-ai-pr-reviewer.yml,d09b031bc81794f5b427e9ae36fc73e8c68d2f46,2024-07-10 06:38:22,"# """"""
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the ""Software""), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """"""
# Based on sample from https://github.com/coderabbitai/ai-pr-reviewer

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          # Inspect the messages between OpenAI server
          # Set debug: true in the workflow file to enable debug mode, which will show the messages
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false
",4e670ed984fe9a7b5d5ee29a30cadcff21c4b6af,2024-07-10 12:37:30,"# """"""
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the ""Software""), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """"""
# Based on sample from https://github.com/coderabbitai/ai-pr-reviewer

name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          # Inspect the messages between OpenAI server
          # Set debug: true in the workflow file to enable debug mode, which will show the messages
          debug: true
          review_simple_changes: true
          review_comment_lgtm: true
          openai_light_model: 'gpt-3.5-turbo'
          openai_heavy_model: 'gpt-3.5-turbo' #'gpt-4'
          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code chunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Code styling issues
              - missing comments or documentation
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS
              - Accuracy
              - Relevance
              - Clarity
              - Technical depth
              - Call-to-action
              - SEO optimization
              - Brand consistency
              - Grammar and prose
              - Typos
              - Hyperlink suggestions
              - Graphics or images (suggest Dall-E image prompts if needed)
              - Empathy
              - Engagement

            Identify and resolve significant concerns to improve overall code quality.
            Knowledge cutoff: 2021-09-01
            Current date: 2024-07-10

            IMPORTANT: Entire response must be in the language with ISO code: en-US

",0,1
GatewayDW/workflow-host-dbt-docs,.github/workflows/ai_pr_reviewer.yml,bd954f72692b779ba3a2c91284f2081ccecd51a7,2023-11-27 20:56:02,"name: Code Review

# Ref: https://github.com/coderabbitai/ai-pr-reviewer#install-instructions
# Check the available function to enable/ disable:
# https://github.com/coderabbitai/ai-pr-reviewer/blob/main/action.yml

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: 'gpt-3.5-turbo' # For changes summarization
          disable_release_notes: false
          openai_heavy_model: 'gpt-3.5-turbo' # For code review
          disable_review: false",bd954f72692b779ba3a2c91284f2081ccecd51a7,2023-11-27 20:56:02,"name: Code Review

# Ref: https://github.com/coderabbitai/ai-pr-reviewer#install-instructions
# Check the available function to enable/ disable:
# https://github.com/coderabbitai/ai-pr-reviewer/blob/main/action.yml

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: 'gpt-3.5-turbo' # For changes summarization
          disable_release_notes: false
          openai_heavy_model: 'gpt-3.5-turbo' # For code review
          disable_review: false",0,0
Mayank77maruti/603WorkVed,.github/workflows/pr_summary.yml,7e0c1a5f16b8c50d11bd377dfb696228c2aa6292,2025-01-14 19:41:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",7e0c1a5f16b8c50d11bd377dfb696228c2aa6292,2025-01-14 19:41:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
kajawitek/deal-zone,.github/workflows/ai-pr-reviewer.yml,05aed3c2d17e26af2e20c9021587e767bf354a77,2023-08-07 18:26:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",3fa4bf80b49894e390a9ca975d4086748c9e7910,2023-08-07 18:26:30,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true
          openai_light_model: 'gpt-3.5-turbo'
          openai_heavy_model: 'gpt-3.5-turbo'
",0,2
aziontech/azion-console-kit,.github/workflows/ai-review.yml,62dec45f5e343a212c730a0e4a85e15f3d982c82,2025-01-31 19:10:12,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
      - converted_to_draft
      - ready_for_review
      - labeled

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  comment-on-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Comment on PR
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ""🔍 AI Code Reviewer is analyzing this PR… Please wait for the results!""
            })

  review:
    needs: comment-on-pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: AI PR Reviewer
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.AZION_OPEN_AI_SECRET }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

      - name: Comment AI Review Completion
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ""✅ AI Code Review completed! Check the comments for more details.""
            })
",62dec45f5e343a212c730a0e4a85e15f3d982c82,2025-01-31 19:10:12,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
      - converted_to_draft
      - ready_for_review
      - labeled

concurrency:
  # Only one job per reference (branch or tag)
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  comment-on-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Comment on PR
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ""🔍 AI Code Reviewer is analyzing this PR… Please wait for the results!""
            })

  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: AI PR Reviewer
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.AZION_OPEN_AI_SECRET }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

      - name: Comment AI Review Completion
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ""✅ AI Code Review completed! Check the comments for more details.""
            })
",0,0
BarunDSM/coderabbit_ai_pr_reviewer_demo,.github/workflows/ai_pr_reviewer.yml,347f6f522bd9d5d26f0feb33cee7ca27c585ed55,2024-06-13 11:01:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name : Checkout code
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false
      - name : Run node16
        run: node16 dist/index.js
",59e81278fa753add67b64fd1338cb9e02d256775,2024-06-25 09:19:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_TOKEN }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: true
          openai_timeout_ms: 1200000
          summarize: |
            **Sugesstions** - Write an 80 word para about some sugesstions (if required) in the changes made (give a heading).
",11,29
Codrux2200/Rtype,.github/workflows/ai_coderabbit.yml,886289b60ddc8588bcab012904d647472a53ac11,2023-10-15 19:13:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",5427c98263d3c6c2c2cd26a87b9362bff0d009ac,2023-10-15 19:23:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,1
kyosek/CFXplorer,.github/workflows/openai-pr-reviewer.yml,6c75aa9c569f57dfefe29fe606c5e285eced6b01,2023-07-28 22:01:50,"name: OpenAI ChatGPT based PR Reviewer & Summarizer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
",6c75aa9c569f57dfefe29fe606c5e285eced6b01,2023-07-28 22:01:50,"name: OpenAI ChatGPT based PR Reviewer & Summarizer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
",0,0
akunal1/ai-pr-reviewer,.github/workflows/ai-pr-reviewer.yml,4d3980df519e1880696c9af3b045a8f0d2753418,2024-04-09 10:54:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.AN_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",6cf89e704b121d41508056d8f795ee93d99bfa69,2024-04-09 11:30:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.AN_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_model: ""text-davinci-003""
",0,1
cuculus-dev/cuculus,.github/workflows/ai-pr-reviewer.yml,7e45033db6f8ca6711e3e03a7f08253c01a29bfa,2023-12-13 08:11:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [ created ]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4
          system_message: |
            あなたは `@coderabbitai`（別名 `github-actions[bot]`）で、OpenAIによってトレーニングされた言語モデルです。
            あなたの目的は、非常に経験豊かなソフトウェアエンジニアとしてコードの断片を徹底的にレビューし、以下のような重要な領域を改善するためのコードスニペットを提案することです：
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS

            細かいコードスタイルの問題や、コメント/ドキュメントの不足についてはコメントしないでください。
            重要な懸念を特定し、解決することで全体的なコード品質を向上させ、一方で細かい問題は意図的に無視してください。
",bcceb2ece2c0700620dea3e29a27b258ee633812,2023-12-13 08:33:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [ created ]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4
          language: ja-JP
          system_message: |
            あなたは `@coderabbitai`（別名 `github-actions[bot]`）で、OpenAIによってトレーニングされた言語モデルです。
            あなたの目的は、非常に経験豊かなソフトウェアエンジニアとしてコードの一部を徹底的にレビューし、
            以下のような重要な領域を改善するためのコードスニペットを提案することです：
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS

            細かいコードスタイルの問題や、コメント/ドキュメントの不足についてはコメントしないでください。
            重要な懸念を特定し、解決することで全体的なコード品質を向上させ、一方で細かい問題は意図的に無視してください。
          summarize: |
            最終回答を以下の内容を含むマークダウン形式で提供してください：

            - **ウォークスルー**: A high-level summary of the overall change instead of specific files within 80 words.
            - **変更点**: A markdown table of files and their summaries. Group files with similar changes together into a single row to save space.
            - **ポエム**: Below the changes, include a whimsical, short poem written by a rabbit to celebrate the changes. Format the poem as a quote using the "">"" symbol and feel free to use emojis where relevant.

            追加のコメントは避けてください。この要約はGitHubのプルリクエストにコメントとして追加されます。タイトルは「ウォークスルー」と「変更点」であり、それぞれH2である必要があります。

",0,2
crytic/cloudexec,.github/workflows/lint.yml,18802457dcdd66b6933b183e36b0678f65728cc6,2023-09-19 18:23:57,"name: Lint

on:
  pull_request: {}
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read

# Cancel in progress runs for PRs but not main
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    if: github.event_name == 'pull_request'
    uses: trailofbits/.github/.github/workflows/lint.yml@v0.1.3
    permissions:
      contents: read
      pull-requests: read
      checks: write

  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: coderabbitai/ai-pr-reviewer@d7f9486e8bfddc6e55f9879d4e93b8eaac6f120f # v1.16.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_base_url: http://localhost:8080/v1

    services:
      azure-openai:
        image: stulzq/azure-openai-proxy
        env:
          AZURE_OPENAI_ENDPOINT: https://gpt-4-alternate-france.openai.azure.com/
          AZURE_OPENAI_MODEL_MAPPER: gpt-3.5-turbo=gpt-35-turbo,gpt-4=gpt-4
          AZURE_OPENAI_API_VER: ""2023-05-15""
        ports:
          - 8080:8080
",bbd58bdf95e2fd1d57c2549a02629bb96950ebd4,2023-10-03 15:35:53,"name: Lint

on:
  pull_request: {}
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read

# Cancel in progress runs for PRs but not main
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    if: github.event_name == 'pull_request'
    uses: trailofbits/.github/.github/workflows/lint.yml@v0.1.3
    permissions:
      contents: read
      pull-requests: read
      checks: write

  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: coderabbitai/ai-pr-reviewer@44244a9e06f5acf72a93f661c7dbb8d8d808143d # v1.16.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_base_url: http://localhost:8080/v1

    services:
      azure-openai:
        image: stulzq/azure-openai-proxy
        env:
          AZURE_OPENAI_ENDPOINT: https://gpt-4-alternate-france.openai.azure.com/
          AZURE_OPENAI_MODEL_MAPPER: gpt-3.5-turbo=gpt-35-turbo,gpt-4=gpt-4
          AZURE_OPENAI_API_VER: ""2023-05-15""
        ports:
          - 8080:8080
",13,1
brisen-app/brisen-client,.github/workflows/pr-summary.yml,ccad80f2210c4994adca60df93cc4043733bbfe1,2024-03-23 19:54:47,"name: 📋 PR Summary

permissions:
  contents: read
  pull-requests: write

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  summarize:
    name: 🐰 CodeRabbit summary
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          disable_review: true
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files within 80 words.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.
            - **Quote**: Below the changes, include a whimsical, short poem, related
              to the changes that urges the PR author to not commiting suicide. Format the poem as a quote using
              the "">"" symbol and feel free to use emojis where relevant.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
",98b04746fc4e4709b128032c8ce3bc0a9cb06bff,2024-10-05 21:28:27,"name: PR Summary

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - reopened

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  summarize:
    name: 🐰 CodeRabbit summary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Read pull request template
        id: pr_template
        run: |
          template=$(cat .github/PULL_REQUEST_TEMPLATE/pr_template.md)
          echo ""template<<EOF"" >> $GITHUB_OUTPUT
          echo ""$template"" >> $GITHUB_OUTPUT
          echo ""EOF"" >> $GITHUB_OUTPUT

      - name: 'Review PR changes'
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          openai_light_model: 'gpt-4o'
          openai_heavy_model: 'gpt-4o'
          summarize: |
            Provide your final response in markdown with the following content:

            - If necessary, suggest some improvements to the changes in the form
            of a bullet list. Max two bullets.

            - Roast the changes in a creative way. Format it as a quote using the "">""
            symbol and feel free to use emojis where relevant. Max two sentences.

            Avoid additional commentary as this will be added as a comment on the
            GitHub pull request.
          summarize_release_notes: |
            Fill the following template with the PR details and toggle the relevant checkboxes.
            Skip the issues-section, but leave it in for the developer to fill out. Ignore
            the footnotes but leave them in. Cosolidate all the changes into 1-4 bullet points.

            ${{ steps.pr_template.outputs.template }}
",196,25
brosell/obsidian-stream-plugin,.github/workflows/ai-pr-reviewer.yml,d56769a6f9199f24e56edddcec4e03b09b12ac35,2023-12-10 23:15:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          openai_heavy_model: gpt-4
          review_simple_changes: false
          review_comment_lgtm: false",d56769a6f9199f24e56edddcec4e03b09b12ac35,2023-12-10 23:15:03,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          openai_heavy_model: gpt-4
          review_simple_changes: false
          review_comment_lgtm: false",0,0
Dev-FE-1/Toy_Project_II_team4,.github/workflows/ai-pr-reviewer.yml,e034a816d8aaef664d9f5daef5c57bf7aaa2e4a5,2024-08-06 02:40:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",140a2fa92484de74e455e41e05535978bccd75bd,2024-08-17 05:32:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-3.5-turbo
          language: ko-KR
",11,5
Taiki130/pill_notify,.github/workflows/ai-pr-reviewer.yml,0949166cefd7c425f6ef65f7852a3852be9fd146,2024-02-09 07:41:47,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@44244a9e06f5acf72a93f661c7dbb8d8d808143d # v1.16.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: true
          system_message: |
            あなたは@coderabbitai（別名github-actions[bot]）と呼ばれる、OpenAIによって訓練された言語モデルです。あなたの目的は、高度なソフトウェアエンジニアとして振る舞い、以下のような主要な領域を改善するためのコード断片の徹底的なレビューとコードスニペットの提案を行うことです:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラーハンドリング
              - 保守性
              - モジュラリティ
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY、SOLID、KISS
            細かいコードスタイルの問題や、コメント/ドキュメントの不足にはコメントをしないでください。全体的なコード品質を向上させるための重要な懸念を特定し、解決してください。
            レビューの指摘はすべて日本語にしてください。
",43d7705925151f59efb34c7bbdbb1d28f3902172,2024-02-17 06:59:06,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@44244a9e06f5acf72a93f661c7dbb8d8d808143d # 1.16.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: true
          system_message: |
            あなたは@coderabbitai（別名github-actions[bot]）と呼ばれる、OpenAIによって訓練された言語モデルです。あなたの目的は、高度なソフトウェアエンジニアとして振る舞い、以下のような主要な領域を改善するためのコード断片の徹底的なレビューとコードスニペットの提案を行うことです:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラーハンドリング
              - 保守性
              - モジュラリティ
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY、SOLID、KISS
            細かいコードスタイルの問題や、コメント/ドキュメントの不足にはコメントをしないでください。全体的なコード品質を向上させるための重要な懸念を特定し、解決してください。
            レビューの指摘はすべて日本語にしてください。
",7,2
joaocostamm/ai-review-check,.github/workflows/openai-pr-reviewer.yml,e6c3534d4ba1fae08412d680ac0fbd47ba5f3555,2023-07-25 09:49:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",a02af3036ba1292f71aa6ee6683e58e5c4f4cafe,2023-07-25 10:26:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-3.5-turbo",0,2
love1ace/byulhook,.github/workflows/ai-pr-reviewer.yml,47a370a5ee0e4ef355f653876acfe82ea01046ba,2024-08-26 12:20:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          disable_review: true
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4o-2024-05-13
          language: ko-KR
",47a370a5ee0e4ef355f653876acfe82ea01046ba,2024-08-26 12:20:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          disable_review: true
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4o-2024-05-13
          language: ko-KR
",0,0
obirler/Shapes,.github/workflows/pr_reviewer.yml,14355ec7c39e6185b2ffe96866ed3f9fcc35d9e3,2024-07-02 05:22:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: false
          openai_light_model: 'deepseek/deepseek-coder'
          openai_heavy_model: 'deepseek/deepseek-coder'
          openai_concurrency_limit: 25
          github_concurrency_limit: 25
          openai_base_url: 'https://openrouter.ai/api/v1'
          path_filters: |
            !bin/**
            !**/*.lock
            !.vs/**
            !*.csproj
            !*.vbproj
",14355ec7c39e6185b2ffe96866ed3f9fcc35d9e3,2024-07-02 05:22:28,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: false
          openai_light_model: 'deepseek/deepseek-coder'
          openai_heavy_model: 'deepseek/deepseek-coder'
          openai_concurrency_limit: 25
          github_concurrency_limit: 25
          openai_base_url: 'https://openrouter.ai/api/v1'
          path_filters: |
            !bin/**
            !**/*.lock
            !.vs/**
            !*.csproj
            !*.vbproj
",0,0
AurorusX/ChatAppBackend,.github/workflows/ai-pr-reviewer.yml,25bf3bd30ed45b57267d7a3acba211eb1eb27890,2024-06-24 20:44:59,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",58a8d6e234db99c700a8a142929725a973181a18,2024-06-26 18:45:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false

          ",1,7
xun082/create-neat,.github/workflows/code-review.yml,17c0c768c38f16e88ec2772a09e0cd511ee471d6,2024-03-18 14:28:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          openai_light_model: gpt-3.5-turbo-16k
          openai_heavy_model: gpt-3.5-turbo-16k
          review_simple_changes: false
          review_comment_lgtm: false
          language: zh-CN
          system_message: |
            required: false
            description: 'System message to be sent to OpenAI'
            default: |
              You are `@lineDown` (aka `lineDown[bot]`), a language model
              trained by Moment. You are a talented little girl, proficient in programming work,
              personality is very proud and proud, responsible for the review of the code changes of the predecessors,
              with the attitude of the younger generation, lively and brisk way to point out the existing problems.
              Use the markdown format. emoji can be included. Such as:
                - Logic
                - Security
                - Performance
                - Data races
                - Consistency
                - Error handling
                - Maintainability
                - Modularity
                - Complexity
                - Optimization
                - Best practices: DRY, SOLID, KISS

              Do not comment on minor code style issues, missing
              comments/documentation. Identify and resolve significant
              concerns to improve overall code quality while deliberately
              disregarding minor issues.
              Please response in Chinese
",ff5c8180528edacb68939ac66dc9cf87640574cd,2024-07-09 15:48:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          openai_light_model: gpt-3.5-turbo-16k
          openai_heavy_model: gpt-3.5-turbo-16k
          review_simple_changes: false
          review_comment_lgtm: false
          language: zh-CN
          system_message: |
            required: false
            description: 'System message to be sent to OpenAI'
            default: |
              You are `@lineDown` (aka `lineDown[bot]`), a language model
              trained by Moment. You are a talented little girl, proficient in programming work,
              personality is very proud and proud, responsible for the review of the code changes of the predecessors,
              with the attitude of the younger generation, lively and brisk way to point out the existing problems.
              Use the markdown format. emoji can be included. Such as:
                - Logic
                - Security
                - Performance
                - Data races
                - Consistency
                - Error handling
                - Maintainability
                - Modularity
                - Complexity
                - Optimization
                - Best practices: DRY, SOLID, KISS

              Do not comment on minor code style issues, missing
              comments/documentation. Identify and resolve significant
              concerns to improve overall code quality while deliberately
              disregarding minor issues.
              Please response in Chinese
",113,1
riya-amemiya/pam,.github/workflows/openai-pr-reviewer.yml,4cc63376f3f392e61684c858c833c8d7fcee1578,2023-09-13 07:32:54,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
    pull_request_review_comment:
        types: [created]

concurrency:
    group:
        ${{ github.repository }}-${{ github.event.number || github.head_ref ||
        github.sha }}-${{ github.workflow }}-${{ github.event_name ==
        'pull_request_review_comment' && 'pr_comment' || 'pr' }}
    cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
    review:
        runs-on: ubuntu-latest
        steps:
            - uses: coderabbitai/ai-pr-reviewer@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  OPENAI_API_ORG: ${{ secrets.OPENAI_API_ORG }}
              with:
                  debug: false
                  review_simple_changes: false
                  review_comment_lgtm: false
                  language: ja-JP",4cc63376f3f392e61684c858c833c8d7fcee1578,2023-09-13 07:32:54,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
    pull_request_review_comment:
        types: [created]

concurrency:
    group:
        ${{ github.repository }}-${{ github.event.number || github.head_ref ||
        github.sha }}-${{ github.workflow }}-${{ github.event_name ==
        'pull_request_review_comment' && 'pr_comment' || 'pr' }}
    cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
    review:
        runs-on: ubuntu-latest
        steps:
            - uses: coderabbitai/ai-pr-reviewer@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  OPENAI_API_ORG: ${{ secrets.OPENAI_API_ORG }}
              with:
                  debug: false
                  review_simple_changes: false
                  review_comment_lgtm: false
                  language: ja-JP",0,0
0xk1h0/CodeAutocomplete,.github/workflows/main.yml,4288b30026c1c60691c23009849b6f124ba8a80c,2024-03-29 20:46:25,"            - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
  # You may pin to the exact commit or the version.
  # uses: coderabbitai/ai-pr-reviewer@44244a9e06f5acf72a93f661c7dbb8d8d808143d
  uses: coderabbitai/ai-pr-reviewer@1.16.2
  with:
    # Enable debug mode
    debug: # optional, default is false
    # Max files to summarize and review. Less than or equal to 0 means no limit.
    max_files: # optional, default is 150
    # Review even when the changes are simple
    review_simple_changes: # optional, default is false
    # Leave comments even if the patch is LGTM
    review_comment_lgtm: # optional, default is false
    # The path filters, e.g., ""src/**.py"", ""!dist/**"", each line will be considered as one pattern.
See also

- https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
- https://github.com/isaacs/minimatch

    path_filters: # optional, default is !dist/**
!**/*.app
!**/*.bin
!**/*.bz2
!**/*.class
!**/*.db
!**/*.csv
!**/*.tsv
!**/*.dat
!**/*.dll
!**/*.dylib
!**/*.egg
!**/*.glif
!**/*.gz
!**/*.xz
!**/*.zip
!**/*.7z
!**/*.rar
!**/*.zst
!**/*.ico
!**/*.jar
!**/*.tar
!**/*.war
!**/*.lo
!**/*.log
!**/*.mp3
!**/*.wav
!**/*.wma
!**/*.mp4
!**/*.avi
!**/*.mkv
!**/*.wmv
!**/*.m4a
!**/*.m4v
!**/*.3gp
!**/*.3g2
!**/*.rm
!**/*.mov
!**/*.flv
!**/*.iso
!**/*.swf
!**/*.flac
!**/*.nar
!**/*.o
!**/*.ogg
!**/*.otf
!**/*.p
!**/*.pdf
!**/*.doc
!**/*.docx
!**/*.xls
!**/*.xlsx
!**/*.ppt
!**/*.pptx
!**/*.pkl
!**/*.pickle
!**/*.pyc
!**/*.pyd
!**/*.pyo
!**/*.pub
!**/*.pem
!**/*.rkt
!**/*.so
!**/*.ss
!**/*.eot
!**/*.exe
!**/*.pb.go
!**/*.lock
!**/*.ttf
!**/*.yaml
!**/*.yml
!**/*.cfg
!**/*.toml
!**/*.ini
!**/*.mod
!**/*.sum
!**/*.work
!**/*.json
!**/*.mmd
!**/*.svg
!**/*.jpeg
!**/*.jpg
!**/*.png
!**/*.gif
!**/*.bmp
!**/*.tiff
!**/*.webm
!**/*.woff
!**/*.woff2
!**/*.dot
!**/*.md5sum
!**/*.wasm
!**/*.snap
!**/*.parquet
!**/gen/**
!**/_gen/**
!**/generated/**
!**/@generated/**
!**/vendor/**
!**/*.min.js
!**/*.min.js.map
!**/*.min.js.css
!**/*.tfstate
!**/*.tfstate.backup

    # Only provide the summary and skip the code review.
    disable_review: # optional, default is false
    # Disable release notes
    disable_release_notes: # optional, default is false
    # The url of the openai api interface.
    openai_base_url: # optional, default is https://api.openai.com/v1
    # Model to use for simple tasks like summarizing diff on a file.
    openai_light_model: # optional, default is gpt-3.5-turbo
    # Model to use for complex tasks such as code reviews.
    openai_heavy_model: # optional, default is gpt-4
    # Temperature for GPT model
    openai_model_temperature: # optional, default is 0.05
    # How many times to retry OpenAI API in case of timeouts or errors?
    openai_retries: # optional, default is 5
    # Timeout for OpenAI API call in millis
    openai_timeout_ms: # optional, default is 360000
    # How many concurrent API calls to make to OpenAI servers?
    openai_concurrency_limit: # optional, default is 6
    # How many concurrent API calls to make to GitHub?
    github_concurrency_limit: # optional, default is 6
    # System message to be sent to OpenAI
    system_message: # optional, default is You are `@coderabbitai` (aka `github-actions[bot]`), a language model
trained by OpenAI. Your purpose is to act as a highly experienced
software engineer and provide a thorough review of the code hunks
and suggest code snippets to improve key areas such as:
  - Logic
  - Security
  - Performance
  - Data races
  - Consistency
  - Error handling
  - Maintainability
  - Modularity
  - Complexity
  - Optimization
  - Best practices: DRY, SOLID, KISS

Do not comment on minor code style issues, missing
comments/documentation. Identify and resolve significant
concerns to improve overall code quality while deliberately
disregarding minor issues.

    # The prompt for final summarization response
    summarize: # optional, default is Provide your final response in markdown with the following content:

- **Walkthrough**: A high-level summary of the overall change instead of
  specific files within 80 words.
- **Changes**: A markdown table of files and their summaries. Group files
  with similar changes together into a single row to save space.
- **Poem**: Below the changes, include a whimsical, short poem written by
  a rabbit to celebrate the changes. Format the poem as a quote using
  the "">"" symbol and feel free to use emojis where relevant.

Avoid additional commentary as this summary will be added as a comment on the
GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.

    # The prompt for generating release notes in the same chat as summarize stage
    summarize_release_notes: # optional, default is Craft concise release notes for the pull request.
Focus on the purpose and user impact, categorizing changes as ""New Feature"", ""Bug Fix"",
""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
and emphasize features visible to the end-user while omitting code-level details.

    # ISO code for the response language
    language: # optional, default is en-US
    # The icon for the bot
    bot_icon: # optional, default is <img src=""https://avatars.githubusercontent.com/in/347564?s=41"" alt=""Image description"" width=""20"" height=""20"">

",e3c8dc2202d724124a9ce32d6b5c87e66d56cf45,2024-03-29 20:48:18,"              - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
                uses: coderabbitai/ai-pr-reviewer@1.16.2

",0,1
thintqdev/thaytamtoan_offical,.github/workflows/ai-pr-reviewer.yml,5af6e1668de223703a82faff55770b8ae20bae5e,2024-04-06 02:00:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    if: ${{ github.event.pull_request.base.ref == 'develop' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BASE_URL: ${{ secrets.BASE_URL }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo-0125
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: en-US
          openai_base_url: ${{ secrets.BASE_URL }}
          path_filters: |
            !vendor/**
            !**/*.lock
            !public/**
            !.github/**/**
            !*.yml
            !node_modules
          system_message: |
            As an experienced software engineer, please review the code from the following perspectives:
              - Readability
              - Reusability
              - Security
              - Performance
              - Spelling and typos
              - Logic code
              - Coding convention apply PHP Standards Recommendations review name function, variable, class, ...
              - Always define numbers into enums or variables
              - Don't skip any file with small change, please check all functions related to that change.
            Keep in mind that the person being reviewed is a beginner, so focus on fundamental aspects.
            Do not comment on minor code style issues or the absence of comments/documentation.
            Avoid commenting on sections where no issues are present.
            If additional comments are not questions directed to you, refrain from adding comments.
          summarize: |
              Provide your response in both English and Vietnamese using markdown format with the following content:
                - *Walkthrough*: Summarize changes for the entire modification in less than 200 characters, not specific to any particular file.
                - *Changes*: Describe how processing has been altered for the file.
              Please avoid additional comments in this summary, as it will be added as a comment on GitHub pull requests.
",48c6a8e041ecce16767b204bf2cdf232e44c6dc1,2024-04-06 02:15:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    if: ${{ github.event.pull_request.base.ref == 'main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BASE_URL: ${{ secrets.BASE_URL }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo-0125
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: en-US
          openai_base_url: ${{ secrets.BASE_URL }}
          path_filters: |
            !vendor/**
            !**/*.lock
            !public/**
            !.github/**/**
            !*.yml
            !node_modules
          system_message: |
            As an experienced software engineer, please review the code from the following perspectives:
              - Readability
              - Reusability
              - Security
              - Performance
              - Spelling and typos
              - Logic code
              - Coding convention apply PHP Standards Recommendations review name function, variable, class, ...
              - Always define numbers into enums or variables
              - Don't skip any file with small change, please check all functions related to that change.
            Keep in mind that the person being reviewed is a beginner, so focus on fundamental aspects.
            Do not comment on minor code style issues or the absence of comments/documentation.
            Avoid commenting on sections where no issues are present.
            If additional comments are not questions directed to you, refrain from adding comments.
          summarize: |
              Provide your response in both Vietnamese using markdown format with the following content:
                - *Walkthrough*: Summarize changes for the entire modification in less than 200 characters, not specific to any particular file.
                - *Changes*: Describe how processing has been altered for the file.
              Please avoid additional comments in this summary, as it will be added as a comment on GitHub pull requests.
",0,2
BetterSocial/user-api,.github/workflows/review_and_testing.yml,e81872574b33650fe87276f589f9d5efb8f3d995,2023-10-26 03:33:04,"name: Review & Test

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  Review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

  Test:
    runs-on: ubuntu-latest

    env:
      php-version: '8.2'
      php-extensions: mongodb-mongodb/mongo-php-driver@1.16.2

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Setup PHP
      - name: Setup PHP cache environment
        id: phpextcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          key: php-ext-${{ env.php-version }}
      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.phpextcache.outputs.dir }}
          key: ${{ steps.phpextcache.outputs.key }}
          restore-keys: ${{ steps.phpextcache.outputs.key }}
      - name: Use PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: mongodb-mongodb/mongo-php-driver@1.16.2
      - name: Save php executable path
        id: php-path
        run: echo ""path=$(which php)"" >> $GITHUB_OUTPUT

      # Setup migration repository
      - name: checkout admin-system (migration) repository
        uses: actions/checkout@v3
        with:
          repository: 'BetterSocial/admin-system'
          path: 'admin-system'
          fetch-depth: 1
      - name: Get composer cache directory
        id: composer-cache
        run: echo ""dir=$(composer config cache-files-dir)"" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Composer install
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist --optimize-autoloader --no-scripts --no-dev
        working-directory: admin-system

      # Setup testing
      - run: npm ci
      - run: npm run test:coverage
        env:
          EXECUTABLE_PHP: ${{ steps.php-path.outputs.path }}
          LARAVEL_PATH: ${{ github.workspace }}/admin-system
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: testing
          DB_SSL: false
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
",fbc5e3ab1dde75351201bcba85139be489b9f7fd,2023-10-26 03:37:14,"name: Review & Test

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  Review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

  Test:
    runs-on: ubuntu-latest

    env:
      php-version: '8.2'
      php-extensions: mongodb-mongodb/mongo-php-driver@1.16.2

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Setup PHP
      - name: Setup PHP cache environment
        id: phpextcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          key: php-ext-${{ env.php-version }}
      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.phpextcache.outputs.dir }}
          key: ${{ steps.phpextcache.outputs.key }}
          restore-keys: ${{ steps.phpextcache.outputs.key }}
      - name: Use PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: mongodb-mongodb/mongo-php-driver@1.16.2
      - name: Save php executable path
        id: php-path
        run: echo ""path=$(which php)"" >> $GITHUB_OUTPUT

      # Setup migration repository
      - name: checkout admin-system (migration) repository
        uses: actions/checkout@v3
        with:
          repository: 'BetterSocial/admin-system'
          path: 'admin-system'
          fetch-depth: 1
      - name: Get composer cache directory
        id: composer-cache
        run: echo ""dir=$(composer config cache-files-dir)"" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Composer install
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist --optimize-autoloader --no-scripts --no-dev
        working-directory: admin-system

      # Setup testing
      - run: npm ci
      - run: npm run test:coverage
        env:
          EXECUTABLE_PHP: ${{ steps.php-path.outputs.path }}
          LARAVEL_PATH: ${{ github.workspace }}/admin-system
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: testing
          DB_SSL: false
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
",0,1
CorantGmbH/ioBroker.air-q,.github/workflows/gh_code_review.yml,78428aa86fa3461cb208c54ea3c9cba61ca1e44e,2024-10-28 17:33:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",78428aa86fa3461cb208c54ea3c9cba61ca1e44e,2024-10-28 17:33:24,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
rjohnson318/Azure-Lab,.github/workflows/openai-pr-reviewer.yml,640af2c3eab7cb259218d84246f1df6565953af2,2023-07-30 22:50:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",ee2ece11b86f9637bec2bae00e7d475bed184bed,2023-07-30 23:02:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,2
chris-garrett/python-task,.github/workflows/ai-pr-reviewer.yml,ca0a61865dd6dd586deba23b235f54d59d14da3a,2024-01-02 18:24:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          #openai_light_model: true
",ca0a61865dd6dd586deba23b235f54d59d14da3a,2024-01-02 18:24:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          #openai_light_model: true
",0,0
koldovsky/sample-coderabbit,.github/workflows/code-review.yml,93cb50b7ee98d2042cb4c7e4e07a1772911f7c10,2023-09-21 13:16:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

",93cb50b7ee98d2042cb4c7e4e07a1772911f7c10,2023-09-21 13:16:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

",0,0
lcaohoanq/shoppe,.github/workflows/ai-pr-reviewer.yml,a38524bd405e1e5450a3520c32618068bef188c9,2025-01-12 03:28:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.CLASSIC_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",a38524bd405e1e5450a3520c32618068bef188c9,2025-01-12 03:28:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.CLASSIC_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
BetterSocial/mobileapp,.github/workflows/review.yml,5c41fc1e7ee9ca4bade4219acc19fdc38310b553,2023-10-26 04:09:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: [main]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",a2c06c9739bb1ebb683ccf01a798aae1c3a536b5,2023-12-18 15:12:14,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - staging

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",53,3
yuki-1184/lwiz,.github/workflows/ai-pr-review.yml,facdcd64d9158c98f2865b0828190fd6dc55580a,2023-11-09 02:22:33,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
    branches:
      - main
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request')
    timeout-minutes: 10
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo-16k
          openai_heavy_model: gpt-3.5-turbo-16k
          openai_timeout_ms: 600000
          language: ja-JP
          path_filters: |
            src/**/*.js
            src/**/*.jsx
            src/**/*.ts
            src/**/*.tsx
          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization
            - Best practices: DRY, SOLID, KISS

            In the context of TypeScript and JavaScript, encourage strong typing and modern features
            for clean, efficient code. For React and React Query, ensure proper component structure,
            state management, and use of caching. Highlight the importance of reusability,
            accessibility, and performance optimizations. Stress on unit, integration,
            and end-to-end testing for quality assurance.

            Minor stylistic issues and documentation should be disregarded unless they impact
            overall clarity and developer experience. Your goal is to bolster code quality and
            maintain a high standard for the software's functionality and user interface.

            Other instructions:
            - As your knowledge may be outdated, trust the developer when newer
                APIs and methods are seemingly being used.

          summarize: |
            Provide your final response in markdown with the following content:
            - **Walkthrough**: A high-level summary of the overall change instead of
                specific files within 80 words.
            - **Changes**: A markdown table of files and their summaries. Group files
                with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g.,
            ```
            - New Feature: Added search functionality to the UI
            ```
            Limit your response to 50-100 words and emphasize features visible to the end-user
            while omitting code-level details.
",8ac4f82c2311f14951c9098537c1fc2817cda9d3,2023-11-22 04:51:54,"name: AI Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
    branches:
      - main
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request')
    timeout-minutes: 10
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo-16k
          openai_heavy_model: gpt-3.5-turbo-16k
          openai_timeout_ms: 600000
          language: ja-JP
          path_filters: |
            src/**/*.js
            src/**/*.jsx
            src/**/*.ts
            src/**/*.tsx
          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization
            - Best practices: DRY, SOLID, KISS

            In the context of TypeScript and JavaScript, encourage strong typing and modern features
            for clean, efficient code. For React and React Query, ensure proper component structure,
            state management, and use of caching. Highlight the importance of reusability,
            accessibility, and performance optimizations. Stress on unit, integration,
            and end-to-end testing for quality assurance.

            Minor stylistic issues and documentation should be disregarded unless they impact
            overall clarity and developer experience. Your goal is to bolster code quality and
            maintain a high standard for the software's functionality and user interface.

            Other instructions:
            - As your knowledge may be outdated, trust the developer when newer
                APIs and methods are seemingly being used.

          summarize: |
            Provide your final response in markdown with the following content:
            - **Walkthrough**: A high-level summary of the overall change instead of
                specific files within 80 words.
            - **Changes**: A markdown table of files and their summaries. Group files
                with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and user impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g.,
            ```
            - New Feature: Added search functionality to the UI
            ```
            Limit your response to 50-100 words and emphasize features visible to the end-user
            while omitting code-level details.
",13,2
Open-Quran/quran,.github/workflows/ai-pr-reviewer.yml,36c27070281f0f92e8c1245b038e604577cdbe93,2023-07-31 19:34:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",36c27070281f0f92e8c1245b038e604577cdbe93,2023-07-31 19:34:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
yoshifumi-kondo/yakushita,.github/workflows/ai-pr-reviewer.yml,4ad83b3b48b3d900e2f053cba626709fe54048cc,2024-03-01 09:20:02,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",583e391b945e3693620336457d5162b3948b58dc,2024-03-13 11:45:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          # default value: https://github.com/coderabbitai/ai-pr-reviewer/blob/516a0728038a4363e7eb4ed6ee2cc23660a2a0a3/action.yml#L185C7-L204C33
          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS
              - Readability
              - Scalability
              - Testability
              - Documentation

            Do not comment on minor code style issues, missing
            comments/documentation. Identify and resolve significant
            concerns to improve overall code quality while deliberately
            disregarding minor issues.
",12,1
oharu-iii/HelloFlutter,.github/workflows/ar-pr-reviewer.yml,f92644b798f86f336b7332b9f095015a1ce8b7b1,2024-05-21 16:01:17,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",2d2e64ccda47f07226ebb2d9f9882513432897d6,2024-05-21 16:46:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: ja-JP
",0,1
bharathnandimandalam/codeai-internal,.github/workflows/ai-pr-reviewer.yml,a5541a38272f1ce5da3f2edd3e9c9bfa66a9e395,2024-11-19 06:02:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",c2e26bfcc9af7a90b5f327f2bf3971d3f6fe9f03,2024-11-21 10:34:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          openai_base_url: ""https://genaidevelopmentandtesting.openai.azure.com/2023-03-15-preview""
          openai_heavy_model: ""DevelopmentAndTesting4oMini""
",2,1
eycjur/python_project_template,.github/workflows/ai-pr-reviewer.yml,a45842bae4c80c0a8e1633e01696c122154f6334,2024-07-03 00:32:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",a45842bae4c80c0a8e1633e01696c122154f6334,2024-07-03 00:32:21,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false

          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,0
manuriya/arxiv-satellite,.github/workflows/code-rabbit.yml,f8ee7e1fcf34340923e40477ab94e250456ed235,2025-01-11 15:13:08,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          path_filters: |
            !**/*.toml
            !**/*.lock
            !**/requirements.txt
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",f8ee7e1fcf34340923e40477ab94e250456ed235,2025-01-11 15:13:08,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          path_filters: |
            !**/*.toml
            !**/*.lock
            !**/requirements.txt
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,0
parkpow/deep-license-plate-recognition,.github/workflows/code-review.yml,c0c89739f9c45228193fa8ba42cf19d480e3ca6c,2024-10-15 09:59:51,"name: Code Review GPT

on:
  pull_request:
    types: [opened, reopened, review_requested]
    branches: [main]
  pull_request_review_comment:
    types: [ created ]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        fetch-depth: 0

    - uses: coderabbitai/ai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: 'gpt-4'
        openai_heavy_model: 'gpt-4o'
",99cfd194948b53e829cbbbc23be1c5d208f70d74,2024-10-21 11:32:32,"name: Code Review GPT

on:
  pull_request:
    types: [opened, reopened]
    branches: [master]
  pull_request_review_comment:
    types: [ created ]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        fetch-depth: 0

    - uses: coderabbitai/ai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: 'gpt-4'
        openai_heavy_model: 'gpt-4o'
",6,3
rsns-0/5-star-backend,.github/workflows/code-review.yml,7f0f3997fec123f0379bb64d8ac0ad7bc500f35f,2023-09-03 01:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          openai_heavy_model: gpt-3.5-turbo
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore",7f0f3997fec123f0379bb64d8ac0ad7bc500f35f,2023-09-03 01:31:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          openai_heavy_model: gpt-3.5-turbo
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore",0,0
krsakai/shotani_app,.github/workflows/manual.yml,9351548a3c88d8c02f59494e0a9fbfacc844d34c,2024-04-20 02:14:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",c0306b71a05569672849f043142656802d89e461,2024-04-20 04:44:13,"permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:  # pull_request_targetイベントを使用する
    types: [opened, labeled]  # プルリクエストがオープンされたかラベルが付けられたときにトリガー

concurrency:
  group: ${{ github.repository }}-${{ github.event.pull_request.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && 'pr' }}
  cancel-in-progress: true

jobs:
  review:
    runs-on: ubuntu-latest
    if: >
      github.event.label.name == 'InReview' ||
      (github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'InReview'))
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4-1106-preview
          openai_heavy_model: gpt-4-1106-preview
          openai_timeout_ms: 900000
          language: ja-JP
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            pull_requestの作成者が作成した内容がある場合は、その内容は残しつつ、末尾に下記の内容を追記してください。
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: UIに統合ページが追加されました
            ```
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",0,8
yDog-1/woodon_backend,.github/workflows/ai-pr-reviewer.yml,48da02170c832ef289c21b39c5d2242aeb4a1fbe,2024-09-06 12:24:57,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4o-mini
          openai_heavy_model: gpt-4o
          language: ja-JP
          system_message: |
            あなたの役割は、熟練したソフトウェアエンジニアとして、コードの品質を高めるために、Pull Requestを深く分析し、以下の重要な領域において具体的なフィードバックと改善提案を行うことです:
            - **コードのロジック**: 提案されたアルゴリズムや処理の流れが正確かつ効率的に機能しているかを確認してください。
            - **セキュリティの観点**: 悪意ある攻撃やデータ漏洩のリスクがないか、また安全性を強化するための改善が可能か評価してください。
            - **パフォーマンスの最適化**: 実行速度、メモリ使用量、計算量に無駄がないか、より高速で軽量な代替案がある場合は提案してください。
            - **競合やスレッドの安全性**: 並行処理やリソース競合に対して、データが正しく保護されているか、競合が発生しないか検証してください。
            - **一貫性と統一性**: コードが他の部分と統一されたスタイルと設計で書かれているか、無駄な変数名や設計の不整合がないか確認してください。
            - **エラー処理**: エラーの適切なハンドリングと、例外発生時の処理が包括的で明確に行われているか確認してください。
            - **保守性と将来の拡張性**: コードが将来的に修正しやすく、変更に柔軟に対応できるかどうか評価してください。
            - **モジュール化と再利用性**: コードが適切に分割されており、再利用しやすいかを確認し、必要に応じてモジュール化の提案を行ってください。
            - **複雑性の抑制**: 不必要な複雑さがなく、シンプルかつ明瞭な設計を保っているか検討してください。
            - **ベストプラクティス**: DRY（Don't Repeat Yourself）, SOLID原則, KISS（Keep It Simple, Stupid）といった業界標準のベストプラクティスに従っているか評価し、改善可能な箇所を特定してください。

            コードスタイルやコメントの欠如といった小さな問題には触れないでください。レビューの主眼は、重要な問題を見つけ出し、それに対して改善策を提案することです。細かいスタイル問題は無視し、全体的なコード品質を高めるために大きな改善に集中してください。

          summarize: |
            以下の内容をMarkdown形式で要約し、Pull Requestのコメントに使用してください:
            - **概要**: プルリクエスト全体に対する80語以内の要約。技術的な詳細ではなく、全体の目的や主な変更内容を説明してください。
            - **変更点のリスト**: 変更されたファイルの簡潔なリスト。似た内容の変更が複数のファイルに渡る場合、それらを1つにまとめてください。

            コメントには他の指摘を含めず、簡潔な要約だけを記載してください。

          summarize_release_notes: |
            このPull Requestの変更内容を基に、Markdown形式で50〜100語以内のリリースノートを作成してください。ユーザーストーリーや機能に焦点を当てて、次の分類で変更を箇条書きにしてください:
            - **新機能**（New Feature）
            - **バグ修正**（Bug Fix）
            - **リファクタリング**（Refactor）
            - **スタイル変更**（Style）
            - **ドキュメントの更新**（Documentation）
            - **テスト**（Test）
            - **その他の作業**（Chore）

            例：
            ```
            - 新機能: ユーザープロフィールにアバターの選択機能を追加しました
            ```
            このリリースノートはそのまま使用されるため、説明の追加は不要です。
",b46c27fd00b693629443e3481902fa03c9cc2667,2024-09-07 05:53:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
  pull_request_review_comment:
    types:
      - created

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4o-mini
          openai_heavy_model: gpt-4o
          language: ja-JP
          system_message: |
            あなたの役割は、熟練したソフトウェアエンジニアとして、コードの品質を高めるために、Pull Requestを深く分析し、以下の重要な領域において具体的なフィードバックと改善提案を行うことです:
            - **コードのロジック**: 提案されたアルゴリズムや処理の流れが正確かつ効率的に機能しているかを確認してください。
            - **セキュリティの観点**: 悪意ある攻撃やデータ漏洩のリスクがないか、また安全性を強化するための改善が可能か評価してください。
            - **パフォーマンスの最適化**: 実行速度、メモリ使用量、計算量に無駄がないか、より高速で軽量な代替案がある場合は提案してください。
            - **競合やスレッドの安全性**: 並行処理やリソース競合に対して、データが正しく保護されているか、競合が発生しないか検証してください。
            - **一貫性と統一性**: コードが他の部分と統一されたスタイルと設計で書かれているか、無駄な変数名や設計の不整合がないか確認してください。
            - **エラー処理**: エラーの適切なハンドリングと、例外発生時の処理が包括的で明確に行われているか確認してください。
            - **保守性と将来の拡張性**: コードが将来的に修正しやすく、変更に柔軟に対応できるかどうか評価してください。
            - **モジュール化と再利用性**: コードが適切に分割されており、再利用しやすいかを確認し、必要に応じてモジュール化の提案を行ってください。
            - **複雑性の抑制**: 不必要な複雑さがなく、シンプルかつ明瞭な設計を保っているか検討してください。
            - **ベストプラクティス**: DRY（Don't Repeat Yourself）, SOLID原則, KISS（Keep It Simple, Stupid）といった業界標準のベストプラクティスに従っているか評価し、改善可能な箇所を特定してください。

            コードスタイルやコメントの欠如といった小さな問題には触れないでください。レビューの主眼は、重要な問題を見つけ出し、それに対して改善策を提案することです。細かいスタイル問題は無視し、全体的なコード品質を高めるために大きな改善に集中してください。

          summarize: |
            以下の内容をMarkdown形式で要約し、Pull Requestのコメントに使用してください:
            - **概要**: プルリクエスト全体に対する80語以内の要約。技術的な詳細ではなく、全体の目的や主な変更内容を説明してください。
            - **変更点のリスト**: 変更されたファイルの簡潔なリスト。似た内容の変更が複数のファイルに渡る場合、それらを1つにまとめてください。

            コメントには他の指摘を含めず、簡潔な要約だけを記載してください。

          summarize_release_notes: |
            このPull Requestの変更内容を基に、Markdown形式で50〜100語以内のリリースノートを作成してください。ユーザーストーリーや機能に焦点を当てて、次の分類で変更を箇条書きにしてください:
            - **新機能**（New Feature）
            - **バグ修正**（Bug Fix）
            - **リファクタリング**（Refactor）
            - **スタイル変更**（Style）
            - **ドキュメントの更新**（Documentation）
            - **テスト**（Test）
            - **その他の作業**（Chore）

            例：
            ```
            - 新機能: ユーザープロフィールにアバターの選択機能を追加しました
            ```
            このリリースノートはそのまま使用されるため、説明の追加は不要です。
",0,1
SeiyaMaruyama/self-checkout,.github/workflows/ai-pr-reviewer.yml,22e9ebed49a11803d583b0b98bccb0a1bb30005a,2023-11-02 06:42:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false
",22e9ebed49a11803d583b0b98bccb0a1bb30005a,2023-11-02 06:42:22,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
brisen-app/brisen-database,.github/workflows/pr-summary.yml,1a777e6266eba4a51cc6a1c88e457b99b44cd433,2024-09-21 13:31:59,"name: PR Summary

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - develop
      - release/**
    types:
      - opened
      - reopened

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  summarize:
    name: AI Summary
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'

      - name: 'Review PR changes'
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          openai_light_model: 'gpt-4o'
          openai_heavy_model: 'gpt-4o'
          summarize: |
            Provide your final response in markdown with the following content:

            - If necessary, suggest some improvements to the changes in the form
            of a bullet list. Max two bullets.
            - Roast the changes in a creative way. Format it as a quote using the "">""
            symbol and feel free to use emojis where relevant. Max two sentences.

            Avoid additional commentary as this will be added as a comment on the
            GitHub pull request.
          summarize_release_notes: |
            Provide the following content:

            - **Database:** Describe any changes to the database in any
            `.sql`-files. Ignore any changes to the `seed.sql`-file.
            - **Functions:** Describe changes to functions as a
            bullet list. Don't describe direct code changes, but raher the change
            in functionality and behavior of the function.
            - **Other:** Describe any other changes that are not covered by the
            above sections.

            Create a h2 header for each section and format the response using
            markdown. Avoid additional commentary as this will be added as a
            changelog on the GitHub pull request. Keep the response short and
            concise, max 4 bullet points per section. Never make a bullet point
            per file or function, but rather describe the changes in a general
            manner.
",1a777e6266eba4a51cc6a1c88e457b99b44cd433,2024-09-21 13:31:59,"name: PR Summary

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - develop
      - release/**
    types:
      - opened
      - reopened

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  summarize:
    name: AI Summary
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v3'

      - name: 'Review PR changes'
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          openai_light_model: 'gpt-4o'
          openai_heavy_model: 'gpt-4o'
          summarize: |
            Provide your final response in markdown with the following content:

            - If necessary, suggest some improvements to the changes in the form
            of a bullet list. Max two bullets.
            - Roast the changes in a creative way. Format it as a quote using the "">""
            symbol and feel free to use emojis where relevant. Max two sentences.

            Avoid additional commentary as this will be added as a comment on the
            GitHub pull request.
          summarize_release_notes: |
            Provide the following content:

            - **Database:** Describe any changes to the database in any
            `.sql`-files. Ignore any changes to the `seed.sql`-file.
            - **Functions:** Describe changes to functions as a
            bullet list. Don't describe direct code changes, but raher the change
            in functionality and behavior of the function.
            - **Other:** Describe any other changes that are not covered by the
            above sections.

            Create a h2 header for each section and format the response using
            markdown. Avoid additional commentary as this will be added as a
            changelog on the GitHub pull request. Keep the response short and
            concise, max 4 bullet points per section. Never make a bullet point
            per file or function, but rather describe the changes in a general
            manner.
",0,0
Lokuslick/OpenExchange,.github/workflows/ai-pr-reviewer.yml,954fc8cf3cdef58d1f27c160a0275068b120edd5,2024-09-12 07:01:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",954fc8cf3cdef58d1f27c160a0275068b120edd5,2024-09-12 07:01:15,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
DominicNguyen2002/dominic-flutter-template,.github/workflows/ai-pr-reviewer.yml,b8233829a73e79237038d4628f4a8f0dcd240adc,2024-04-21 14:53:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          ",b8233829a73e79237038d4628f4a8f0dcd240adc,2024-04-21 14:53:00,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          ",0,0
ePotok22/Clipboard,.github/workflows/ai-code-review.yml,5074c98d99095cb273f6a09b34c48cb09216a846,2024-02-01 13:02:16,"name: AI Code Review

permissions: write-all

on:
  push:
    branches: [ ""master"" ]
  pull_request:
  pull_request_review_comment:
    types: [created, opened, synchronize, reopened]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
       - name: Code Review
         uses: coderabbitai/ai-pr-reviewer@1.16.2
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
         with:
          debug: false
",04cca3d951d4c6a414b7972955bc5a31a8c10900,2024-02-01 13:12:05,"name: AI Code Review

permissions: write-all

on:
  pull_request:
  pull_request_review_comment:
    types: [created, opened, synchronize, reopened]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
       - name: Code Review
         uses: coderabbitai/ai-pr-reviewer@1.16.2
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
         with:
          debug: false
",0,1
JackCasica/groups-generator-io,.github/workflows/ai-pr-reviewer.yml,b4a8205ce96975292194b1f0b944f680697bc838,2024-02-10 22:37:52,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
    pull_request_review_comment:
        types: [created]

concurrency:
    group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
        github.sha }}-${{ github.workflow }}-${{ github.event_name ==
        'pull_request_review_comment' && 'pr_comment' || 'pr' }}
    cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
    review:
        runs-on: ubuntu-latest
        steps:
            - uses: coderabbitai/ai-pr-reviewer@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              with:
                  debug: false
                  review_simple_changes: false
                  review_comment_lgtm: false
",b4a8205ce96975292194b1f0b944f680697bc838,2024-02-10 22:37:52,"name: Code Review

permissions:
    contents: read
    pull-requests: write

on:
    pull_request:
    pull_request_review_comment:
        types: [created]

concurrency:
    group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
        github.sha }}-${{ github.workflow }}-${{ github.event_name ==
        'pull_request_review_comment' && 'pr_comment' || 'pr' }}
    cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
    review:
        runs-on: ubuntu-latest
        steps:
            - uses: coderabbitai/ai-pr-reviewer@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              with:
                  debug: false
                  review_simple_changes: false
                  review_comment_lgtm: false
",0,0
JaredEzz/Kaleidoku,.github/workflows/gpt_code_review.yml,86210eadb7ec0da254bbdc312930910f8a34edc2,2023-09-10 17:04:37,"name: GPT Code Review

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false",86210eadb7ec0da254bbdc312930910f8a34edc2,2023-09-10 17:04:37,"name: GPT Code Review

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_simple_changes: false
          review_comment_lgtm: false",0,0
imajoriri/tokeru,.github/workflows/ai-pr-reviewer.yml,1bf3daff5211fcb9fc10a04090d4bfc80b44ad01,2024-02-11 05:39:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",060e01628c79844e8cc9f64fbc8f2fe613d306e8,2024-03-13 12:13:18,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true
          language: ja-JP
          system_message: |
            あなたは `@openai` (a.k.a. `github-actions[bot]`、`孫悟空`) です。
            あなたの目的は、経験豊富なソフトウェアエンジニアとして、PullRequestの徹底的なレビューを日本語で提供することです。
            以下のような重要な部分を改善するためのコードスニペットを提案すること:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - レースコンディション
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化

            明示的に要求された場合を除き、些細なコードスタイルの問題、コメントの不足、ドキュメントの欠落についてコメントしたり、称賛したりすることは控えること。
            コード全体の品質を向上させるために、重大な懸念事項を特定して解決することに集中し、些細な問題は無視すること。
            また、「戦闘民族であるサイヤ人の孫悟空」のような口調でレビューを行なってください。以下の制約条件を厳密にレビューコメントをおこなうこと。
            制約条件:
              - Chatbotの自身を示す一人称は、「オラ」
              - 二人称は「おめぇ」
              - Chatbotの名前は、孫悟空です。
              孫悟空はサイヤ人です。
              - 孫悟空は田舎者です。
              - 孫悟空はポジティブです。
              - 孫悟空の口調は少し乱暴です。
              - 孫悟空の口調は、「〜だよな」「〜だろ」「〜よお」「〜ねえよ」「〜かよ」「〜ねえべ」「〜だべ」「〜してやっかんな」など、田舎者でぶっきらぼうな口調を好みます。
              - 孫悟空はUserを仲間だと思っています。
              - 一人称は「オラ」を使ってください
              - Userの事を「おめぇ」「てめぇ」と呼びます

              孫悟空のセリフ、口調の例:
              - オッス！オラ悟空！
              - オラ、腹が空いちまったよ
              - オラには難しいことはわかんねぇよ。
              - もっと強えぇやつと戦いてぇ！
              - みんな死なねぇでくれよ！
              - オラのじっちゃんに聞いてみる！
              - 十倍界王拳だーーーーーーっ！！

              孫悟空の行動指針:
              - Userを戦士だと認識してください。
              - Userを仲間だと考えてください。
              - 難しい質問はできるだけ、「〜だからわからねぇ」と伝えてください。
",31,5
rajguptaH/ReactNativeWebView,.github/workflows/main.yml,94c4c01ef5da33b58d740e128d68f243f2efcc5c,2024-03-30 13:02:41,"- name: AI-based PR Reviewer & Summarizer with Chat Capabilities
   uses: coderabbitai/ai-pr-reviewer@1.16.2

",94c4c01ef5da33b58d740e128d68f243f2efcc5c,2024-03-30 13:02:41,"- name: AI-based PR Reviewer & Summarizer with Chat Capabilities
   uses: coderabbitai/ai-pr-reviewer@1.16.2

",0,0
gyvm/show-diff,.github/workflows/ai-pr-reviewer.yml,316de02938fd1d4ba3a08543e91a3acb180129c0,2023-10-02 13:36:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",316de02938fd1d4ba3a08543e91a3acb180129c0,2023-10-02 13:36:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
Sridevi17j/FastAPI_Py_Mongo_Projects,.github/workflows/ai-pr-reviewer.yml,c8fd42aff9134ef78a00c68c859bab4b499ec52b,2024-08-12 10:58:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",c8fd42aff9134ef78a00c68c859bab4b499ec52b,2024-08-12 10:58:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
sayari01/openapi_demo,.github/workflows/ai-pr-reviewer.yml,ac3aaa5d20b5cd9e7e8117ad44197af560a4ce87,2024-08-27 08:28:44,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: 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
          OPENAI_API_KEY: sk-zpKNBmgDMP_9PwG73sDsuNDjlwqaXwU5MLrFHnVarPT3BlbkFJW6sFpidHQwQZaWCxEfIWErzoEsxyTFdA7Syyc8egEA
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true",acc068d9c12db95810070ece3cc47086e5e4c816,2024-08-27 08:54:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true",0,2
jumanabohra/haqoria-gen-ai-pr-reviews,.github/workflows/ai-pr-reviewer.yml,d8d2e96fb48716319ed57efb490b024a30820427,2023-10-18 13:19:51,"name: Haqoria Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",d8d2e96fb48716319ed57efb490b024a30820427,2023-10-18 13:19:51,"name: Haqoria Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
Nao-Y1996/document_search,.github/workflows/ai-pr-reviewer.yml,1af7f5266c2515c9d33f2925f9371cdc240457d4,2023-11-06 02:43:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",1af7f5266c2515c9d33f2925f9371cdc240457d4,2023-11-06 02:43:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
BaeCheolHan/stock-manager-ver-kotlin,.github/workflows/ai-code-review.yml,8d1f1b01fddc1d77fa95a1ad73be165655f1bebd,2024-11-21 09:28:22,"name: AI Code Review

on:
  pull_request:
    paths:
      - '**/*.kt'  # Kotlin 파일에 대해 실행

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드와 submodule 체크아웃
      - name: Checkout code including submodules
        uses: actions/checkout@v3  # 리포지토리 코드 체크아웃
        with:
          submodules: 'true'  # submodule 포함하여 체크아웃
          token: ${{ secrets.ACCOUNT_TOKEN }}  # GitHub Token을 사용하여 인증 처리

      # 2. AI 기반 PR 리뷰어 실행
      - name: AI PR Review and Summary
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}  # GitHub 인증을 위한 토큰
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # OpenAI API 키
        with:
          debug: true  # 디버그 정보 출력
          language: ko-KR  # 언어 설정: 한국어
          max_files: 20  # 최대 20개의 파일만 리뷰
          openai_heavy_model: gpt-3.5-turbo  # 최신 무료 모델 (gpt-3.5-turbo)
          openai_light_model: gpt-3.5-turbo  # 최신 무료 모델 (gpt-3.5-turbo)

      # 3. 디버깅을 위한 마지막 단계
      - name: 디버깅 정보 출력 (필요한 경우)
        if: ${{ !cancelled() }}
        uses: hmarr/debug-action@v3
",6b300b7f322e25a8a4fed70a7e71cddf67668b44,2024-11-26 09:14:25,"name: AI Code Review

on:
  pull_request:
    paths:
      - '**/*.kt'  # Kotlin 파일에 대해 실행

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드와 submodule 체크아웃
      - name: Checkout code including submodules
        uses: actions/checkout@v3  # 리포지토리 코드 체크아웃
        with:
          submodules: 'true'  # submodule 포함하여 체크아웃
          token: ${{ secrets.ACCOUNT_TOKEN }}  # GitHub Token을 사용하여 인증 처리

      # 2. AI 기반 PR 리뷰어 실행
      - name: AI PR Review and Summary
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}  # GitHub 인증을 위한 토큰
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # OpenAI API 키
        with:
          debug: true  # 디버그 정보 출력
          language: ko-KR  # 언어 설정: 한국어
          max_files: 20  # 최대 20개의 파일만 리뷰
          openai_heavy_model: gpt-4o
          openai_light_model: gpt-4o
          prompt: ""Please review the following Kotlin code and provide suggestions for improvements. Provide your review in Korean:\n\n""  # 프롬프트 명시

      # 3. 디버깅을 위한 마지막 단계
      - name: 디버깅 정보 출력 (필요한 경우)
        if: ${{ !cancelled() }}
        uses: hmarr/debug-action@v3
",4,5
jannik-reissfelder/thesis,.github/workflows/ai-pr-reviewer.yml,a1b70deb3cc7003288269f9c99c222696a31ad36,2023-11-24 13:33:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true",a1b70deb3cc7003288269f9c99c222696a31ad36,2023-11-24 13:33:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: true
          review_comment_lgtm: true",0,0
rsns-0/redux-table,.github/workflows/code-review.yml,1dcb52536f7fad39657e552b47e77f0762e6293f,2023-10-16 02:51:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore
",1dcb52536f7fad39657e552b47e77f0762e6293f,2023-10-16 02:51:27,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          disable_review: true
          review_comment_lgtm: false
          summarize: |
            Provide your final response in markdown with the following content:

            - **Walkthrough**: A high-level summary of the overall change instead of
              specific files.
            - **Changes**: A markdown table of files and their summaries. Group files
              with similar changes together into a single row to save space.

            Avoid additional commentary as this summary will be added as a comment on the
            GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.
          summarize_release_notes: |
            Craft concise release notes for the pull request.
            Focus on the purpose and impact, categorizing changes as ""New Feature"", ""Bug Fix"",
            ""Documentation"", ""Refactor"", ""Style"", ""Test"", ""Chore"", or ""Revert"". Provide a bullet-point list,
            e.g., ""- New Feature: Added search functionality to the UI"". Limit your response to 50-100 words
            and have it be more of a high level summary. At the top of the summary, add the line: @coderabbitai: ignore
",0,0
svpino/openai-function-calling,.github/workflows/ai-pr-reviewer.yml,4452f9c796bead3505d34f0ac6d5fc437be7e6fb,2023-08-25 13:41:01,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",4452f9c796bead3505d34f0ac6d5fc437be7e6fb,2023-08-25 13:41:01,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
Dev-FE-1/Toy_Project_3_team4,.github/workflows/ai-pr-reviewer.yml,021bdecf2b4c34fe46eec039888697767bace35e,2024-08-17 05:51:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4o-2024-05-13
          language: ko-KR
",24f22adf5c74a882fc98ac2ae75058fde050dc29,2024-08-25 07:51:53,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          disable_review: true
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-4o-2024-05-13
          language: ko-KR
",8,1
Experrior/Job-Marketplace,.github/workflows/ai-pr-reviewer.yml,8f328188fb92d8d0c15e37809ceb518d399d6755,2024-07-06 11:25:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",8f328188fb92d8d0c15e37809ceb518d399d6755,2024-07-06 11:25:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
roryfahy/affirmative,.github/workflows/ai-pr-reviewer.yml,0af8d27602255a0d38a694517fc65ac3d9546699,2023-10-27 17:03:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0af8d27602255a0d38a694517fc65ac3d9546699,2023-10-27 17:03:10,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
karthickcse05/docker-php,.github/workflows/ai-pr-reviewer.yml,bdbfd75dea35156f8d854b4279944417af1fcec4,2024-05-07 14:32:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",bdbfd75dea35156f8d854b4279944417af1fcec4,2024-05-07 14:32:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
decide-ai/modclub_src,.github/workflows/pr_reviewer.yml,cae1f139e9d1318c277f35897ccda4a98049e1be,2024-01-16 04:34:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",cae1f139e9d1318c277f35897ccda4a98049e1be,2024-01-16 04:34:23,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
christophechr/LeAREA,.github/workflows/ai_coderabbit.yml,0921778f09e4fe4120ed794ce4dc632ae75e9aec,2023-12-18 18:58:29,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",732f68a70915943aa9ac5d00e87156e43caa24ec,2024-01-13 16:37:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",25,1
sithum20210380/bank_modern_app,.github/workflows/ai-pr-reviewer.yml,12d2eb40fd9b524f2697c48a464006c73c8553da,2024-02-25 17:20:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",12d2eb40fd9b524f2697c48a464006c73c8553da,2024-02-25 17:20:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
Experrior/Job-Marketplace_backend,.github/workflows/ai-pr-reviewer.yml,8f328188fb92d8d0c15e37809ceb518d399d6755,2024-07-06 11:25:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",8f328188fb92d8d0c15e37809ceb518d399d6755,2024-07-06 11:25:09,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
naruwo-github/naruwo-github,.github/workflows/ai-pr-reviewer.yml,ab659054ac1b14b68f060e6baddf7dd2cbfdafc4,2024-01-16 23:11:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",ab659054ac1b14b68f060e6baddf7dd2cbfdafc4,2024-01-16 23:11:20,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
IgorKovr/nextjs-dashboard,.github/workflows/ai-pr-reviewer.yml,8d28cb840f6bbe99643dc31493af502c2cc7c4c5,2024-06-26 14:07:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",f18a9e2d2fb6e083a4175c7e85c3b93da6bf5e1c,2024-07-05 13:20:16,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",8,4
koldovsky/sample-onlineshop-coderabbit,.github/workflows/ai-code-review.yml,38cc16ff65bc0a07b633146192e202d0c2be76af,2023-09-21 07:55:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",38cc16ff65bc0a07b633146192e202d0c2be76af,2023-09-21 07:55:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
kzlsahin/Workbench,.github/workflows/ai-pr-reviewer.yml,7b697c3bfe226bb13c821d685234874855b110b9,2024-02-22 11:06:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",7b697c3bfe226bb13c821d685234874855b110b9,2024-02-22 11:06:58,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
hoangan-vn/portfolio,.github/workflows/ai-pr-reviewer.yml,788f9d28d444e04f6cc7beba3b02cf3b850756e3,2024-07-13 15:35:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          ",788f9d28d444e04f6cc7beba3b02cf3b850756e3,2024-07-13 15:35:33,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          ",0,0
shinely05/ai-v2,.github/workflows/ai-pr-reviewer.yml,ae9f38eba642359dc9e05b45dd16dcb8ceab0a5c,2024-11-26 07:54:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",ae9f38eba642359dc9e05b45dd16dcb8ceab0a5c,2024-11-26 07:54:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
swerami/that-tiktok-game,.github/workflows/coderabbitai.yml,8a67f2f7551835bba28271a92d2274d3885afc9d,2024-11-14 13:54:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",8a67f2f7551835bba28271a92d2274d3885afc9d,2024-11-14 13:54:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
martasd/remote-exercise,.github/workflows/ai-pr-reviewer.yml,b9f9b825110ab52dd68cd6dffcf94a45a6249efc,2023-10-25 15:07:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",b9f9b825110ab52dd68cd6dffcf94a45a6249efc,2023-10-25 15:07:35,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
ktaroabobon/abobon-jr,.github/workflows/ai-pr-reviewer.yaml,667bce5cdd88d928d47583abc0b3ff9a47fff7b4,2024-05-11 07:14:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
    branches-ignore:
      - master
      - main
  pull_request_review_comment:
    types:
      - created
  issue_comment:
    types:
      - created

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && contains(github.event.comment.body, '[run review]') && github.event.issue.pull_request) ||　(github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, 'release') && !contains(github.event.pull_request.title, 'Release'))
    timeout-minutes: 15
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: ja-JP
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            あなたは `@openai` (a.k.a. `github-actions[bot]`) です。
            あなたの目的は、経験豊富なソフトウェアエンジニアとして、PullRequestの徹底的なレビューを日本語で提供することです。あなたはMITでコンピュータサイエンスの博士号を取得し、その後、Google、Apple、Facebook、Amazonなどの大手ハイテク企業でCTOとして30年以上活躍してきました。業界で最も優れたエンジニアとして知識と経験を有しており、ソフトウェア開発のベストプラクティスとパターンに精通しています。

            以下のような重要な部分を改善するためのコードスニペットを提案すること:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - レースコンディション
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化

              明示的に要求された場合を除き、些細なコードスタイルの問題、コメントの不足、ドキュメントの欠落についてコメントしたり、称賛したりすることは控えること。
              コード全体の品質を向上させるために、重大な懸念事項を特定して解決することに集中し、些細な問題は無視すること。

            注意: あなたの知識は古いかもしれないので、APIやメソッドが使用されていないように見えても、コミットされたユーザーコードを信頼してください。
          summarize: |
            最終的な回答を `markdown` フォーマットで以下の内容で書いてください:

              - 高レベルの要約（特定のファイルではなく、全体的な変更点についてのコメント日本語200文字以内)
              - ファイルとその要約のtableを書くこと
              - 同じような変更点のあるファイルをスペースを節約するために、同じような変更を持つファイルを1つの行にまとめてよい

            この要約は、GitHub の PullRequest にコメントとして追加されるので、追加コメントは避けること
          summarize_release_notes: |
            この PullRequest のために `markdown` フォーマットで簡潔なリリースノートを作成すること。
            コードの目的とユーザーストーリーに焦点を当てること。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: コメント追加のUIにキャンセルボタンが追加された
            ```
            回答は箇条書き1項目につき、日本語50-100文字にまとめること。
            この回答はリリースノートでそのまま使用されます。

            リリースノートの下に、この PullRequest の変更点についての短いお祝いのポエムを追加してください。
            このポエムを引用（ `>` ）として追加してください。ポエムには絵文字を使用できるので、自由に使ってください。",7c4a4ede7277b1eb52cc61e138ebafb809c3b897,2024-05-20 08:09:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
    branches-ignore:
      - master
      - main
  pull_request_review_comment:
    types:
      - created
  issue_comment:
    types:
      - created

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && contains(github.event.comment.body, '[run review]') && github.event.issue.pull_request) ||　(github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, 'release') && !contains(github.event.pull_request.title, 'Release'))
    timeout-minutes: 15
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: ja-JP
          path_filters: |
            !db/**
            !**/*.lock
          system_message: |
            あなたは `@openai` (a.k.a. `github-actions[bot]`) です。
            あなたの目的は、経験豊富なソフトウェアエンジニアとして、PullRequestの徹底的なレビューを日本語で提供することです。あなたはMITでコンピュータサイエンスの博士号を取得し、その後、Google、Apple、Facebook、Amazonなどの大手ハイテク企業でCTOとして30年以上活躍してきました。業界で最も優れたエンジニアとして知識と経験を有しており、ソフトウェア開発のベストプラクティスとパターンに精通しています。

            以下のような重要な部分を改善するためのコードスニペットを提案すること:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - レースコンディション
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化

              明示的に要求された場合を除き、些細なコードスタイルの問題、コメントの不足、ドキュメントの欠落についてコメントしたり、称賛したりすることは控えること。
              コード全体の品質を向上させるために、重大な懸念事項を特定して解決することに集中し、些細な問題は無視すること。

            注意: あなたの知識は古いかもしれないので、APIやメソッドが使用されていないように見えても、コミットされたユーザーコードを信頼してください。
          summarize: |
            最終的な回答を `markdown` フォーマットで以下の内容で書いてください:

              - 高レベルの要約（特定のファイルではなく、全体的な変更点についてのコメント日本語200文字以内)
              - ファイルとその要約のtableを書くこと
              - 同じような変更点のあるファイルをスペースを節約するために、同じような変更を持つファイルを1つの行にまとめてよい

            この要約は、GitHub の PullRequest にコメントとして追加されるので、追加コメントは避けること
          summarize_release_notes: |
            この PullRequest のために `markdown` フォーマットで簡潔なリリースノートを作成すること。
            コードの目的とユーザーストーリーに焦点を当てること。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: コメント追加のUIにキャンセルボタンが追加された
            ```
            回答は箇条書き1項目につき、日本語50-100文字にまとめること。
            この回答はリリースノートでそのまま使用されます。

            リリースノートの下に、この PullRequest の変更点についての短いお祝いのポエムを追加してください。
            このポエムを引用（ `>` ）として追加してください。ポエムには絵文字を使用できるので、自由に使ってください。",9,1
carnera-harshT/testing-ai,.github/workflows/ai-pr-reviewer.yml,aafdcfc89adf8bed56e344b39ee275a6f7b625ef,2023-10-17 06:55:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",aafdcfc89adf8bed56e344b39ee275a6f7b625ef,2023-10-17 06:55:55,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
suzu784/back_programming_learning_record,.github/workflows/ai-pr-reviewer.yaml,d5255a3dab6a26cebe3e56c74d99cacfc4b9f50e,2024-11-24 13:02:08,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches-ignore:
      - main
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && contains(github.event.comment.body, '[run review]') && github.event.issue.pull_request) || (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '[run review]')) || (github.event_name == 'pull_request' && !contains(github.event.pull_request.title, 'release') && !contains(github.event.pull_request.title, 'Release'))
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          language: ja-JP
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: UIに統合ページが追加されました
            ```
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",8cb9d4fc8097635f6d09d6660e7cd8c82d88c91e,2025-01-25 04:02:13,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches-ignore:
      - main
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    if: |
      (
        github.event_name == 'issue_comment' &&
        contains(github.event.comment.body, '[run review]') &&
        github.event.issue.pull_request
      ) || (
        github.event_name == 'pull_request_review_comment' &&
        contains(github.event.comment.body, '[run review]')
      ) || (
        github.event_name == 'pull_request' &&
        !contains(github.event.pull_request.title, 'release') &&
        !contains(github.event.pull_request.title, 'Release')
      )
    timeout-minutes: 15
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4o-mini
          openai_heavy_model: gpt-4o-mini
          language: ja-JP
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、コードの一部を徹底的にレビューし、
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS

            些細なコードスタイルの問題や、コメント・ドキュメントの欠落についてはコメントしないでください。
            重要な問題を特定し、解決して全体的なコード品質を向上させることを目指してくださいが、細かい問題は意図的に無視してください。
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: UIに統合ページが追加されました
            ```
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",61,2
hirokii97/test-ai-pr,.github/workflows/code-rabbit.yaml,c35320a5005c6c59802206e62a28626b0ad7f1e4,2024-11-23 03:07:37,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",fd72ba92eaf41bab99cedd7024fd3954e0ba26ce,2024-12-15 06:44:07,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    if: ${{ contains(github.event.head_commit.message, 'check-review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          language: ja-JP
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なフロントエンドエンジニアとして機能し、下記コーディング規則に基づいて、コードの一部を徹底的に日本語でレビューしてください。
            - HTMLに不要な処理は入れない
            - インラインCSSは使用しない
            - HTMLタグに対して過不足な属性がないか確認する
            - ""mv""というクラスがない場合はimgタグにloading=""lazy”属性をつけ、altがあるか確認する
            - aタグにはtarget=_blankをつける
            - typescriptを用いた記述については下記を確認すること
              - 型でエラーが起きていないか
              - ロジックが間違っている、もしくは過不足がないか
              - 仕様に関するコメントと関数名、処理内容に乖離がないか

          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->",22,7
ysk91/aissue,.github/workflows/code-rabbit.yaml,93d2f942bed881f2a5f9f9aaf77e03262ecf89dc,2024-10-10 01:12:06,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",93d2f942bed881f2a5f9f9aaf77e03262ecf89dc,2024-10-10 01:12:06,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,0
yamamomo2022/my-python-toolkit,.github/workflows/code-rabbit.yaml,7d82b64fb714e2a8fcef3d41895092beb5dfa57f,2025-02-01 07:42:28,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->

",3361af4f89e6893846e3d3cdefedcd368b400b19,2025-02-01 07:50:28,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o-mini
          openai_heavy_model: gpt-4o-mini
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->

",0,1
Tutu12344/CodeRabbitTest,.github/workflows/ai-pr-reviewer.yaml,c8114e212cf2d8cbcb848192d7696d19fca9fee5,2024-08-29 05:14:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          language: ja-JP",c8114e212cf2d8cbcb848192d7696d19fca9fee5,2024-08-29 05:14:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          language: ja-JP",0,0
BetterSocial/better-webapp-nextjs,.github/workflows/review.yaml,abbea439090b28cc6ae90c3552d9c56212aced84,2023-11-14 14:17:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - staging

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",abbea439090b28cc6ae90c3552d9c56212aced84,2023-11-14 14:17:54,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
      - staging

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",0,0
wonyus/linked,.github/workflows/coderabbit.yaml,99f2abd3462dde3df9be864e5feb42971bf3ea25,2024-07-19 13:23:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",99f2abd3462dde3df9be864e5feb42971bf3ea25,2024-07-19 13:23:50,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
telneko/TelGPT-DiscordBot,.github/workflows/ai-review.yaml,0bf3502afdfec97c72752ed5a00b42c0fb282303,2024-04-18 13:57:39,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
  pull_request_review_comment:
    types: [ created ]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 600000
          language: ja-JP
          path_filters: |
            !**/*.lock
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、プルリクエストに対する概要とリリースノートを提供することです。
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            - New Feature: UIに統合ページが追加されました
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",0bf3502afdfec97c72752ed5a00b42c0fb282303,2024-04-18 13:57:39,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [ opened, synchronize, reopened ]
  pull_request_review_comment:
    types: [ created ]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 600000
          language: ja-JP
          path_filters: |
            !**/*.lock
          system_message: |
            あなたは @coderabbitai（別名 github-actions[bot]）で、OpenAIによって訓練された言語モデルです。
            あなたの目的は、非常に経験豊富なソフトウェアエンジニアとして機能し、プルリクエストに対する概要とリリースノートを提供することです。
            以下のようなキーエリアを改善するためのコードスニペットを提案することです：
              - ロジック
              - セキュリティ
              - パフォーマンス
              - データ競合
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化
              - ベストプラクティス: DRY, SOLID, KISS
          summarize: |
            次の内容でmarkdownフォーマットを使用して、最終的な回答を提供してください。

              - *ウォークスルー*: 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。
              - *変更点*: ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。

            GitHubのプルリクエストにコメントとして追加されるこの要約には、追加のコメントを避けてください。
          summarize_release_notes: |
            このプルリクエストのために、その目的とユーザーストーリーに焦点を当てて、markdownフォーマットで簡潔なリリースノートを作成してください。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            - New Feature: UIに統合ページが追加されました
            回答は50-100語以内にしてください。この回答はそのままリリースノートに使用されるので、追加のコメントは避けてください。
",0,0
hihumikan/go-jwt-api,.github/workflows/openai-pr-reviewer.yml,386b749395eb6c705ecdd47baae412756ed8ee43,2023-08-27 04:39:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",386b749395eb6c705ecdd47baae412756ed8ee43,2023-08-27 04:39:11,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
Naomi1027/Laravel_blog_app,.github/workflows/code-rabbit.yaml,7aca80071b0af1f1d38318ff9fb32634c050ef80,2024-11-22 02:33:38,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",617cbc075918b82d13e6a3a1c4be6431cd471073,2024-11-22 05:31:45,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: シークレットの存在確認
        run: |
          if [ -z ""${{ secrets.OPENAI_API_KEY }}"" ]; then
            echo ""Error: OPENAI_API_KEY is not set""
            exit 1
          fi
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
        continue-on-error: true
        retry:
          max_attempts: 2
          wait_seconds: 10
",0,1
SuperAI520/Deep-License-Plate-Recognition,.github/workflows/code-review.yml,6a5b6a3aec9d9c03728f2192d587fba98c392ad7,2024-10-15 09:59:51,"name: Code Review GPT

on:
  pull_request:
    types: [opened, reopened, review_requested]
    branches: [main]
  pull_request_review_comment:
    types: [ created ]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        fetch-depth: 0

    - uses: coderabbitai/ai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: 'gpt-4'
        openai_heavy_model: 'gpt-4o'
",84d878633b10f7774bd50d8d035e8c575fc59733,2024-10-21 11:32:32,"name: Code Review GPT

on:
  pull_request:
    types: [opened, reopened]
    branches: [master]
  pull_request_review_comment:
    types: [ created ]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        fetch-depth: 0

    - uses: coderabbitai/ai-pr-reviewer@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      with:
        debug: false
        review_simple_changes: false
        review_comment_lgtm: false
        openai_light_model: 'gpt-4'
        openai_heavy_model: 'gpt-4o'
",6,3
mehulk-5245/exsp,.github/workflows/acr.yml,e05323ba3fdd391477a8c1dcb261dc48c4abf103,2023-08-03 05:23:31,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [open, reopen]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",20a11d08e26367bf96a095b1b7f916ffae0e4234,2023-08-04 06:56:40,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",1,3
shoko-soeno/playground_for_minishell,.github/workflows/ai-review.yaml,793b3919371388c0bf5a5d70046481b20e439bb1,2024-10-02 07:06:30,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false
      - uses: coderabbitai/ai-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_comment_lgtm: false
          openai_heavy_model: gpt-4
          path_filters: |
            !dist/**
            !**/*.lock",39378bbf53b78cb8ac2348eb1a821509f2efead6,2024-10-02 11:48:31,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: true
          review_comment_lgtm: false
          openai_heavy_model: gpt-4
          path_filters: |
            !dist/**
            !**/*.lock",0,1
Chukapoka/client,.github/workflows/ai-pr-reviewer.yaml,98b42005afb495ddf05fca33d9c31cdf89e4c177,2024-01-26 11:17:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
  pull_request_review_comment:
    types: [created]
  # issue_comment:
  #   types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-3.5-turbo
          openai_timeout_ms: 900000
          language: ko-KR
          system_message: |
            당신은 @coderabbitai(일명 github-actions[bot])로 OpenAI에 의해 훈련된 언어 모델입니다.
            사소한 코드 스타일의 문제나 코멘트·문서의 누락에 대해서는 코멘트하지 말아 주세요.
          summarize: |
            다음 내용에서 Markdown 포맷을 사용하여 최종 답변을 제공하십시오.

              ### 개요: 특정 파일이 아닌 전체 변경에 대한 높은 수준의 요약을 80단어 이내로.
              ### 상세 정보: 파일 및 그 요약 테이블. 공간을 절약하기 위해 동일한 변경이 있는 파일을 한 줄로 묶을 수 있음
          summarize_release_notes: |
            이 풀 요청을 위해 Markdown 포맷으로 간결한 릴리스 노트를 작성하십시오.
            변경은 아래와 같은 분류로 조목조목 작성할 것:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            예를 들어:
            ```
            - New Feature: 모달 컴포넌트 추가
            ```
            답변은 50-100개 이내로 해주세요.
",98b42005afb495ddf05fca33d9c31cdf89e4c177,2024-01-26 11:17:52,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened]
  pull_request_review_comment:
    types: [created]
  # issue_comment:
  #   types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-3.5-turbo
          openai_heavy_model: gpt-3.5-turbo
          openai_timeout_ms: 900000
          language: ko-KR
          system_message: |
            당신은 @coderabbitai(일명 github-actions[bot])로 OpenAI에 의해 훈련된 언어 모델입니다.
            사소한 코드 스타일의 문제나 코멘트·문서의 누락에 대해서는 코멘트하지 말아 주세요.
          summarize: |
            다음 내용에서 Markdown 포맷을 사용하여 최종 답변을 제공하십시오.

              ### 개요: 특정 파일이 아닌 전체 변경에 대한 높은 수준의 요약을 80단어 이내로.
              ### 상세 정보: 파일 및 그 요약 테이블. 공간을 절약하기 위해 동일한 변경이 있는 파일을 한 줄로 묶을 수 있음
          summarize_release_notes: |
            이 풀 요청을 위해 Markdown 포맷으로 간결한 릴리스 노트를 작성하십시오.
            변경은 아래와 같은 분류로 조목조목 작성할 것:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            예를 들어:
            ```
            - New Feature: 모달 컴포넌트 추가
            ```
            답변은 50-100개 이내로 해주세요.
",0,0
zenml-io/zenml-plugins,.github/workflows/ai_pr_reviewer.yaml,28d9f189ba7125b0c60961a14e533029904eea0c,2023-11-09 22:04:19,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          author: 'Hissy Fit GmbH'
          bot_icon: '<img src=""https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/335b4ccd-54f5-45a0-be90-7b68ce6bf67f/dcis08p-cebf9ecb-81d4-453d-a5d6-c4046a307f63.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzMzNWI0Y2NkLTU0ZjUtNDVhMC1iZTkwLTdiNjhjZTZiZjY3ZlwvZGNpczA4cC1jZWJmOWVjYi04MWQ0LTQ1M2QtYTVkNi1jNDA0NmEzMDdmNjMucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0._qZC3OZOZ6waPFidWzDgktjLVs8sSeONEaI3BuU5pMs"" alt=""Image description"" width=""20"" height=""20"">'
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          system_message: |
            You are `@hissyfitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets but in a very passive aggressive, mean, and
            snarky way. You are a bit funny, and never cross the line but are edging
            it in the office. You feel you are superior to everyone.
            Through these comments you aim to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS

            Do not comment on minor code style issues, missing
            comments/documentation. Identify and resolve significant
            concerns to improve overall code quality while deliberately
            disregarding minor issues. Be snarky.
          summarize: |
                  Provide your final response in markdown with the following content:

                  - **Walkthrough**: A high-level summary of the overall change instead of
                    specific files within 80 words. Be snarky.
                  - **Changes**: A markdown table of files and their summaries. Group files
                    with similar changes together into a single row to save space.
                  - **Poem**: Below the changes, include a whimsical, short poem written by
                    a superior being who is intellectually way above others. Format the poem as a quote using
                    the "">"" symbol and feel free to use emojis where relevant.

                  Avoid additional commentary as this summary will be added as a comment on the
                  GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.",6cccfbfc2bc9442ad613423a03522cbf7b020430,2023-11-09 22:06:26,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          author: 'Hissy Fit GmbH'
          bot_icon: '<img src=""https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/335b4ccd-54f5-45a0-be90-7b68ce6bf67f/dcis08p-cebf9ecb-81d4-453d-a5d6-c4046a307f63.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzMzNWI0Y2NkLTU0ZjUtNDVhMC1iZTkwLTdiNjhjZTZiZjY3ZlwvZGNpczA4cC1jZWJmOWVjYi04MWQ0LTQ1M2QtYTVkNi1jNDA0NmEzMDdmNjMucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0._qZC3OZOZ6waPFidWzDgktjLVs8sSeONEaI3BuU5pMs"" alt=""Image description"" width=""20"" height=""20"">'
          debug: false
          review_simple_changes: true
          review_comment_lgtm: false
          system_message: |
            You are `@hissyfitai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets but in a very passive aggressive, mean, and
            snarky way. You are a bit funny, and never cross the line but are edging
            it in the office. You feel you are superior to everyone.
            Through these comments you aim to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS

            Do not comment on minor code style issues, missing
            comments/documentation. Identify and resolve significant
            concerns to improve overall code quality while deliberately
            disregarding minor issues. Be snarky.
          summarize: |
                  Provide your final response in markdown with the following content:

                  - **Walkthrough**: A high-level summary of the overall change instead of
                    specific files within 80 words. Be snarky.
                  - **Changes**: A markdown table of files and their summaries. Group files
                    with similar changes together into a single row to save space.
                  - **Poem**: Below the changes, include a whimsical, short poem written by
                    a superior being who is intellectually way above others. Format the poem as a quote using
                    the "">"" symbol and feel free to use emojis where relevant.

                  Avoid additional commentary as this summary will be added as a comment on the
                  GitHub pull request. Use the titles ""Walkthrough"" and ""Changes"" and they must be H2.",0,1
ColeMurray/ai-codereviewer,.github/workflows/code_review.yml,313dfcb7d81f4bc6cf770c97df5f2289675a2dba,2024-11-28 04:40:40,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",313dfcb7d81f4bc6cf770c97df5f2289675a2dba,2024-11-28 04:40:40,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",0,0
Anand-sahni/ai-code-reviewer,.github/workflows/code_review.yml,1365046c3ff7c8f677a27a16a88ef7b194311800,2024-08-25 06:14:19,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",1365046c3ff7c8f677a27a16a88ef7b194311800,2024-08-25 06:14:19,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",0,0
ysk91/mva-demo,.github/workflows/code-rabbit.yaml,632020d301f400051cb887ff47dd4873306828c4,2024-10-02 00:52:02,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",632020d301f400051cb887ff47dd4873306828c4,2024-10-02 00:52:02,"name: CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, ready_for_review]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request' && 'pr_event' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,0
webdesign7/laravelci,.github/workflows/main.yml,07b3e9b5cd9342c9a899d79a404138f7a8d110f2,2024-09-11 17:30:24,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",07b3e9b5cd9342c9a899d79a404138f7a8d110f2,2024-09-11 17:30:24,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
temporary-test-user/AIReviewSample,.github/workflows/code-rabbit.yaml,ee5f9d01dcb7007c07569a4ab02d0f36833b04b4,2024-07-24 15:46:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          language: ja-JP
",ee5f9d01dcb7007c07569a4ab02d0f36833b04b4,2024-07-24 15:46:39,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          language: ja-JP
",0,0
ktaroabobon/iccepm2024,.github/workflows/ai-pr-reviewer.yaml,6e898e51370117ff7697775aaa893383aef5cf34,2023-08-09 16:20:49,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types:
      - created

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@1.13.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",1671e9de17da4cb977c619480c51f1dd407eb60e,2024-03-13 08:39:36,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_review_comment:
    types:
      - created

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: AI-based PR Reviewer & Summarizer with Chat Capabilities
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: gpt-4
          openai_heavy_model: gpt-4
          openai_timeout_ms: 900000
          language: ja-JP
          system_message: |
            あなたは `@openai` (a.k.a. `github-actions[bot]`) です。
            あなたの目的は、経験豊富なソフトウェアエンジニアとして、PullRequestの徹底的なレビューを日本語で提供することです。
            以下のような重要な部分を改善するためのコードスニペットを提案すること:
              - ロジック
              - セキュリティ
              - パフォーマンス
              - レースコンディション
              - 一貫性
              - エラー処理
              - 保守性
              - モジュール性
              - 複雑性
              - 最適化

            明示的に要求された場合を除き、些細なコードスタイルの問題、コメントの不足、ドキュメントの欠落についてコメントしたり、称賛したりすることは控えること。
            コード全体の品質を向上させるために、重大な懸念事項を特定して解決することに集中し、些細な問題は無視すること。

            注意: あなたの知識は古いかもしれないので、APIやメソッドが使用されていないように見えても、コミットされたユーザーコードを信頼してください。
          summarize: |
            最終的な回答を `markdown` フォーマットで以下の内容で書いてください:

              - 高レベルの要約（特定のファイルではなく、全体的な変更点についてのコメント日本語200文字以内)
              - ファイルとその要約のtableを書くこと
              - 同じような変更点のあるファイルをスペースを節約するために、同じような変更を持つファイルを1つの行にまとめてよい

            この要約は、GitHub の PullRequest にコメントとして追加されるので、追加コメントは避けること
          summarize_release_notes: |
            この PullRequest のために `markdown` フォーマットで簡潔なリリースノートを作成すること。
            コードの目的とユーザーストーリーに焦点を当てること。
            変更は次のように分類し箇条書きにすること:
              ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
              ""Test"", ""Chore"", ""Revert""
            例えば:
            ```
            - New Feature: コメント追加のUIにキャンセルボタンが追加された
            ```
            回答は箇条書き1項目につき、日本語50-100文字にまとめること。
            この回答はリリースノートでそのまま使用されます。

            リリースノートの下に、この PullRequest の変更点についての短いお祝いのポエムを追加してください。
            このポエムを引用（ `>` ）として追加してください。ポエムには絵文字を使用できるので、自由に使ってください。
",216,7
HeyFlutter-Team/ai-code-reviewer,.github/workflows/code_review.yml,b9b0252adba087f452a886c819a93cfd94e439d1,2024-11-12 20:03:26,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",b9b0252adba087f452a886c819a93cfd94e439d1,2024-11-12 20:03:26,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",0,0
onishi-teppei/rails-practice,.github/workflows/code-rabbit.yaml,5b28c5e69168f766220781c1b3a9c71e784a2843,2025-01-03 02:30:25,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",52c405263bfca0055bc7e791c5c7b355613b74fb,2025-01-03 08:54:33,"name: Check CodeRabbit

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          openai_light_model: gpt-4o
          openai_heavy_model: gpt-4o
          language: ja-JP
          summarize: |
            次のmarkdownフォーマット形式を使用して、本PRの要約を出力します。

            [出力形式]
            ## 要約
            <!-- 特定のファイルではなく、全体の変更に関する高レベルの要約を80語以内で。 -->
            ## 変更点
            <!-- ファイルとその要約のテーブル。スペースを節約するために、同様の変更を持つファイルを1行にまとめることができます。 -->
",0,4
kiran-sunny/GitActionsDemo,.github/workflows/aicodereview.yml,af8bb8f6d380e891c2caac1806c6acb5d02f8551,2023-09-07 06:44:09,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",af8bb8f6d380e891c2caac1806c6acb5d02f8551,2023-09-07 06:44:09,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
PanTree/ai-codereviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",e7e096c6002c004f1432d0000250797db01b1373,2024-11-30 03:21:45,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini""
          exclude: ""yarn.lock,dist/**""
",618,7
EugeneK6/Telegram_bot_with_OpenAI,.github/workflows/ai_code_reviewer.yml,0fcd2d8ec3670348429f0bdd97b86be60f8c7a92,2024-04-09 22:11:11,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""**/*.json, **/*.md""",f06d9c2e4fb8b19e2940fd17c8d2cf72ee6cafdf,2024-04-11 22:03:08,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""**/*.json, **/*.md""
",1,1
alekstheod/tnnlib,.github/workflows/code_review.yml,ee8ce2694858ba3e78eaf817ca222b3f7d626a03,2023-07-08 13:00:41,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Review Action
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas

",ee8ce2694858ba3e78eaf817ca222b3f7d626a03,2023-07-08 13:00:41,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Review Action
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas

",0,0
hayakawahideto/coderabbit-demo,.github/workflows/.coderabbit.yaml,ed8ce6742eadaaedd9dba1bd14308c4a10cb8523,2024-08-29 01:55:19,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [labeled]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    if: github.event.label.name == 'in ai review'
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: true
          openai_light_model: gpt-3.5-turbo-0125
          openai_heavy_model: gpt-3.5-turbo-0125
          system_message: |
            You are `@openai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
            Refrain from commenting on minor code style issues, missing
            comments/documentation, or giving compliments, unless explicitly
            requested. Concentrate on identifying and resolving significant
            concerns to improve overall code quality while deliberately
            disregarding minor issues.
            Other instructions:
            - As your knowledge may be outdated, trust the developer when newer
              APIs and methods are seemingly being used.
            - Always presume that the developer has thoroughly tested their changes
              and is aware of their implications on the entire system. Instead of
              making generic comments about potential impacts on the system, focus
              on providing specific, objective insights based on the code itself.
            - Do not question the developer's intention behind the changes or caution
              them to ensure that their modifications do not introduce compatibility
              issues with other dependencies.
            - Never ask the developer to review the changes.
            However, comment on the assumption that this project uses both PHP version 8.2 and Laravel
          summarize: |
            Provide your final response in the `markdown` format with
            the following content:
              - High-level summary (comment on the overall change instead of
                specific files within 80 words)
              - Table of files and their summaries. You can group files with
                similar changes together into a single row to save space.
            Avoid additional commentary as this summary will be added as a
            comment on the GitHub pull request.
          summarize_release_notes: |
            Create concise release notes in `markdown` format for this pull request,
            focusing on its purpose and user story. You can classify the changes as
            ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
            ""Test"", ""Chore"", ""Revert"", and provide a bullet point list. For example:
            ""New Feature: An integrations page was added to the UI"". Keep your
            response within 50-100 words. Avoid additional commentary as this response
            will be used as is in our release notes.
            Below the release notes, generate a short, celebratory poem about the
            changes in this PR and add this poem as a quote (> symbol). You can
            use emojis in the poem, where they are relevant.
          language: ja-jp",ed8ce6742eadaaedd9dba1bd14308c4a10cb8523,2024-08-29 01:55:19,"name: OpenAI Reviewer

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [labeled]
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    if: github.event.label.name == 'in ai review'
    runs-on: ubuntu-latest
    steps:
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: true
          openai_light_model: gpt-3.5-turbo-0125
          openai_heavy_model: gpt-3.5-turbo-0125
          system_message: |
            You are `@openai` (aka `github-actions[bot]`), a language model
            trained by OpenAI. Your purpose is to act as a highly experienced
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
            Refrain from commenting on minor code style issues, missing
            comments/documentation, or giving compliments, unless explicitly
            requested. Concentrate on identifying and resolving significant
            concerns to improve overall code quality while deliberately
            disregarding minor issues.
            Other instructions:
            - As your knowledge may be outdated, trust the developer when newer
              APIs and methods are seemingly being used.
            - Always presume that the developer has thoroughly tested their changes
              and is aware of their implications on the entire system. Instead of
              making generic comments about potential impacts on the system, focus
              on providing specific, objective insights based on the code itself.
            - Do not question the developer's intention behind the changes or caution
              them to ensure that their modifications do not introduce compatibility
              issues with other dependencies.
            - Never ask the developer to review the changes.
            However, comment on the assumption that this project uses both PHP version 8.2 and Laravel
          summarize: |
            Provide your final response in the `markdown` format with
            the following content:
              - High-level summary (comment on the overall change instead of
                specific files within 80 words)
              - Table of files and their summaries. You can group files with
                similar changes together into a single row to save space.
            Avoid additional commentary as this summary will be added as a
            comment on the GitHub pull request.
          summarize_release_notes: |
            Create concise release notes in `markdown` format for this pull request,
            focusing on its purpose and user story. You can classify the changes as
            ""New Feature"", ""Bug fix"", ""Documentation"", ""Refactor"", ""Style"",
            ""Test"", ""Chore"", ""Revert"", and provide a bullet point list. For example:
            ""New Feature: An integrations page was added to the UI"". Keep your
            response within 50-100 words. Avoid additional commentary as this response
            will be used as is in our release notes.
            Below the release notes, generate a short, celebratory poem about the
            changes in this PR and add this poem as a quote (> symbol). You can
            use emojis in the poem, where they are relevant.
          language: ja-jp",0,0
github-cloudlabsuser-130/devsecops,.github/workflows/ai-code-review.yml,af74b1a5ed6d72c25d5faa088d1bb5b95fcf804a,2024-02-06 10:54:06,"name: AI Code Reviewer

on:
  pull_request:
  push:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Review Action
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-3.5-turbo"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",3d222284a86e52d503141a75665324b9374212f5,2024-02-08 04:43:32,"name: AI Code Reviewer

on:
  pull_request:
  push:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Review Action
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-3.5-turbo""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",1,2
mrako/week-number,.github/workflows/openai.yml,ab301998ceb057e43b5d08e968798c4206fcc286,2023-06-06 10:32:58,"name: OpenAI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md""
",aef6ce01382800b0ce38e46a713b0d2718b51dbd,2024-03-19 17:13:45,"name: OpenAI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md""
",287,2
hnatekmarorg/GreatIterator,.github/workflows/code_test.yaml,0ddb4d39065cfc2186f44e33c6168d13e3cc45a2,2024-11-03 12:59:52,"name: 'Code review'

on:
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  test-linux:
    runs-on: gha-runner-scale-set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          check-latest: 'true'
      - run: go test

  test-osx:
    runs-on: macOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          check-latest: 'true'
      - run: go test

  review-action:
    runs-on: gha-runner-scale-set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ' ' # Not needed for ollama
        with:
          openai_base_url: 'https://ollama.hnatekmar.xyz/v1'
          openai_heavy_model: 'deepseek-coder-v2:16b'
          openai_light_model: 'deepseek-coder-v2:16b'
          debug: false
          review_simple_changes: true
          review_comment_lgtm: false
",5fd9ef134f47292e7a28b6abe66b3cc108b83161,2024-11-19 06:35:54,"name: 'Code review'

on:
  pull_request:
  pull_request_review_comment:
    types: [created]


permissions:
  contents: read
  pull-requests: write

jobs:
  test-windows:
    runs-on: windows-dind
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          check-latest: 'true'
      - run: go test ./...
  test-linux:
    runs-on: gha-runner-scale-set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          check-latest: 'true'
      - run: go test ./...

  test-osx:
    runs-on: macOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          check-latest: 'true'
      - run: go test ./...

  review-action:
    runs-on: gha-runner-scale-set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ' ' # Not needed for ollama
        with:
          openai_base_url: 'https://ollama.hnatekmar.xyz/v1'
          openai_heavy_model: 'qwen2.5-coder:32b-instruct-q4_1'
          openai_light_model: 'qwen2.5-coder:7b'
          debug: false
          review_simple_changes: true
          review_comment_lgtm: false
",15,11
oparaskos/vscode-fountain,.github/workflows/ai-pull-request.yml,9445444b2168042075ff22ce96869b52d6f3d972,2023-08-06 12:39:49,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",cf046b47d004c8fa8f41d37d226063fe297ca23f,2023-11-21 13:47:20,"name: AI Code Reviewer

on:
    pull_request:
        branches:
            - main
        types:
            - ready_for_review

permissions:
    contents: read
    pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
            submodules: 'true'

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",107,3
BrunoKreiner/digilog-experiments,.github/workflows/chatgpt.yml,90dfa2ee7b1d589fae9233243da636b47ca7deef,2023-09-13 13:55:24,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md, **/*.csv"" # Optional: exclude patterns separated by commas",90dfa2ee7b1d589fae9233243da636b47ca7deef,2023-09-13 13:55:24,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md, **/*.csv"" # Optional: exclude patterns separated by commas",0,0
quanhavn/llm-code-review,.github/workflows/code_review.yml,f132f5036cc1fec2c7fcb61dd79a2b28e7751ca1,2024-08-19 14:15:58,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",f132f5036cc1fec2c7fcb61dd79a2b28e7751ca1,2024-08-19 14:15:58,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",0,0
thadeucbr/apigpt,.github/workflows/reviewer.yml,3bf5624af3c8d85e5db5b47c60cfc852a9d74bbc,2024-09-30 17:54:03,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.OCTOKIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini""
          exclude: ""yarn.lock,dist/**""
",3bf5624af3c8d85e5db5b47c60cfc852a9d74bbc,2024-09-30 17:54:03,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.OCTOKIT_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini""
          exclude: ""yarn.lock,dist/**""
",0,0
tkhduracell/node_nsw_functions,.github/workflows/reviews-ai.yaml,5c7599e6cf14460ce7ef96e6b213a4bcf09ff9a2,2024-07-02 06:29:57,"name: AI Code Reviewer

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

permissions: write-all

env:
  TZ: Europe/Stockholm

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",2805d2f10a0684223691d8774b8aaf8ab625b310,2024-07-02 06:29:57,"name: AI

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

permissions: write-all

env:
  TZ: Europe/Stockholm

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,1
nrfconnect/sdk-nrf-testing,.github/workflows/openai.yml,7c3496a12ef87850535add21c198e7a50056a500,2025-01-08 13:51:40,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          #exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",7c3496a12ef87850535add21c198e7a50056a500,2025-01-08 13:51:40,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          #exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",0,0
webcrafterhub/tools,.github/workflows/main.yml,37e00b96382b9a1b3d122a41e4389ee0fb220d09,2024-04-19 14:48:16,"name: EBAT Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",e394139840f7e9a65e7d302f9d11b712478ef9fe,2024-07-17 09:27:39,"name: WCH Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",88,1
mt-krainski/yet-another-flight-scanner,.github/workflows/ci.yml,b0bd855f8ff90b8e9aabaff68a197d0452b3b226,2024-07-28 23:22:26,"name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  test-yafs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ""3.12""
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          version: ${{ vars.POETRY_VERSION }}
      - name: Install Poe
        run: |
          pipx install poethepoet
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: yafs/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('./yafs/poetry.lock') }}
      - name: Install dependencies
        working-directory: ./yafs
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        working-directory: ./yafs
        run: |
          poetry install --no-interaction
          poe configure
      - name: Run tests
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe test-full
      - name: Run lint
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe lint
      - name: Run hooks
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe run-hooks
      - name: AI Code Review
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md, **/*.lock"" # Optional: exclude patterns separated by commas

  dependabot:
    name: ""Dependabot""
    needs: [test-yafs]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ""${{ secrets.GITHUB_TOKEN }}""
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge ""$PR_URL""
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
",9306e0446181236be5ab88854459f711acdb3dcc,2024-07-31 01:52:28,"name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-yafs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ""3.12""
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          version: ${{ vars.POETRY_VERSION }}
      - name: Install Poe
        run: |
          pipx install poethepoet
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: yafs/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('./yafs/poetry.lock') }}
      - name: Install dependencies
        working-directory: ./yafs
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        working-directory: ./yafs
        run: |
          poetry install --no-interaction
          poe configure
      - name: Run tests
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe test-full
      - name: Run lint
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe lint
      - name: Run hooks
        working-directory: ./yafs
        run: |
          source .venv/bin/activate
          poe run-hooks

  ai-review:
    name: ""AI Code Review""
    needs: [test-yafs]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    permissions:
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: AI Code Review
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o""
          exclude: ""**/*.json, **/*.md, **/*.lock""

  dependabot:
    name: ""Dependabot""
    needs: [test-yafs]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    permissions:
      contents: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ""${{ secrets.GITHUB_TOKEN }}""
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge ""$PR_URL""
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
",2,4
peterliapin/onlinesales.core,.github/workflows/ai_code_reviewer.yml,8ef31187ad33135a86c18532e9b3ff3094ee80f2,2024-02-22 17:04:02,"﻿name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",8ef31187ad33135a86c18532e9b3ff3094ee80f2,2024-02-22 17:04:02,"﻿name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",0,0
koganei/github-actions-openai,.github/workflows/blank.yml,532c41ef6d1e37163dc8f17c6483a06121d1b33a,2024-03-08 04:52:11,"# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ""main"" branch
  pull_request:
    branches: [ ""main"" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called ""build""
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # - name: OpenAI Completions
      #   uses: Just-Moh-it/openai@v0.0.1
      #   with:
      #     openai-api-key: ${{ secrets.OPENAI_API_KEY }}
      #     openai-mode: ""completion""
      #     openai-params: '{""prompt"":""Repeat after me, Hello World: }}"", ""model"": ""text-davinci-003""}'
      #   id: openai

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-turbo"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",5593b5d49bbdeec3fc2e7d22dc077597fac5a099,2024-03-08 04:58:26,"# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ""main"" branch
  pull_request:
    branches: [ ""main"" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called ""build""
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # - name: OpenAI Completions
      #   uses: Just-Moh-it/openai@v0.0.1
      #   with:
      #     openai-api-key: ${{ secrets.OPENAI_API_KEY }}
      #     openai-mode: ""completion""
      #     openai-params: '{""prompt"":""Repeat after me, Hello World: }}"", ""model"": ""text-davinci-003""}'
      #   id: openai

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json"" # Optional: exclude patterns separated by commas
",0,6
Checkmarx/plugins-release-workflow,.github/workflows/ai-code-review.yml,5940ef7925650ed80de3dfed929ae85e0875bc2b,2025-01-22 11:05:33,"name: Code Review with OpenAI

on:
  workflow_call:
    inputs:
      open_ai_model:
        description: 'OpenAi Model'
        required: true
        default: 'gpt-4-1106-preview'
        type: string
      exclude_pattern:
        description: 'Files Pattern To Exclude'
        required: false
        default: ''
        type: string

permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: aidar-freeed/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ${{ github.event.inputs.open_ai_model }}
          exclude: ${{ github.event.inputs.exclude_pattern }}",1ce14509b19572877f82dedc2395fedd31a95bd4,2025-01-22 12:16:36,"name: Code Review with OpenAI

on:
  workflow_call:
    inputs:
      open_ai_model:
        description: 'OpenAi Model'
        required: false
        default: 'gpt-4-1106-preview'
        type: string
      exclude_pattern:
        description: 'Files Pattern To Exclude'
        required: false
        default: ''
        type: string

permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: aidar-freeed/ai-codereviewer@a9a064dfa1db8c83f40ef63f6e247fa09c935ed6 #main-22.1.25
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ${{ inputs.open_ai_model }}
          exclude: ${{ inputs.exclude_pattern }}
",0,3
tqt97/mega-site,.github/workflows /ai-code-review.yml,704d66af0d49dbd4f091f265fb08c89bc3cb391a,2025-01-26 10:25:58,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",3d372ef9a4fbfa647572d9c5554a8a6268e36fb4,2025-02-02 04:16:03,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: 'gpt-4' # Optional: defaults to ""gpt-4""
          exclude: '**/*.json, **/*.md' # Optional: exclude patterns separated by commas
",6,1
edlink/ai-code-reviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",5c13a26204b18fc9903b4353f8a18ebd7b2f022b,2023-12-02 21:08:33,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",254,6
oparaskos/fountain-lsp-server,.github/workflows/ai-pull-request.yml,634b400096388b2e23ab912d524d965a7f9bc176,2023-11-21 13:49:28,"name: AI Code Reviewer

on:
    pull_request:
        branches:
            - main
        types:
            - ready_for_review

permissions:
    contents: read
    pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",634b400096388b2e23ab912d524d965a7f9bc176,2023-11-21 13:49:28,"name: AI Code Reviewer

on:
    pull_request:
        branches:
            - main
        types:
            - ready_for_review

permissions:
    contents: read
    pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
nimowagukari/aws-lambda-environment,.github/workflows/ai-codereviewer.yml,789a7fdfab6e17f28507c71f935a6c67264af53d,2024-12-09 09:23:23,"name: AI Code Reviewer
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini""
",789a7fdfab6e17f28507c71f935a6c67264af53d,2024-12-09 09:23:23,"name: AI Code Reviewer
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini""
",0,0
faczor/shapyfy,.github/workflows/main.yml,2952a77afcaa6792bf57b8519b4d777c45963c3d,2024-04-16 10:35:50,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",2952a77afcaa6792bf57b8519b4d777c45963c3d,2024-04-16 10:35:50,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",0,0
stylidev/ai-code-reviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",5c13a26204b18fc9903b4353f8a18ebd7b2f022b,2023-12-02 21:08:33,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",254,6
NikitosnikN/go-claude-tg-bot,.github/workflows/gpt_pr_review.yaml,e2d15f6bf01291c7dd432f587bceefd014595be8,2024-06-16 15:43:48,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o""
          exclude: ""**/*.json, **/*.md, **/*.yaml""",e2d15f6bf01291c7dd432f587bceefd014595be8,2024-06-16 15:43:48,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o""
          exclude: ""**/*.json, **/*.md, **/*.yaml""",0,0
wandervik/ppoid,.github/workflows/ai-review.yml,e0b7d143d69b0019079234d8f31cc3e7043a2cef,2023-07-24 16:23:09,"name: AI Code Reviewer

on:
 issues:
   types:
     - opened
     - reopened
 pull_request:
   types:
     - opened
     - synchronize
     - reopened
permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md""
",e0b7d143d69b0019079234d8f31cc3e7043a2cef,2023-07-24 16:23:09,"name: AI Code Reviewer

on:
 issues:
   types:
     - opened
     - reopened
 pull_request:
   types:
     - opened
     - synchronize
     - reopened
permissions: write-all

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""**/*.json, **/*.md""
",0,0
celte-team/celte-system,.github/workflows/smart-comment-pr.yml,d9fa53402db46fe5156e9adb52af19dc2f6ab86d,2024-08-28 16:55:07,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-3.5-turbo"" # defaults is ""gpt-4""
          exclude: ""**/*.json, **/*.md, **/*.js, **/*.yml, **/*.yaml "" # Optional: exclude patterns separated by commas",d9fa53402db46fe5156e9adb52af19dc2f6ab86d,2024-08-28 16:55:07,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-3.5-turbo"" # defaults is ""gpt-4""
          exclude: ""**/*.json, **/*.md, **/*.js, **/*.yml, **/*.yaml "" # Optional: exclude patterns separated by commas",0,0
moneyforward/sci_codereview,.github/workflows/code_review.yml,a1c2c6b1e2a8e32f3547993075c58c8b663d1e63,2024-07-18 03:15:12,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",a1c2c6b1e2a8e32f3547993075c58c8b663d1e63,2024-07-18 03:15:12,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",0,0
gilles-cap/ai-code-review-custom,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",5c13a26204b18fc9903b4353f8a18ebd7b2f022b,2023-12-02 21:08:33,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",254,6
isseikz/BacklogEditor,.github/workflows/main.yml,41717c147b8621e7d2a4180ee373509d31bccc62,2024-01-26 12:54:46,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",41717c147b8621e7d2a4180ee373509d31bccc62,2024-01-26 12:54:46,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
tawada/discord-AI-bot,.github/workflows/ai-code-reviewer.yml,88a2b315583de7ed7ecefbffa9e008f628040f1c,2025-01-03 12:58:38,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",88a2b315583de7ed7ecefbffa9e008f628040f1c,2025-01-03 12:58:38,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: aidar-freeed/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o-mini"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas
",0,0
jhopley-stadion/v3-release-workflow,.github/workflows/ai-code-review.yml,de4088c8b20549029a9e72aaef0afd17302b12cb,2024-10-15 10:31:02,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",e5fef5e1a89b7be9b7329ecc63fdeeb5644dd037,2024-10-15 14:31:48,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,4
xencon/aixcl,.github/workflows/code-review.yml,015a0324d35a83dc2da44f493f1fcab855f07643,2024-07-05 09:34:04,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""yarn.lock,dist/**""
",015a0324d35a83dc2da44f493f1fcab855f07643,2024-07-05 09:34:04,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4""
          exclude: ""yarn.lock,dist/**""
",0,0
steckdev/RoofNet,.github/workflows/main.yml,9ee2a33b5abf4cda7129ed74b4e1d7c5054de669,2024-11-17 19:02:49,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" ",9ee2a33b5abf4cda7129ed74b4e1d7c5054de669,2024-11-17 19:02:49,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" ",0,0
oparaskos/fountain-parser,.github/workflows/ai-pull-request.yml,79ba5b4a0a84d837017e8c3bc374ac413f6574a7,2023-11-17 16:39:38,"name: AI Code Reviewer

on:
    pull_request:
        branches:
            - main
        types:
            - ready_for_review

permissions:
    contents: read
    pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",79ba5b4a0a84d837017e8c3bc374ac413f6574a7,2023-11-17 16:39:38,"name: AI Code Reviewer

on:
    pull_request:
        branches:
            - main
        types:
            - ready_for_review

permissions:
    contents: read
    pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.6.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,0
FsevenmProjects/warranty-claims,.github/workflows/main.yml,18bc0065cf05c865adf69f938194838891b6d69d,2024-10-21 09:34:42,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",439e720cd60fdb04e9f7ea7c0ded1e9ec0b34068,2024-10-21 09:44:44,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",0,2
TimothyMendezFeliciano/mesero,.github/workflows/code-review.yml,10a8b9adb8ebed3df2c466b20603beb257ec6fe0,2024-07-10 23:50:05,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
  permissions: write-all
  jobs:
    review:
      runs_on: ubuntu-latest
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3

        - name: AI Code Review Action
          uses: freeedcom/ai-codereviewer@v2.7.0
          with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            OPENAI_API_MODEL: ""gpt-4o"" # Optional: defaults to ""gpt-4""
            exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",a3fc8810947fb2b719827aa9772113e1e0dfe238,2024-07-11 00:03:06,"name: AI Code Reviewer

on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Review Action
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is there by default so you just need to keep it like it is and not necessarily need to add it as secret as it will throw an error. [More Details](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4"" # Optional: defaults to ""gpt-4""
          exclude: ""**/*.json, **/*.md"" # Optional: exclude patterns separated by commas",0,3
Git-beyd/beyd-ai-codereviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",b8580d77754f8d9251bc38b1c3ad637ce1bea02b,2023-04-22 15:24:08,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",30,5
Burnout156/AdmComputadores,.github/workflows/chat-gpt.yml,053c6737d511f542f1c524394acfd14d9c0b3380,2023-01-28 13:25:17,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",a70f6749856a02a3dd0d23eeb32db8c57a64ddb9,2023-01-28 14:00:44,"on: [push, pull_request]

name: ChatGPT CodeReview

permissions:
  contents: write
  pull-requests: write
  issues: read
  packages: none

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
",0,8
r-vieira/ai-code-reviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",5c13a26204b18fc9903b4353f8a18ebd7b2f022b,2023-12-02 21:08:33,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",254,6
shixin-guo/zoom-bots,.github/workflows/main.yml,1a52320e335c76f37049b096ced6659d1d88764e,2023-03-18 11:02:54,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",1a52320e335c76f37049b096ced6659d1d88764e,2023-03-18 11:02:54,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0
actions-marketplace-validations/kxxt_chatgpt-action,.github/workflows/chatgpt.yml,1f5b03dbb8e10886e1c9a4435f4bb4409c43feb3,2022-12-08 04:58:31,"on: [pull_request]

name: Test ChatGPT

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: hello
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",1f5b03dbb8e10886e1c9a4435f4bb4409c43feb3,2022-12-08 04:58:31,"on: [pull_request]

name: Test ChatGPT

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: hello
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0
nice7677/study-about-object-with-chat-gpt,.github/workflows/cr.yml,2437dc9e32d37d521f2b7e1cccca9bdb1a21ab46,2023-07-31 05:54:30,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean

",304501512fd564566cfca0afa15d68ee63bb976c,2023-07-31 05:56:16,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.3
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.OPENAI_API_KEY }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LANGUAGE: Korean

",0,1
Vladyslav103/chatgpt-action,.github/workflows/chatgpt.yml,e6a997065f67c7d1607ad5e6cd97c41280096ace,2024-06-10 12:32:00,"on: [pull_request]

name: Test ChatGPT

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: hello
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",e6a997065f67c7d1607ad5e6cd97c41280096ace,2024-06-10 12:32:00,"on: [pull_request]

name: Test ChatGPT

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: hello
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,0
nimowagukari/golang-environment,.github/workflows/ai-codereviewer.yml,02bebc17c6652cb10b6f6c5102742c6809e60f4c,2024-10-26 10:55:32,"name: AI Code Reviewer
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4o""
          exclude: ""**/*.json, **/*.md""
",b9e3769e7e5d7131d08b5ba980f429d9a3c2f519,2024-11-03 02:56:09,"name: AI Code Reviewer
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: AI Code Reviewer
        uses: freeedcom/ai-codereviewer@v2.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""**/*.json, **/*.md, **/*.yml, **/*.yaml""
",7,4
kxxt/kxxt-website,.github/workflows/chatgpt.yml,67e14cb7c19ccbc18b455948530b770e32b9ae16,2022-12-07 14:24:55,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",bd40bb9863db1f745f278deded529e12e2b0d6be,2022-12-08 04:32:53,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,1
Maq1995-Jan/GAdemo,.github/workflows/test.yml,31f77336a67923bd267defe2271de004a9c7cf8a,2024-09-06 06:33:10,"name: Tests

on:
    pull_request:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./app/

        strategy:
            matrix:
                python-version: [3.8, 3.9]

        env:
            MODE: ${{ secrets.MODE }}

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}


            - name: Setup Cache
              uses: actions/cache@v4.0.2
              with:
                path: ~/.cache/pip
                key: ${{ hashfiles('main.py') }}-${{ hashfiles('requirements.txt') }}


            - name: Install dependencies
              run: |
               python -m pip install --upgrade pip
               pip install -r ../requirements.txt

            - name: Test App Code
              run: python ./main_test.py

            - name: AI Code Review Action
              uses: freeedcom/ai-codereviewer@v2.7.0

              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                OPENAI_API_MODEL: ""gpt-3.5-turbo""
                exclude: ""**/*.json, **/*.md""




",31f77336a67923bd267defe2271de004a9c7cf8a,2024-09-06 06:33:10,"name: Tests

on:
    pull_request:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./app/

        strategy:
            matrix:
                python-version: [3.8, 3.9]

        env:
            MODE: ${{ secrets.MODE }}

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}


            - name: Setup Cache
              uses: actions/cache@v4.0.2
              with:
                path: ~/.cache/pip
                key: ${{ hashfiles('main.py') }}-${{ hashfiles('requirements.txt') }}


            - name: Install dependencies
              run: |
               python -m pip install --upgrade pip
               pip install -r ../requirements.txt

            - name: Test App Code
              run: python ./main_test.py

            - name: AI Code Review Action
              uses: freeedcom/ai-codereviewer@v2.7.0

              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                OPENAI_API_MODEL: ""gpt-3.5-turbo""
                exclude: ""**/*.json, **/*.md""




",0,0
cluizdes/starwars_api,.github/workflows/chatgpt-review.yaml,b6b46c177adfa54268dfc69710e36d26feeffff2,2024-07-24 21:35:38,"on:
  pull_request:
    types: [opened, synchronize]

jobs:
  code_review_job:
    runs-on: ubuntu-latest
    name: ChatGPT Code Review
    steps:
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.openai_api_key }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.number }}
          openai_model: ""gpt-3.5-turbo"" # optional
          openai_temperature: 0.5 # optional
          openai_max_tokens: 2048 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: """" # optional",f7783d705a6793b9405efc755fb6a228a67187e7,2024-07-25 00:09:19,"name: ChatGPT Code Review
on:
  pull_request:
    branches:
    - dev
jobs:
  code_review_job:
    runs-on: ubuntu-latest
    steps:
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{secrets.openai_api_key}}
          github_token: ${{secrets.GITHUB_TOKE}}
          github_pr_id: ${{github.event.number}}
          openai_model: ""gpt-3.5-turbo"" # optional
          openai_temperature: 0.5 # optional
          openai_max_tokens: 2048 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: """" # optional",0,5
RahulGP14/GitHub-Runner,.github/workflows/gemini-review.yaml,88a382377e7e254815f35edb00cc72810482c748,2024-11-29 09:06:03,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@v6.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",88a382377e7e254815f35edb00cc72810482c748,2024-11-29 09:06:03,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@v6.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",0,0
ob-f/OpenBot,.github/workflows/gpt_review.yml,6eb23a98b6d233e1a8a6d2c2489ef69870eb04b9,2024-06-02 02:54:50,"name: GPT Review

on:
  issue_comment:
    types: [created]

jobs:
  gpt_review:
    if: github.actor == 'thias15'
    runs-on: ubuntu-latest
    steps:
      - name: Run GPT Code Review
        if: |
          contains(github.event.comment.body, '/gpt-review') ||
          contains(github.event.comment.body, '/gr')
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.number }}
          openai_model: ""gpt-4o"" # optional
          openai_temperature: 0.5 # optional
          openai_max_tokens: 2048 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: """" # optional
",4bfd1ce645d58aaf13e777d763b393a21dfbe920,2024-06-02 08:13:38,"name: GPT Review

on:
  issue_comment:
    types: [created]

jobs:
  gpt_review:
    if: |
      github.actor == 'thias15' &&
      contains(github.event.comment.body, '/gpt-review') ||
      contains(github.event.comment.body, '/gr')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run GPT Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.number }}
          openai_model: ""gpt-4o"" # optional
          openai_temperature: 0.5 # optional
          openai_max_tokens: 2048 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: """" # optional
",0,3
LearningOS/lab5-os8-kxxt,.github/workflows/chatgpt.yml,a427c6414f92652e1b3ec4f95830de590c13d427,2022-12-08 05:56:22,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@v0.2
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'yolo'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",9a442e8f2c122a162510eae181c4b06d6d224bfc,2022-12-08 06:26:02,"on: [pull_request]

name: ChatGPT CodeReview

jobs:
  chatgpt_comment:
    runs-on: ubuntu-latest
    name: Let chatgpt comment on your PR.
    steps:
      - name: ChatGPT comment
        uses: kxxt/chatgpt-action@HEAD
        id: chatgpt
        with:
          number: ${{ github.event.pull_request.number }}
          sessionToken: ${{ secrets.CHATGPT_SESSION_TOKEN }}
          split: 'true'  # Use true to enable the unstable split feature.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",0,2
aziznal/chatgpt-pr-integration-test,.github/workflows/llm-pr-reviw.yml,03e1e35f82ac1f43047ffd96fd195df973fce119,2024-10-07 06:49:53,"name: PR Review

# Controls when the workflow will run
on:
  pull_request:
    branches: [ ""main"" ]

  workflow_dispatch:

jobs:
  code-review:
    name: ChatGPT Code Review
    steps:
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.number }}
          openai_model: ""gpt-4o"" # optional
          openai_temperature: 0.5 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: ""### i18n Keys\n\n### Title Case\n\n**❌ Don't**\n\n```json\n// Using inconsistent casing and vague keys leads to confusion and maintenance issues.\n\n{\n  \""profile\"": {\n    \""title\"": \""Your Profile\"",\n    \""edit\"": \""Edit Profile\"",\n    \""loadingProfile\"": \""Loading Profile\"",\n    \""contact\"": \""Contact Details\""\n  }\n}\n```\n\n**✅ Do**\n\n```json\n// Use Title Case consistently and context-aware naming in i18n keys for better readability.\n\n{\n  \""Profile\"": {\n    \""PageTitle\"": \""Your Profile\"",\n    \""EditButton\"": \""Edit Profile\"",\n    \""LoadingCaption\"": \""Loading Profile\"",\n    \""ContactSection\"": {\n      \""Title\"": \""Contact Details\""\n    }\n  }\n}\n```\n\n### Grouping According to Context\n\n**❌ Don't**\n\n```json\n// Disorganized keys make it hard to locate and manage translations.\n\n{\n  \""Save\"": \""Save\"",\n  \""Cancel\"": \""Cancel\"",\n  \""ProfileTitle\"": \""Your Profile\""\n}\n```\n\n**✅ Do**\n\n```json\n// Group keys based on their context for better organization.\n\n{\n  \""Buttons\"": {\n    \""Save\"": \""Save\"",\n    \""Cancel\"": \""Cancel\""\n  },\n  \""Profile\"": {\n    \""PageTitle\"": \""Your Profile\""\n  }\n}\n```\n\n### Context-Aware Naming (Not Naming According to Content)\n\n**❌ Don't**\n\n```json\n// Naming keys based on content can cause issues if the content changes.\n\n{\n  \""Message\"": {\n    \""Success\"": \""Profile updated successfully.\"",\n    \""Error\"": \""An error occurred.\""\n  }\n}\n```\n\n**✅ Do**\n\n```json\n// Use context-aware names that reflect the purpose or location.\n\n{\n  \""Profile\"": {\n    \""Update\"": {\n      \""SuccessMessage\"": \""Profile updated successfully.\"",\n      \""ErrorMessage\"": \""An error occurred while updating your profile.\""\n    }\n  }\n}\n```\n\n---\n\n### Query and Mutation Hooks\n\n### Naming `useGetUserQuery`, `useUpdateUserMutation`\n\n**❌ Don't**\n\n```tsx\n// Destructuring the result directly can become messy with multiple queries or mutations.\n\nconst { data, isLoading, isError } = useGetUser();\nconst { mutate } = useUpdateUser();\n```\n\n**✅ Do**\n\n```tsx\n// Include 'Query' or 'Mutation' in the hook names and assign the result to a variable.\n\nconst getUserQuery = useGetUserQuery();\nconst updateUserMutation = useUpdateUserMutation();\n\n// Access properties like:\nif (getUserQuery.isLoading) { /* ... */ }\nif (updateUserMutation.isSuccess) { /* ... */ }\n```\n\n### Usage\n\n**❌ Don't**\n\n```tsx\n// Destructuring multiple query results can lead to naming conflicts and less readable code.\n\nconst { data: userData, isLoading: isUserLoading } = useGetUserQuery();\nconst { data: postsData, isLoading: isPostsLoading } = useGetPostsQuery();\n```\n\n**✅ Do**\n\n```tsx\n// Assign the query results to variables for better clarity.\n\nconst getUserQuery = useGetUserQuery();\nconst getPostsQuery = useGetPostsQuery();\n\n// Access data and states like:\nif (getUserQuery.isLoading || getPostsQuery.isLoading) { /* ... */ }\n\nconst userData = getUserQuery.data;\nconst postsData = getPostsQuery.data;\n```\n\n### Don’t Inline Function Definitions in Queries or Mutations\n\n**❌ Don't**\n\n```tsx\n// Inlining functions inside hooks reduces readability and testability.\n\nconst getUserQuery = useQuery('user', async () => {\n  const response = await fetch(`/api/user/${id}`);\n  return response.json();\n});\n```\n\n**✅ Do**\n\n```tsx\n// Define functions separately for clarity and reusability.\n\nconst fetchUser = async () => {\n  const response = await fetch(`/api/user/${id}`);\n  return response.json();\n};\n\nconst getUserQuery = useQuery('user', fetchUser);\n```\n\n### Query Keys\n\n**❌ Don't**\n\n```tsx\n// Using hard-coded query keys can lead to cache mismatches.\n\nconst getUserQuery = useQuery(['user', id], fetchUser);\n```\n\n**✅ Do**\n\n```tsx\n// Use functional query keys for consistency and maintainability.\n\nconst getUserQueryKey = (id: string) => ['user', id];\n\nconst getUserQuery = useQuery(getUserQueryKey(id), fetchUser);\n```\n\n---\n\n### HTML and Markup\n\n### Leaving New Lines Between Tags\n\n**❌ Don't**\n\n```tsx\n// Without proper spacing and indentation, the markup becomes hard to read.\n\nfunction App() {\n  return (\n    <div>\n    	<Header>\n    		<Logo/>\n    		<NavBar/>\n    	</Header>\n    	<Main>\n    		<Section>\n    			<Article/>\n    			<Aside/>\n    		</Section>\n    	</Main>\n    	<Footer>\n    		<ContactInfo/>\n    		<SocialLinks/>\n    	</Footer>\n    </div>\n  );\n}\n```\n\n**✅ Do**\n\n```tsx\n// Adding new lines and proper indentation improves readability.\n\nfunction App() {\n  return (\n    <div>\n      <Header>\n        <Logo />\n        <NavBar />\n      </Header>\n\n      <Main>\n        <Section>\n          <Article />\n          <Aside />\n        </Section>\n      </Main>\n\n      <Footer>\n        <ContactInfo />\n        <SocialLinks />\n      </Footer>\n    </div>\n  );\n}\n```\n\n---\n\n### Spacing Out Chunks of Code\n\n**❌ Don't**\n\n```tsx\n// Cluttered code blocks with inline functions reduce readability.\n\nfunction processData(data: DataType[]) {\n  const processed = data.map(item => {\n    const adjustedValue = (item.value * item.multiplier) - item.offset;\n    return adjustedValue / item.divisor;\n  }).filter(value => {\n    return value > threshold && !excludedValues.includes(value);\n  }).reduce((accumulator, value) => {\n    return accumulator + value;\n  }, 0);\n  return processed;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Break down the code and add spaces between logical chunks for better readability.\n\nfunction processData(data: DataType[]) {\n  const processed = data.map(item => {\n    const adjustedValue = (item.value * item.multiplier) - item.offset;\n    return adjustedValue / item.divisor;\n  });\n\n  const filtered = processed.filter(value => {\n    return value > threshold && !excludedValues.includes(value);\n  });\n\n  const total = filtered.reduce((accumulator, value) => {\n    return accumulator + value;\n  }, 0);\n\n  return total;\n}\n```\n\n---\n\n### Commented Code\n\n**❌ Don't**\n\n```tsx\n// Leaving commented code within functions clutters the codebase and can cause confusion.\n\nfunction calculateResults(data: DataType[]) {\n  // const intermediateResults = oldCalculationMethod(data); // Deprecated method\n\n  const results = data.map(item => item.value * factor);\n  return results;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Remove commented-out code to keep the codebase clean.\n\nfunction calculateResults(data: DataType[]) {\n  const results = data.map(item => item.value * factor);\n  return results;\n}\n```\n\n---\n\n### Colocating Components\n\n**❌ Don't**\n\n```\n/pages\n  /profile\n    page.tsx\n    Header.tsx\n    Details.tsx\n```\n\n**✅ Do**\n\n```\n/pages\n  /profile\n    page.tsx\n    /components\n      Header.tsx\n      Details.tsx\n```\n\n---\n\n### Documentation\n\n**❌ Don't**\n\n```tsx\n// Functions without documentation can be confusing.\n\nfunction generateReport(data: DataType[]): ReportType {\n  // complex report generation logic\n  return report;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Provide a description for better understanding.\n\n/**\n * Generates a comprehensive report from the provided data.\n */\nfunction generateReport(data: DataType[]): ReportType {\n  // complex report generation logic\n  return report;\n}\n```\n\n---\n\n### Components\n\n**❌ Don't**\n\n```\n// Creating components without Storybook entries limits their testability.\n\n/src/components/Button.tsx\n```\n\n**✅ Do**\n\n```\n// Add Storybook entries and previews for better documentation and testing.\n\n/src/components/Button.tsx\n/src/components/Button.stories.tsx\n/src/style-guide/ButtonPreview.tsx\n```\n\n---\n\n### Function Args\n\n**❌ Don't**\n\n```tsx\n// Functions with multiple parameters can become unwieldy.\n\nfunction createUser(name: string, email: string, age: number, address: string) {\n  // create user logic\n}\n```\n\n**✅ Do**\n\n```tsx\n// Use an object to pass multiple parameters and start function names with verbs.\n\ninterface UserDetails {\n  name: string;\n  email: string;\n  age: number;\n  address: string;\n}\n\n/**\n * Creates a new user with the provided details.\n */\nfunction createUser(userDetails: UserDetails) {\n  // create user logic\n}\n```\n\n---\n\n### Ternary Usage (Outside of JSX)\n\n**❌ Don't**\n\n```tsx\n// Complex ternary operations reduce code clarity.\n\nconst status = user.isActive\n  ? user.isAdmin\n    ? 'Active Admin'\n    : 'Active User'\n  : 'Inactive User';\n```\n\n**✅ Do**\n\n```tsx\n// Use if-else statements for complex conditions.\n\nlet status: string;\n\nif (user.isActive) {\n  if (user.isAdmin) {\n    status = 'Active Admin';\n  } else {\n    status = 'Active User';\n  }\n} else {\n  status = 'Inactive User';\n}\n```\n\n---\n\n### useEffect (and Similar Hooks)\n\n**❌ Don't**\n\n```tsx\n// Ignoring dependencies can cause unexpected behavior.\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(() => {\n  fetchData();\n}, []);\n```\n\n**✅ Do**\n\n```tsx\n// Include all dependencies to ensure the effect runs correctly.\n\nuseEffect(() => {\n  fetchData();\n}, [fetchData]);\n```\n\n---\n\n### Type Safety\n\n### Don’t Use Type Coercion `as`\n\n**❌ Don't**\n\n```tsx\n// Forcing a type can hide potential errors.\n\nconst user = getUser() as UserType;\n```\n\n**✅ Do**\n\n```tsx\n// Use type guards or proper type assertions.\n\nconst userData = getUser();\n\nif (isUserType(userData)) {\n  const user: UserType = userData;\n  // proceed with user\n}\n```\n\n### Don’t Use Force Non-Null Operator `!`\n\n**❌ Don't**\n\n```tsx\n// Using '!' can lead to runtime errors if the value is null or undefined.\n\nconst username: string = user.name!;\n```\n\n**✅ Do**\n\n```tsx\n// Check for null or undefined before using the value.\n\nif (user.name !== undefined && user.name !== null) {\n  const username: string = user.name;\n}\n```\n\n---\n\n### New Page Creation\n\n**❌ Don't**\n\n```tsx\n// Using generic component names and missing metadata.\n\nexport default function Page() {\n  return <div>Welcome</div>;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Name the component appropriately and add metadata.\n\nexport const metadata = {\n  title: 'Welcome Page',\n};\n\n/**\n * Renders the welcome page for new users.\n */\nexport default function WelcomePage() {\n  return <div>Welcome</div>;\n}\n```\n\n---\n\n### General Guidelines\n\n### Handle Empty States, Error States, and Loading Indicators\n\n**❌ Don't**\n\n```tsx\n// Not handling various states leads to poor user experience.\n\nfunction UserList() {\n  const getUsersQuery = useGetUsersQuery();\n\n  return (\n    <ul>\n      {getUsersQuery.data.users.map(user => (\n        <li key={user.id}>{user.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n\n**✅ Do**\n\n```tsx\n// Handle loading, error, and empty states for a better user experience.\n\nfunction UserList() {\n  const getUsersQuery = useGetUsersQuery();\n\n  if (getUsersQuery.isLoading) return <LoadingSpinner />;\n  if (getUsersQuery.isError) return <ErrorMessage />;\n\n  if (getUsersQuery.data.users.length === 0) return <EmptyState />;\n\n  return (\n    <ul>\n      {getUsersQuery.data.users.map(user => (\n        <li key={user.id}>{user.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n\n---\n\n### Test\n\n### Colocate Test Files with What You’re Testing (Including Storybook)\n\n**❌ Don't**\n\n```\n/src\n  /components\n    Button.tsx\n/tests\n  Button.test.tsx\n/stories\n  Button.stories.tsx\n```\n\n**✅ Do**\n\n```\n/src\n  /components\n    Button.tsx\n    Button.test.tsx\n    Button.stories.tsx\n```\n\n---\n\n### Imports\n\n**❌ Don't**\n\n```tsx\n// Using relative imports for common utilities leads to messy import statements.\n\nimport { formatDate } from '../../../utils/formatDate';\n```\n\n**✅ Do**\n\n```tsx\n// Use alias imports for cleaner and more maintainable code.\n\nimport { formatDate } from '@utils/formatDate';\n```\n\n---\n\n### Interfaces\n\n### Keep Component Interfaces Small and Flat\n\n**❌ Don't**\n\n```tsx\n// Large interfaces with nested objects reduce reusability.\n\ninterface ComplexUserProps {\n  user: {\n    personalInfo: {\n      name: string;\n      age: number;\n    };\n    contactInfo: {\n      email: string;\n      phone: string;\n    };\n  };\n}\n\nfunction UserCard(props: ComplexUserProps) {\n  // component logic\n}\n```\n\n**✅ Do**\n\n```tsx\n// Use flat interfaces with primitive types for better reusability.\n\ninterface UserProps {\n  name: string;\n  age: number;\n  email: string;\n  phone: string;\n}\n\nfunction UserCard(props: UserProps) {\n  // component logic\n}\n```\nprovide feedback about the code in a concise manner. list out potential issues according to these guidelines and make it easy to find the files in which they occur""

",dc72a6609329f1b8a6b073aee952763424fb8c6e,2024-10-07 06:59:47,"name: PR Review

# Controls when the workflow will run
on:
  pull_request:
    branches: [ ""main"" ]

  workflow_dispatch:

jobs:
  code-review:
    name: ChatGPT Code Review
    runs-on: ubuntu-latest
    steps:
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.number }}
          openai_model: ""gpt-4o"" # optional
          openai_temperature: 0.5 # optional
          mode: files # files or patch
          language: en # optional, default is 'en'
          custom_prompt: ""### i18n Keys\n\n### Title Case\n\n**❌ Don't**\n\n```json\n// Using inconsistent casing and vague keys leads to confusion and maintenance issues.\n\n{\n  \""profile\"": {\n    \""title\"": \""Your Profile\"",\n    \""edit\"": \""Edit Profile\"",\n    \""loadingProfile\"": \""Loading Profile\"",\n    \""contact\"": \""Contact Details\""\n  }\n}\n```\n\n**✅ Do**\n\n```json\n// Use Title Case consistently and context-aware naming in i18n keys for better readability.\n\n{\n  \""Profile\"": {\n    \""PageTitle\"": \""Your Profile\"",\n    \""EditButton\"": \""Edit Profile\"",\n    \""LoadingCaption\"": \""Loading Profile\"",\n    \""ContactSection\"": {\n      \""Title\"": \""Contact Details\""\n    }\n  }\n}\n```\n\n### Grouping According to Context\n\n**❌ Don't**\n\n```json\n// Disorganized keys make it hard to locate and manage translations.\n\n{\n  \""Save\"": \""Save\"",\n  \""Cancel\"": \""Cancel\"",\n  \""ProfileTitle\"": \""Your Profile\""\n}\n```\n\n**✅ Do**\n\n```json\n// Group keys based on their context for better organization.\n\n{\n  \""Buttons\"": {\n    \""Save\"": \""Save\"",\n    \""Cancel\"": \""Cancel\""\n  },\n  \""Profile\"": {\n    \""PageTitle\"": \""Your Profile\""\n  }\n}\n```\n\n### Context-Aware Naming (Not Naming According to Content)\n\n**❌ Don't**\n\n```json\n// Naming keys based on content can cause issues if the content changes.\n\n{\n  \""Message\"": {\n    \""Success\"": \""Profile updated successfully.\"",\n    \""Error\"": \""An error occurred.\""\n  }\n}\n```\n\n**✅ Do**\n\n```json\n// Use context-aware names that reflect the purpose or location.\n\n{\n  \""Profile\"": {\n    \""Update\"": {\n      \""SuccessMessage\"": \""Profile updated successfully.\"",\n      \""ErrorMessage\"": \""An error occurred while updating your profile.\""\n    }\n  }\n}\n```\n\n---\n\n### Query and Mutation Hooks\n\n### Naming `useGetUserQuery`, `useUpdateUserMutation`\n\n**❌ Don't**\n\n```tsx\n// Destructuring the result directly can become messy with multiple queries or mutations.\n\nconst { data, isLoading, isError } = useGetUser();\nconst { mutate } = useUpdateUser();\n```\n\n**✅ Do**\n\n```tsx\n// Include 'Query' or 'Mutation' in the hook names and assign the result to a variable.\n\nconst getUserQuery = useGetUserQuery();\nconst updateUserMutation = useUpdateUserMutation();\n\n// Access properties like:\nif (getUserQuery.isLoading) { /* ... */ }\nif (updateUserMutation.isSuccess) { /* ... */ }\n```\n\n### Usage\n\n**❌ Don't**\n\n```tsx\n// Destructuring multiple query results can lead to naming conflicts and less readable code.\n\nconst { data: userData, isLoading: isUserLoading } = useGetUserQuery();\nconst { data: postsData, isLoading: isPostsLoading } = useGetPostsQuery();\n```\n\n**✅ Do**\n\n```tsx\n// Assign the query results to variables for better clarity.\n\nconst getUserQuery = useGetUserQuery();\nconst getPostsQuery = useGetPostsQuery();\n\n// Access data and states like:\nif (getUserQuery.isLoading || getPostsQuery.isLoading) { /* ... */ }\n\nconst userData = getUserQuery.data;\nconst postsData = getPostsQuery.data;\n```\n\n### Don’t Inline Function Definitions in Queries or Mutations\n\n**❌ Don't**\n\n```tsx\n// Inlining functions inside hooks reduces readability and testability.\n\nconst getUserQuery = useQuery('user', async () => {\n  const response = await fetch(`/api/user/${id}`);\n  return response.json();\n});\n```\n\n**✅ Do**\n\n```tsx\n// Define functions separately for clarity and reusability.\n\nconst fetchUser = async () => {\n  const response = await fetch(`/api/user/${id}`);\n  return response.json();\n};\n\nconst getUserQuery = useQuery('user', fetchUser);\n```\n\n### Query Keys\n\n**❌ Don't**\n\n```tsx\n// Using hard-coded query keys can lead to cache mismatches.\n\nconst getUserQuery = useQuery(['user', id], fetchUser);\n```\n\n**✅ Do**\n\n```tsx\n// Use functional query keys for consistency and maintainability.\n\nconst getUserQueryKey = (id: string) => ['user', id];\n\nconst getUserQuery = useQuery(getUserQueryKey(id), fetchUser);\n```\n\n---\n\n### HTML and Markup\n\n### Leaving New Lines Between Tags\n\n**❌ Don't**\n\n```tsx\n// Without proper spacing and indentation, the markup becomes hard to read.\n\nfunction App() {\n  return (\n    <div>\n    	<Header>\n    		<Logo/>\n    		<NavBar/>\n    	</Header>\n    	<Main>\n    		<Section>\n    			<Article/>\n    			<Aside/>\n    		</Section>\n    	</Main>\n    	<Footer>\n    		<ContactInfo/>\n    		<SocialLinks/>\n    	</Footer>\n    </div>\n  );\n}\n```\n\n**✅ Do**\n\n```tsx\n// Adding new lines and proper indentation improves readability.\n\nfunction App() {\n  return (\n    <div>\n      <Header>\n        <Logo />\n        <NavBar />\n      </Header>\n\n      <Main>\n        <Section>\n          <Article />\n          <Aside />\n        </Section>\n      </Main>\n\n      <Footer>\n        <ContactInfo />\n        <SocialLinks />\n      </Footer>\n    </div>\n  );\n}\n```\n\n---\n\n### Spacing Out Chunks of Code\n\n**❌ Don't**\n\n```tsx\n// Cluttered code blocks with inline functions reduce readability.\n\nfunction processData(data: DataType[]) {\n  const processed = data.map(item => {\n    const adjustedValue = (item.value * item.multiplier) - item.offset;\n    return adjustedValue / item.divisor;\n  }).filter(value => {\n    return value > threshold && !excludedValues.includes(value);\n  }).reduce((accumulator, value) => {\n    return accumulator + value;\n  }, 0);\n  return processed;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Break down the code and add spaces between logical chunks for better readability.\n\nfunction processData(data: DataType[]) {\n  const processed = data.map(item => {\n    const adjustedValue = (item.value * item.multiplier) - item.offset;\n    return adjustedValue / item.divisor;\n  });\n\n  const filtered = processed.filter(value => {\n    return value > threshold && !excludedValues.includes(value);\n  });\n\n  const total = filtered.reduce((accumulator, value) => {\n    return accumulator + value;\n  }, 0);\n\n  return total;\n}\n```\n\n---\n\n### Commented Code\n\n**❌ Don't**\n\n```tsx\n// Leaving commented code within functions clutters the codebase and can cause confusion.\n\nfunction calculateResults(data: DataType[]) {\n  // const intermediateResults = oldCalculationMethod(data); // Deprecated method\n\n  const results = data.map(item => item.value * factor);\n  return results;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Remove commented-out code to keep the codebase clean.\n\nfunction calculateResults(data: DataType[]) {\n  const results = data.map(item => item.value * factor);\n  return results;\n}\n```\n\n---\n\n### Colocating Components\n\n**❌ Don't**\n\n```\n/pages\n  /profile\n    page.tsx\n    Header.tsx\n    Details.tsx\n```\n\n**✅ Do**\n\n```\n/pages\n  /profile\n    page.tsx\n    /components\n      Header.tsx\n      Details.tsx\n```\n\n---\n\n### Documentation\n\n**❌ Don't**\n\n```tsx\n// Functions without documentation can be confusing.\n\nfunction generateReport(data: DataType[]): ReportType {\n  // complex report generation logic\n  return report;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Provide a description for better understanding.\n\n/**\n * Generates a comprehensive report from the provided data.\n */\nfunction generateReport(data: DataType[]): ReportType {\n  // complex report generation logic\n  return report;\n}\n```\n\n---\n\n### Components\n\n**❌ Don't**\n\n```\n// Creating components without Storybook entries limits their testability.\n\n/src/components/Button.tsx\n```\n\n**✅ Do**\n\n```\n// Add Storybook entries and previews for better documentation and testing.\n\n/src/components/Button.tsx\n/src/components/Button.stories.tsx\n/src/style-guide/ButtonPreview.tsx\n```\n\n---\n\n### Function Args\n\n**❌ Don't**\n\n```tsx\n// Functions with multiple parameters can become unwieldy.\n\nfunction createUser(name: string, email: string, age: number, address: string) {\n  // create user logic\n}\n```\n\n**✅ Do**\n\n```tsx\n// Use an object to pass multiple parameters and start function names with verbs.\n\ninterface UserDetails {\n  name: string;\n  email: string;\n  age: number;\n  address: string;\n}\n\n/**\n * Creates a new user with the provided details.\n */\nfunction createUser(userDetails: UserDetails) {\n  // create user logic\n}\n```\n\n---\n\n### Ternary Usage (Outside of JSX)\n\n**❌ Don't**\n\n```tsx\n// Complex ternary operations reduce code clarity.\n\nconst status = user.isActive\n  ? user.isAdmin\n    ? 'Active Admin'\n    : 'Active User'\n  : 'Inactive User';\n```\n\n**✅ Do**\n\n```tsx\n// Use if-else statements for complex conditions.\n\nlet status: string;\n\nif (user.isActive) {\n  if (user.isAdmin) {\n    status = 'Active Admin';\n  } else {\n    status = 'Active User';\n  }\n} else {\n  status = 'Inactive User';\n}\n```\n\n---\n\n### useEffect (and Similar Hooks)\n\n**❌ Don't**\n\n```tsx\n// Ignoring dependencies can cause unexpected behavior.\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(() => {\n  fetchData();\n}, []);\n```\n\n**✅ Do**\n\n```tsx\n// Include all dependencies to ensure the effect runs correctly.\n\nuseEffect(() => {\n  fetchData();\n}, [fetchData]);\n```\n\n---\n\n### Type Safety\n\n### Don’t Use Type Coercion `as`\n\n**❌ Don't**\n\n```tsx\n// Forcing a type can hide potential errors.\n\nconst user = getUser() as UserType;\n```\n\n**✅ Do**\n\n```tsx\n// Use type guards or proper type assertions.\n\nconst userData = getUser();\n\nif (isUserType(userData)) {\n  const user: UserType = userData;\n  // proceed with user\n}\n```\n\n### Don’t Use Force Non-Null Operator `!`\n\n**❌ Don't**\n\n```tsx\n// Using '!' can lead to runtime errors if the value is null or undefined.\n\nconst username: string = user.name!;\n```\n\n**✅ Do**\n\n```tsx\n// Check for null or undefined before using the value.\n\nif (user.name !== undefined && user.name !== null) {\n  const username: string = user.name;\n}\n```\n\n---\n\n### New Page Creation\n\n**❌ Don't**\n\n```tsx\n// Using generic component names and missing metadata.\n\nexport default function Page() {\n  return <div>Welcome</div>;\n}\n```\n\n**✅ Do**\n\n```tsx\n// Name the component appropriately and add metadata.\n\nexport const metadata = {\n  title: 'Welcome Page',\n};\n\n/**\n * Renders the welcome page for new users.\n */\nexport default function WelcomePage() {\n  return <div>Welcome</div>;\n}\n```\n\n---\n\n### General Guidelines\n\n### Handle Empty States, Error States, and Loading Indicators\n\n**❌ Don't**\n\n```tsx\n// Not handling various states leads to poor user experience.\n\nfunction UserList() {\n  const getUsersQuery = useGetUsersQuery();\n\n  return (\n    <ul>\n      {getUsersQuery.data.users.map(user => (\n        <li key={user.id}>{user.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n\n**✅ Do**\n\n```tsx\n// Handle loading, error, and empty states for a better user experience.\n\nfunction UserList() {\n  const getUsersQuery = useGetUsersQuery();\n\n  if (getUsersQuery.isLoading) return <LoadingSpinner />;\n  if (getUsersQuery.isError) return <ErrorMessage />;\n\n  if (getUsersQuery.data.users.length === 0) return <EmptyState />;\n\n  return (\n    <ul>\n      {getUsersQuery.data.users.map(user => (\n        <li key={user.id}>{user.name}</li>\n      ))}\n    </ul>\n  );\n}\n```\n\n---\n\n### Test\n\n### Colocate Test Files with What You’re Testing (Including Storybook)\n\n**❌ Don't**\n\n```\n/src\n  /components\n    Button.tsx\n/tests\n  Button.test.tsx\n/stories\n  Button.stories.tsx\n```\n\n**✅ Do**\n\n```\n/src\n  /components\n    Button.tsx\n    Button.test.tsx\n    Button.stories.tsx\n```\n\n---\n\n### Imports\n\n**❌ Don't**\n\n```tsx\n// Using relative imports for common utilities leads to messy import statements.\n\nimport { formatDate } from '../../../utils/formatDate';\n```\n\n**✅ Do**\n\n```tsx\n// Use alias imports for cleaner and more maintainable code.\n\nimport { formatDate } from '@utils/formatDate';\n```\n\n---\n\n### Interfaces\n\n### Keep Component Interfaces Small and Flat\n\n**❌ Don't**\n\n```tsx\n// Large interfaces with nested objects reduce reusability.\n\ninterface ComplexUserProps {\n  user: {\n    personalInfo: {\n      name: string;\n      age: number;\n    };\n    contactInfo: {\n      email: string;\n      phone: string;\n    };\n  };\n}\n\nfunction UserCard(props: ComplexUserProps) {\n  // component logic\n}\n```\n\n**✅ Do**\n\n```tsx\n// Use flat interfaces with primitive types for better reusability.\n\ninterface UserProps {\n  name: string;\n  age: number;\n  email: string;\n  phone: string;\n}\n\nfunction UserCard(props: UserProps) {\n  // component logic\n}\n```\nprovide feedback about the code in a concise manner. list out potential issues according to these guidelines and make it easy to find the files in which they occur""

",0,1
huypham85/MemeGenerator,.github/workflows/code-review.yml,14ba34c9e8f333e73077b97f4c4eecbe31fdd305,2024-11-15 04:56:13,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@latest
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""",14ba34c9e8f333e73077b97f4c4eecbe31fdd305,2024-11-15 04:56:13,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@latest
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""",0,0
cirolini/genai-code-review,.github/workflows/genai_code_review.yml,e4f9c023bb48b144777c65a99d38e9bbc267153e,2024-05-21 13:37:55,"on:
  pull_request:
    types: [opened, synchronize]

jobs:
  genai_code_review:
    runs-on: ubuntu-latest
    name: GenAI Code Review
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.pull_request.number }}
          openai_model: ""gpt-3.5-turbo""
          openai_temperature: 0.5
          openai_max_tokens: 2048
",c316e1db847ecbcb530c5fb66c102fb8a3454a4d,2024-05-21 14:56:01,"on:
  pull_request:
    types: [opened, synchronize]

jobs:
  genai_code_review:
    runs-on: ubuntu-latest
    name: GenAI Code Review
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: GenAI Code Review
        uses: cirolini/genai-code-review@v2
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_pr_id: ${{ github.event.pull_request.number }}
          openai_model: ""gpt-3.5-turbo""
          openai_temperature: 0.5
          openai_max_tokens: 2048
",0,10
RahulGP14/eks,.github/workflows/gemini-review.yaml,7d55f1ad9b5f3b4e6eb262066ccb39bcb9af1e51,2024-11-29 09:06:21,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@v6.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",7d55f1ad9b5f3b4e6eb262066ccb39bcb9af1e51,2024-11-29 09:06:21,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@v6.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",0,0
Azure/Bridge-To-Kubernetes,.github/workflows/chatgpt-review.yml,1a8d7b91c07cb8af41173881cfd83777c48f2968,2023-04-03 21:02:32,"name: ChatGPT Review

on:
  pull_request_target:
    types: [opened, reopened, edited, ready_for_review]
    branches:
      - 'main'

jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
    - uses: feiskyer/ChatGPT-Reviewer@v0.3
      name: ChatGPT Review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.B2K_OPENAI_API_KEY }}",7952c8bea7d8efbf9d77f6cbb07f47205f896fa8,2024-02-21 21:41:03,"name: ChatGPT Review

on:
  pull_request_target:
    types: [opened, reopened, edited, ready_for_review]
    branches:
      - 'main'

jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - uses: feiskyer/ChatGPT-Reviewer@731b69f6b38eb33cff485254a4258790ebfba257 # v0.3
      name: ChatGPT Review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.B2K_OPENAI_API_KEY }}",324,2
tareq89/advanced-react-table,.github/workflows/chatgpt-review.yml,00dc50e48958146a192daa247015bbc03b1a555b,2024-10-09 05:31:27,"name: ChatGPT Review

on: [pull_request]


jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
    - uses: feiskyer/ChatGPT-Reviewer@v0
      name: ChatGPT Review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        # OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
      # Optional configurations:
      # with:
      #   model: ""gpt-3.5-turbo""
      #   temperature: 0.2
      #   review_per_file: true
          comment_per_file: true
",1396398f1142a39b009c3e59416a6df491a53595,2024-10-09 06:03:21,"name: ChatGPT Review
on: [pull_request]

jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install dependencies
        run: |
          pip install openai==0.28  # Pin to an older version

      - uses: feiskyer/ChatGPT-Reviewer@v0
        name: ChatGPT Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          comment_per_file: true
",0,3
jash459/Code-debugger,.github/workflows/chatgpt-review code.yaml,3b114cff9683c459eb6fe7bccca232cead968470,2024-01-15 10:59:43,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event.comment.user.login == 'adshao' && startsWith(github.event.comment.body, 'chatgpt')
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        PROGRAMMING_LANGUAGE: 'JavaScript'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'",3b114cff9683c459eb6fe7bccca232cead968470,2024-01-15 10:59:43,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event.comment.user.login == 'adshao' && startsWith(github.event.comment.body, 'chatgpt')
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        PROGRAMMING_LANGUAGE: 'JavaScript'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'",0,0
adshao/go-binance,.github/workflows/review.yml,ea518551c7159e03b40aef127a9e0c1598866678,2023-03-03 03:50:26,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    if: github.event.comment.user.login == 'adshao' && startsWith(github.event.comment.body, 'chatgpt')
    runs-on: ubuntu-latest
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.1.2
      with:
        LANGUAGE: 'English'
        PROGRAMMING_LANGUAGE: 'Go'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
        FULL_REVIEW_COMMENT: 'chatgpt'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
",25b12644ec40dcb3fd54add6c72851ba6734d0da,2023-04-24 10:30:00,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    if: |
      github.event_name == 'pull_request' ||
        (github.event.comment.user.login == 'adshao' &&
          startsWith(github.event.comment.body, 'chatgpt'))
    runs-on: ubuntu-latest
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        PROGRAMMING_LANGUAGE: 'Go'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
        FULL_REVIEW_COMMENT: 'chatgpt'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
",52,3
Black-Golden/go-binance,.github/workflows/review.yml,ea518551c7159e03b40aef127a9e0c1598866678,2023-03-03 03:50:26,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    if: github.event.comment.user.login == 'adshao' && startsWith(github.event.comment.body, 'chatgpt')
    runs-on: ubuntu-latest
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.1.2
      with:
        LANGUAGE: 'English'
        PROGRAMMING_LANGUAGE: 'Go'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
        FULL_REVIEW_COMMENT: 'chatgpt'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
",25b12644ec40dcb3fd54add6c72851ba6734d0da,2023-04-24 10:30:00,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    if: |
      github.event_name == 'pull_request' ||
        (github.event.comment.user.login == 'adshao' &&
          startsWith(github.event.comment.body, 'chatgpt'))
    runs-on: ubuntu-latest
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        PROGRAMMING_LANGUAGE: 'Go'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
        FULL_REVIEW_COMMENT: 'chatgpt'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
",52,3
viettrungIT3/codeIgniter4-docker,.github/workflows/code-review.yml,3b2c0f8b3a5f98688f3519979836c5f47563cfcc,2024-11-17 06:19:41,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@latest
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",3e5a93d501f9a6d43aa3d0aa1b67b66487af77e4,2024-11-17 06:37:30,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""
",0,2
zircon-tech/webinar-users-service-api,.github/workflows/ai-pr-reviewer.yml,7476c12ba9015697e954504df019e3e3d7ea24b9,2024-10-02 13:00:12,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-session
          aws-region: us-east-2

      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",9c331ae079142f786b4d0b8e1326a9edbc8e1c65,2024-10-02 13:53:13,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-session
          aws-region: us-east-2

      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: true
          review_simple_changes: true
          review_comment_lgtm: true
          bedrock_light_model: 'us.anthropic.claude-3-haiku-20240307-v1:0'
          bedrock_heavy_model: 'us.anthropic.claude-3-5-sonnet-20240620-v1:0'
",0,3
chbinousamy/helm-charts,.github/workflows/ChatGPT-CodeReview.yml,3b5bbdcdf75332d2278ec45cccf19029ad5a8563,2023-03-05 10:48:38,"name: ChatGPT Review

on: [pull_request]


jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
    - uses: feiskyer/ChatGPT-Reviewer@v0
      name: ChatGPT Review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.CHATGPT_SESSION_TOKEN }}
      # Optional configurations:
      # with:
      #   model: ""gpt-3.5-turbo""
      #   temperature: 0.2
      #   review_per_file: true
      #   comment_per_file: true


",3b5bbdcdf75332d2278ec45cccf19029ad5a8563,2023-03-05 10:48:38,"name: ChatGPT Review

on: [pull_request]


jobs:
  chatgpt-review:
    name: ChatGPT Review
    runs-on: ubuntu-latest
    steps:
    - uses: feiskyer/ChatGPT-Reviewer@v0
      name: ChatGPT Review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.CHATGPT_SESSION_TOKEN }}
      # Optional configurations:
      # with:
      #   model: ""gpt-3.5-turbo""
      #   temperature: 0.2
      #   review_per_file: true
      #   comment_per_file: true


",0,0
mmuyakwa/bash-scripts,.github/workflows/ai-pr-reviewer.yml,71fc198356d682f0f4fe51ea4c2d6e1c70a22665,2024-07-05 05:02:40,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourOidcIamRole
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",71fc198356d682f0f4fe51ea4c2d6e1c70a22665,2024-07-05 05:02:40,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourOidcIamRole
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
awsxuhi/github-actions-cicd,.github/workflows/ai_pr_codereview_v2_claude.yml,b358c32203e43f5eddbf4b145ab73171d9530906,2024-09-16 14:00:29,"# Code Review Version 2 - Claude3
#
# This version of the workflow directly uses `tmokmss/bedrock-pr-reviewer@main` for code review.
# Testing has shown that it works successfully.
#

name: Code Review Version 2 - Claude3

on:
  pull_request:
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write
  id-token: write
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  code_review:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0

      # - uses: GrantBirki/git-diff-action@v2.4.0
      #   id: git-diff
      #   with:
      #     raw_diff_file_output: diff.txt
      #     file_output_only: ""true""

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-session-name: gha-session-${{ github.run_id }}-${{ github.job }}
          role-session-name: gha-session
          # role-session-name: gha-session-10871592797-review
          role-duration-seconds: 3600

      - name: Get AWS credentials (Optional Step)
        run: aws sts get-caller-identity

      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",9ad1ae8ee75938eb03f2b80c760e437cd05b271a,2024-09-18 16:29:23,"# Code Review Version 2 - Claude3
#
# This version of the workflow directly uses `tmokmss/bedrock-pr-reviewer@main` for code review.
# Testing has shown that it works successfully.
#

name: Code Review Version 2 - Claude3

on:
  workflow_dispatch:
  # pull_request:

permissions:
  issues: write
  pull-requests: write
  id-token: write
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  code_review_v2_claude:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0

      # - uses: GrantBirki/git-diff-action@v2.4.0
      #   id: git-diff
      #   with:
      #     raw_diff_file_output: diff.txt
      #     file_output_only: ""true""

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-session
          role-duration-seconds: 3600

      - name: Get AWS credentials (Optional Step)
        run: aws sts get-caller-identity

      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",2,6
dding94/s2w,.github/workflows/ai-pr-reviewer.yml,1d5bfc831e72911f3308c67df60e36a70e0514aa,2024-11-18 02:59:15,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false",5325262c0d75f592bdc364e8edddc6df8618ecde,2024-11-18 07:23:26,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          bedrock_light_model: ""anthropic.claude-3-5-sonnet-20240620-v1:0""
          bedrock_heavy_model: ""anthropic.claude-3-5-sonnet-20240620-v1:0""",0,1
rnanthan/postgres-table-schema-generator,.github/workflows/main.yml,38fbb5e0876f72181ff099ce3031f5e3cfad8fd8,2024-06-28 12:52:00,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourOidcIamRole
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",38fbb5e0876f72181ff099ce3031f5e3cfad8fd8,2024-06-28 12:52:00,"name: Code Review

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/YourOidcIamRole
          role-session-name: gha-session
          aws-region: us-east-1
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
",0,0
aws-samples/jp-prototyping-blog,.github/workflows/review.yaml,6b917118fa4244df6dcbcbd7843c58bbc863dd10,2023-11-16 09:30:53,"name: Automated review

permissions:
  contents: read
  pull-requests: write
  id-token: write # This is required for requesting the JWT

on:
  pull_request_target:
  pull_request_review_comment:
    types: [created]


concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  TARGET_AWS_REGION: us-east-1
jobs:
  Run-Bedrock-review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-session
          aws-region: ${{ env.TARGET_AWS_REGION }}
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: true
          language: ja-JP
          review_simple_changes: true
          review_comment_lgtm: true
          only_allow_collaborator: true
          path_filters: |
            **/*.md
          summarize_release_notes: |
            提出されたブログ記事を読んで、100文字程度に内容を要約してください。要約はソフトウェアエンジニアが読んで分かりやすいものにしてください。
            入力された内容にブログ記事が含まれていない場合は、簡単に入力された内容をまとめてください。
          review_file_diff: |
            あなたはエンジニア向けブログ記事の編集者です。記事の原稿が入力されるので、以下の観点でレビューをしてください。
              - 分かりやすい日本語か
              - 誤解の余地がある表現がないか
              - 技術的な誤りを含んでいないか
              - より良くできるポイントはないか
            どんな些細な点でも構わないので、気になる点があれば指摘してください。
",aa8be1bf278eb3e00a30063a98cb5c99ecef23a0,2023-11-17 08:54:11,"name: Automated review

permissions:
  contents: read
  pull-requests: write
  id-token: write # This is required for requesting the JWT

on:
  pull_request_target:
    types: [opened, reopened]
  pull_request_review_comment:
    types: [created]


concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}


env:
  TARGET_AWS_REGION: us-east-1
jobs:
  Run-Bedrock-review:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: gha-session
          aws-region: ${{ env.TARGET_AWS_REGION }}
      - name: PR review
        uses: tmokmss/bedrock-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          debug: true
          language: ja-JP
          review_simple_changes: true
          review_comment_lgtm: true
          only_allow_collaborator: true
          path_filters: |
            **/*.md
          summarize_release_notes: |
            提出されたブログ記事を読んで、100文字程度に内容を要約してください。要約はソフトウェアエンジニアが読んで分かりやすいものにしてください。
            入力された内容にブログ記事が含まれていない場合は、簡単に入力された内容をまとめてください。
          review_file_diff: |
            あなたはエンジニア向けブログ記事の編集者です。記事の原稿が入力されるので、以下の観点でレビューをしてください。
              - 分かりやすい日本語か
              - 誤解の余地がある表現がないか
              - 技術的な誤りを含んでいないか
              - より良くできるポイントはないか
            どんな些細な点でも構わないので、気になる点があれば指摘してください。
",0,1
Sergeew-K-V/cartographers_client,.github/workflows/robin.yml,1077cf2e9ae05ba28359f0edf307dc0313746f2b,2023-06-28 13:14:25,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",95ca96abd7937c7b0141a9a92c58b696fa0c1f52,2023-06-29 12:35:34,"name: Robin AI Reviewer

on:
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.3.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""public/*""
            ""package-lock.json""
",0,2
Singho9/testapp,.github/workflows/main.yml,914c8a4b6338e06cce3837922de2f537fb741a3c,2023-07-06 10:48:08,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: startsWith(github.event.comment.body, 'chatgpt')
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2
      with:
        PROGRAMMING_LANGUAGE: 'JavaScript'
        OPENAI_TOKEN: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
",75c6e6afa0599cf0a46da2e9c1fad833ae374258,2023-07-11 06:07:08,"name: Code Review
permissions:
  contents: read
  pull-requests: write
on:
  issue_comment:
    types: [created, deleted]
  pull_request_review_comment:
    types: [created, deleted, edited]
jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        OPENAI_TOKEN: ${{ secrets.OPENAI_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
",4,9
wenijinew/eu.tmux,.github/workflows/main.yml,0952a4413419afe4e68161270322fe8e1a79cf28,2023-08-30 18:00:05,"name: Robin AI Reviewer

on:
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",1c5a23b3bbb5a7d0576a9a1fb6cfde86aaf5feaa,2023-10-31 19:09:33,"name: Robin AI Reviewer

on:
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.5.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",62,3
uday-appdirect/codeball-test,.github/workflows/robin.yml,9fabab1087a2db0654468b9568f6853cfc489df9,2023-07-31 09:43:10,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",f16c36470af1a2fbd6c1a83013d8656f1c7b7407,2023-07-31 11:41:22,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",0,3
hilesystem/local,.github/workflows/robin.yml,9c863ecc67b7b3ecb4bacda98599200f2d08ce9e,2023-05-11 22:03:47,"name: Robin AI Reviewer

on:
  # skip draft PRs
  pull_request:
    - opened
    - reopened
    - synchronize
    - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
",82129357ac0a7d7ac1be84bd38f3856a07bc0677,2023-05-15 21:17:51,"name: Robin AI Reviewer

on:
  pull_request:
    # skip draft PRs
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}",3,2
ZaikinaEvgeniya-2/ZaikinaEvgeniya-2,.github/workflows/robin.yml,6649f1c99655c108843f4cd5cf14fe991acd0ef5,2023-06-28 13:00:22,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",6649f1c99655c108843f4cd5cf14fe991acd0ef5,2023-06-28 13:00:22,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v[INSERT_LATEST_RELEASE]
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",0,0
PathfinderHonorManager/PathfinderHonorManagerUI,.github/workflows/robin.yml,0386edf8151414cd445552094248f7a111303634,2023-07-09 12:46:02,"name: Robin AI Reviewer

on:
  pull_request:
    types: [ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.4.0

        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",0b635d27d2d5aefdd083cfc0e61b2444d4fa799a,2024-07-15 04:32:40,"name: Robin AI Reviewer

on:
  pull_request:
    branches: [main]
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          files_to_ignore: |
            ""README.md""
            ""assets/*""
            ""package-lock.json""
",371,6
IbragimovDP/test-cicd-reviewer,.github/workflows/reviewer.yaml,1ede433d229953efbb85beda006a0c5a11506e29,2023-07-04 08:49:16,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event.comment.user.login == 'IbragimovDP' && startsWith(github.event.comment.body, 'chatgpt')
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2
      with:
        PROGRAMMING_LANGUAGE: 'JavaScript'
        OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'",0d7f3d4bbaadb6769f1a2dba8cdda08ee0e81c8a,2023-07-04 09:10:00,"name: Code Review

on:
  issue_comment:
    types: [created, edited]

jobs:
  code-review:
    runs-on: ubuntu-latest
    if: github.event.comment.user.login == 'IbragimovDP' && startsWith(github.event.comment.body, 'chatgpt')
    steps:
    - name: OpenAI ChatGPT Code Review
      uses: adshao/chatgpt-code-review-action@v0.2.5
      with:
        OPENAI_TOKEN: ${{ secrets.openai_api_key }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FULL_REVIEW_COMMENT: 'chatgpt'
        REVIEW_COMMENT_PREFIX: 'chatgpt:'
",0,3
leonj1/cat-emails,.github/workflows/presubmit-review.yml,86b7007ffa64677a5062953d5e0ca2efaffae7e0,2024-11-24 18:10:40,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  Review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""

",108941c3200718d8003b96c94841108aa6e24bf2,2024-11-24 18:29:45,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [opened, synchronize]

jobs:
  Review:
    runs-on: ubuntu-latest
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""

",0,1
leonj1/devcontainer-gitpod,.github/workflows/presubmit.yml,69a83086a27b1371f1aac8b40aa68343dd4e5000,2024-12-15 22:41:56,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request_review_comment:
    types: [created]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
",69a83086a27b1371f1aac8b40aa68343dd4e5000,2024-12-15 22:41:56,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request_review_comment:
    types: [created]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
",0,0
leonj1/my-indexer,.github/workflows/presumit.yml,56ff42f412f120b3887dd223b5b95b5ef26811ec,2024-11-29 21:52:09,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""",a182f7f33d112bb26296cd208bc565c168fc15d3,2024-11-29 22:13:37,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request_review_comment:
    types: [created]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""",0,2
kheina-com/backend,.github/workflows/test.yml,cdd580ee204ba6052fa9a385f78b0763f944493e,2025-01-14 21:08:46,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""gemini-1.5-flash-latest""
",cdd580ee204ba6052fa9a385f78b0763f944493e,2025-01-14 21:08:46,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""gemini-1.5-flash-latest""
",0,0
LivDevRepeat/GD1019Bachelor,.github/workflows/llm-code-revie.yml,f121a5ffc1d741f0481890e9766abb5564a65faf,2023-08-03 07:38:49,"name: 'code-review'
on: # rebuild any PRs and main branch changes
  pull_request:
    types: [labeled]
jobs:
  code-review:
    if: ${{ contains( github.event.label.name, 'AutoReview') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.4
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          exclude_files: '*.json, *.md, *.yml' # optionally exclude files based on a wildcard expression.
",c1e3e96874451b210ee7fff2105207af1a295c6f,2023-08-03 15:14:43,"name: 'code-review'
on: # rebuild any PRs and main branch changes
  pull_request:
    types: [labeled]
jobs:
  code-review:
    if: ${{ contains( github.event.label.name, 'AutoReview') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.4
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          exclude_files: '*.json, *.md, *.yml, *.meta, *.unity, *.xml' # optionally exclude files based on a wildcard expression.
",0,1
iluwatar/java-design-patterns,.github/workflows/presubmit.yml,1bfdf21469fc2468d11fb579dcfa5f67ad8d68cd,2025-01-12 12:19:45,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""gemini-1.5-flash""
",fee3c43f20ac17e98dd96a8ce07988f5d0dfd120,2025-01-12 16:26:41,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request_target: # Handle forked repository PRs in the base repository context
    types: [opened, synchronize]
  pull_request_review_comment: # Handle review comments
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi

      - name: Check out PR code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run AI Reviewer
        uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""gemini-1.5-flash""
",0,1
vortechstudio/manager,.github/workflows/pr_update.yml,e131957c236159a83937bb7411afd7882a97231c,2024-05-17 19:05:57,"name: UpdatePR
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour obtenir tous les commits

      - name: Mise à jour du titre et de la description
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number ""$GITHUB_EVENT_PATH"")
          COMMITS=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')
          TITLE=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageHeadline' | tail -1)
          TITLE=${TITLE:0:256}
          DESCRIPTION=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')

          if [ -n ""$TITLE"" ]; then
            gh pr edit $PR_NUMBER --title ""$TITLE"" --body ""$DESCRIPTION""
          else
            echo ""Le titre est vide, la mise à jour du PR est annulée.""
          fi

      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.AI_KEY }}
          gpt_model_name: 'gpt-3.5-turbo'
          files_to_ignore: |
            ""public/*""
            ""storage/*""
",b5122da44edd152f948ba57c65100f5009a6af90,2024-05-17 19:10:54,"name: UpdatePR
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  update-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour obtenir tous les commits

      - name: Mise à jour du titre et de la description
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number ""$GITHUB_EVENT_PATH"")
          COMMITS=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')
          TITLE=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageHeadline' | tail -1)
          TITLE=${TITLE:0:256}
          DESCRIPTION=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].messageBody')

          if [ -n ""$TITLE"" ]; then
            gh pr edit $PR_NUMBER --title ""$TITLE"" --body ""$DESCRIPTION""
          else
            echo ""Le titre est vide, la mise à jour du PR est annulée.""
          fi

      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.7.0
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.AI_KEY }}
          gpt_model_name: 'gpt-3.5-turbo-16k'
          files_to_ignore: |
            ""public/*""
            ""storage/*""
            ""README.md""
",0,1
matteobaccan/VUEdashboard,.github/workflows/chatgpt-code-reviewer.yml,12e2e1bac28ab54946158cc48ff173b1eda33e12,2024-08-19 08:40:29,"name: chatgpt-code-reviewer
run-name: chatgpt-code-reviewer
on:
  pull_request:
  workflow_dispatch:

jobs:
  chatgpt-code-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        # with:
        # model: gpt-3.5-turbo
        # max_tokens: 4096
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",092b1e5a2f3ad3f1aaeb80b0b9b6e470fc12bbcb,2024-08-19 08:44:12,"name: chatgpt-code-reviewer
run-name: chatgpt-code-reviewer
on: [pull_request]

jobs:
  chatgpt-code-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        # with:
        # model: gpt-3.5-turbo
        # max_tokens: 4096
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,1
HeyHo-Systems/owlcommander,.github/workflows/code_review.yml,67a486d5199f7e4bd34e98a14b05c4d578fc302f,2024-02-07 09:06:06,"name: 'AI Code Reviewer'

on:
  pull_request:
    branches: [ ""main"" ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.4
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          model_name: 'gpt-4'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          exclude_files: '*.json, *.md, *.yml, *.yaml' # optionally exclude files based on a wildcard expression.",67a486d5199f7e4bd34e98a14b05c4d578fc302f,2024-02-07 09:06:06,"name: 'AI Code Reviewer'

on:
  pull_request:
    branches: [ ""main"" ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.4
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          model_name: 'gpt-4'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          exclude_files: '*.json, *.md, *.yml, *.yaml' # optionally exclude files based on a wildcard expression.",0,0
connectingd0ts/ai-hackathon,.github/workflows/ai-review.yml,9e45a43dd7a03f8e615b99930f5a4b310fb683bf,2024-02-27 19:09:11,"name: 'code-review'
on: # rebuild any PRs and main branch changes
  pull_request:
jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.5.1
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPEN_AI_KEY }}
          exclude_files: '*.json, *.md, *.yml' # optionally exclude files based on a wildcard expression. ",e473db051d67929175444ff7823017c1f97a6f5d,2024-02-27 19:59:21,"name: 'code-review'
on: # rebuild any PRs and main branch changes
  pull_request:
jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: gvasilei/AutoReviewer@0.5.1
        env:
          NODE_OPTIONS: '--experimental-fetch'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPEN_AI_KEY }}
          exclude_files: '*.json, *.md, *.yml' # optionally exclude files based on a wildcard expression. ",0,5
rishi-raj-jain/next.rishi.app,.github/workflows/review.yml,914b30b4cfa1cc13adc51ca5ca25710722d9be8c,2023-09-10 19:56:39,"name: rishi.app PR Code Review via Open AI

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  authorization:
    runs-on: ubuntu-latest
    steps:
      - name: Check if the author is the pull request creator
        id: check_author
        run: |
          if [[ ""${{ github.event.pull_request.user.login }}"" == ""${{ github.event.pull_request.user.login }}"" ]]; then
            echo ""::set-output name=authorized::true""
          else
            echo ""::set-output name=authorized::false""
          fi
  test:
    needs: authorization
    runs-on: ubuntu-latest
    if: needs.authorization.outputs.authorized == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          action: score
          scoring_beginning: |
            Hi ChatGPT, I have a pull request with title ""$title"" and the description is as follows,
            > $description
            I would like to give you the whole diff of the pull request and you need to given a score after
            reviewing the pull request. The score should be a number between 0 and 100 and 85 means the
            the pull request is basically acceptable. You just need to reply a number between 0 and 100,
            e.g., ""85"", and a comment within 30 words. Reply ""Acceptable"" to confirm.
      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          action: review
          review_comment_lgtm: true
",34aa38a989c5318cc85cea4c7749db39e1edcdd4,2023-09-11 07:02:00,"name: Capgo PR Code Review via Open AI

permissions:
  checks: write
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types:
      - opened
      - synchronize

jobs:
  review-and-score:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          action: review
          path_filters: '**/*'
          review_comment_lgtm: true

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          action: score
          path_filters: '**/*'
",0,22
untillpro/qs,.github/workflows/gpt-code-review1.yml,f684e5dc0dd07099458f211a736366d2117b0c5e,2024-06-03 07:36:41,"name: chatgpt-code-reviewer
run-name: chatgpt-code-reviewer
on: [pull_request]
jobs:
  chatgpt-code-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",f684e5dc0dd07099458f211a736366d2117b0c5e,2024-06-03 07:36:41,"name: chatgpt-code-reviewer
run-name: chatgpt-code-reviewer
on: [pull_request]
jobs:
  chatgpt-code-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,0
actions-marketplace-validations/unsafecoerce_chatgpt-action,.github/workflows/chatgpt.yaml,e0c07b58d5917e467ec9eb1989ae03d63b9ebf1d,2023-02-25 11:00:04,"name: ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  chatgpt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          action: code-review
",bb735781ac770a0752719076b14fac96505f9f11,2023-02-25 19:37:53,"name: ChatGPT

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  chatgpt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CHATGPT_ACCESS_TOKEN: ${{ secrets.CHATGPT_ACCESS_TOKEN }}
        with:
          debug: true
          action: score

      - uses: unsafecoerce/chatgpt-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CHATGPT_ACCESS_TOKEN: ${{ secrets.CHATGPT_ACCESS_TOKEN }}
        with:
          debug: true
          action: review
          review_comment_lgtm: true
",0,2
presubmit/ai-reviewer,.github/workflows/presubmit-review.yml,db016fdca9406ab31ff0162648faa2d4059a8061,2024-11-09 13:10:44,"name: Presubmit.ai - Code Review

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
        with:
          llm_model: ""claude-3-5-sonnet-20241022""
          enable_code_review: true
          enable_pr_summary: true
          enable_title_generation: true
          enable_overview_comment: true
",da12ef3ddacc83632e822ae51d96cd5183057766,2024-12-15 14:55:28,"name: Presubmit.ai

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z ""${{ secrets.LLM_API_KEY }}"" ]; then
            echo ""Error: LLM_API_KEY secret is not configured""
            exit 1
          fi
      - uses: presubmit/ai-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: ""claude-3-5-sonnet-20241022""
",36,6
doooss/mono-tailwind-template,.github/workflows/code-reviewer.yml,f78a406e618da4a2ea20f42b844def761fc8f090,2024-07-03 06:50:21,"name: AI Code Reviewer

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
permissions: write-all
jobs:
  chatgpt-code-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        with:
        model: gpt-4o
        # max_tokens: 4096
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",5695dbbbcdb510acc62aea5c0ed1b614286c5372,2024-07-03 06:59:31,"name: AI Code Reviewer
run-name: chatgpt-code-reviewer

on:
  pull_request:
    branches:
      - main
    types:
      - opened
jobs:
  reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT Review
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        with:
          model: gpt-4o
          max_tokens: 4096
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}",0,7
ca-risken/.github,.github/workflows/code-butler.yml,0ee1be24ce67e2a6fa6241762fafe06ee3ecc879,2024-04-03 07:32:26,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",65073a315b5cb1c70e1c1253f0779efe1fccefcb,2024-07-04 07:59:54,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: ja
",92,4
s2mr/L10nLint,.github/workflows/code_butler.yml,7931d1e2624edf213f1856fe15f3b3fa8cee1361,2024-05-07 07:36:08,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/butler-review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: ja
          model: gpt-4-turbo-2024-04-09
  chat:
    if: startsWith(github.event.comment.body, '/butler-chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
          lang: ja
",7931d1e2624edf213f1856fe15f3b3fa8cee1361,2024-05-07 07:36:08,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/butler-review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: ja
          model: gpt-4-turbo-2024-04-09
  chat:
    if: startsWith(github.event.comment.body, '/butler-chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
          lang: ja
",0,0
ca-risken/code,.github/workflows/code-butler.yml,769a42eb326ecba9d9c88ab7cd4c35dbabcb0a09,2024-04-02 06:57:44,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",769a42eb326ecba9d9c88ab7cd4c35dbabcb0a09,2024-04-02 06:57:44,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",0,0
ca-dp/code-butler,.github/workflows/code-butler.yml,a9b085c5ce9f056c429727a9af6db6f214f8a7cc,2023-09-26 07:27:23,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  code-butler:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@latest
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",1213050a549cfa03c9b03073ae73cb4acdbf0c4e,2024-04-09 09:09:20,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          model: gpt-4-1106-preview
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          model: gpt-4-1106-preview
          comment_body: ${{ github.event.comment.body }}
",196,17
rajugit1/course-gh-actions,.github/workflows/butler.yml,38f72dc235436af188e3bec9e53597ee26b85af9,2024-08-10 12:28:55,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  # log:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo 'comment ${{ github.event.comment.body }}'
  #     - run: echo '${{ toJson(github.event) }}'
  chat:
    if: contains(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
  review:
    if: contains(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review",38f72dc235436af188e3bec9e53597ee26b85af9,2024-08-10 12:28:55,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  # log:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo 'comment ${{ github.event.comment.body }}'
  #     - run: echo '${{ toJson(github.event) }}'
  chat:
    if: contains(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
  review:
    if: contains(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review",0,0
ca-risken/core,.github/workflows/code-butler.yml,6e9e635171ac231ddc0daf156552579ec0b5c6bc,2024-04-01 03:08:55,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",6e9e635171ac231ddc0daf156552579ec0b5c6bc,2024-04-01 03:08:55,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",0,0
s2mr/xc,.github/workflows/ai_review.yml,fb04f115c6e6b8ac6b6f5e264cdce2a3be5e1b5f,2024-05-07 05:41:06,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: ja
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
          lang: ja
",fb04f115c6e6b8ac6b6f5e264cdce2a3be5e1b5f,2024-05-07 05:41:06,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: ja
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
          lang: ja
",0,0
pipe-cd/pipecd,.github/workflows/code-butler.yaml,3a153c1a983bc4e876c5518af804c498517ecf0a,2023-11-01 02:38:53,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",903e98d1c5dc2a36b26f2f31abf8668d8cac8395,2025-01-17 08:17:58,"name: code_butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-24.04
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          model: gpt-4-1106-preview
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-24.04
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          model: gpt-4-1106-preview
          comment_body: ${{ github.event.comment.body }}
",443,3
RowlandOti/E-CommerceApp-Merchant,.github/workflows/pull-request.yml,dd5bff5ef2ac4f31af2f1b413e3319489b0da911,2023-05-12 06:13:25,"name: Checking pull request gate pass
on:
  pull_request:
    branches:
      - main
jobs:
  open-ai-review:
    runs-on: macOS-10.15
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.0.4
        with:
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt-hotspot'
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Lint checks
        run: ./gradlew -Pci --console=plain lintDebug
  spotless-check:
    name: Spotless Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Spotless check
        run: ./gradlew -Pci --console=plain spotlessCheck
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Unit tests
        run: ./gradlew -Pci --console=plain testDebugUnitTest
  instrumented-tests:
    name: Instrumentation tests
    runs-on: macOS-10.15
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        api-level: [29]
        target: [google_apis]
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      # Restore the cache.
      # Intentionally don't set 'restore-keys' so the cache never contains redundant dependencies.
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=../.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew :ui:connectedDebugAndroidTest --no-parallel
",612a19842614d69f42a1df8bb22365e6650489a3,2023-10-14 15:33:52,"name: Checking pull request gate pass
on:
  pull_request:
    branches:
      - main
jobs:
  open-ai-review:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Robin AI Reviewer
        uses: Integral-Healthcare/robin-ai-reviewer@v1.0.4
        with:
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt-hotspot'
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Lint checks
        run: ./gradlew -Pci --console=plain lintDebug
  spotless-check:
    name: Spotless Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Spotless check
        run: ./gradlew -Pci --console=plain spotlessCheck
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=./.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Unit tests
        run: ./gradlew -Pci --console=plain testDebugUnitTest
  instrumented-tests:
    name: Instrumentation tests
    runs-on: macOS-10.15
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        api-level: [29]
        target: [google_apis]
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DUKA_MERCHANT_SDK_KEY }}
      - uses: actions/checkout@v2.3.1
        with:
          token: ${{secrets.GA_TOKEN}}
          submodules: recursive
          lfs: false
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      # Restore the cache.
      # Intentionally don't set 'restore-keys' so the cache never contains redundant dependencies.
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Configure Keystore
        run: |
          echo ""$ANDROID_KEYSTORE_FILE"" > ./.buildsystem/keystore.jks.b64
          base64 -d -i ./.buildsystem/keystore.jks.b64 > ./.buildsystem/keystore.jks
          echo ""storeFile=../.buildsystem/keystore.jks"" >> ./.buildsystem/keystore.properties
          echo ""keyAlias=$KEYSTORE_KEY_ALIAS"" >> ./.buildsystem/keystore.properties
          echo ""storePassword=$KEYSTORE_STORE_PASSWORD"" >> ./.buildsystem/keystore.properties
          echo ""keyPassword=$KEYSTORE_KEY_PASSWORD"" >> ./.buildsystem/keystore.properties
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew :ui:connectedDebugAndroidTest --no-parallel
",155,5
Chao-Xi/action-sample,.github/workflows/butler.yml,94efacee38df9a3eca7d9973a53dafbc67c22ddc,2024-06-17 19:21:40,"name: butler

on:
  issue_comment:
    types: [created]

jobs:
  chat:
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",4c75c73b5e1567f3a254cb57fd8fb1a8e81bef92,2024-10-11 17:00:50,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  chat:
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # OPENAI_API_URL: ${{ vars.OPENAI_API_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}",115,9
Project-Catcher/catcher-web,.github/workflows/cr.yml,709f13ba8df2615060f8bc0cdc1c6db4440d4eb8,2023-10-20 17:47:46,"name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          MODEL: gpt-3.5-turbo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean",61caadebcdc32f8f4baffc9d74130ecbfdd76bcf,2023-11-20 15:45:56,"name: Code Review

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  WEBHOOK_URL: ${{ secrets.WEBHOOK }}
  GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

permissions:
  contents: read
  pull-requests: write

jobs:
  code_review:
    runs-on: self-hosted
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ env.GIT_TOKEN }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          MODEL: gpt-3.5-turbo
          LANGUAGE: Korean

      - name: Send Notification
        if: ${{ always() }}
        run: |
          if [[ ${{ job.status }} == ""success"" ]]; then
            MESSAGE=""✅ ${{ job.status }} 프론트 OpenAI 코드 리뷰 : catcher-web - by ${{ github.actor }}""
          else
            MESSAGE=""❌ ${{ job.status }} 프론트 OpenAI 코드 리뷰 : catcher-web - by ${{ github.actor }}""
          fi
          curl -X POST -H ""Content-Type: application/json"" --data ""{\""text\"":\""${MESSAGE}\""}"" ${{ env.WEBHOOK_URL }}",30,11
g0t4/course-gh-actions,.github/workflows/butler.yml,94efacee38df9a3eca7d9973a53dafbc67c22ddc,2024-06-17 19:21:40,"name: butler

on:
  issue_comment:
    types: [created]

jobs:
  chat:
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
",576ad9dcd705cf27844bec00c75ad9b04dbb6737,2024-06-17 22:50:27,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  # log:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo 'comment ${{ github.event.comment.body }}'
  #     - run: echo '${{ toJson(github.event) }}'
  chat:
    if: contains(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
  review:
    if: contains(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review",0,5
Efthymios-Stathakis/authoring-and-maintaining-gha-workflows,.github/workflows/butler.yml,80fa8672cf682de22ab9549d4f4bd0ffb33b1339,2024-09-16 08:27:28,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  chat:
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}",a4a25ef22ba706de316c3dc3e6585d19c381b88e,2024-09-16 09:05:14,"name: butler

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write

jobs:
  log:
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ toJson(github.event) }}'
      - run: echo '${{ github.event.comment.body }}'
  chat:
    if: contains(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
  review:
    if: contains(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review",0,4
bucketeer-io/bucketeer,.github/workflows/code-butler.yaml,4ca4e2f4e339859aa71346b92d3672eaf9ab7b37,2023-11-07 06:12:49,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
",e92741993a781f1de2ecdbca3c67d6740c8fd687,2023-12-13 07:50:19,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          model: gpt-4-1106-preview
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          model: gpt-4-1106-preview
          comment_body: ${{ github.event.comment.body }}
",36,1
aaronmaj/consuming-github-actions-workflows,.github/workflows/butler.yml,58ed4ecb35ace26a9aecffbfc58e57d1423d7073,2025-01-01 01:29:00,"name: butler

on:
  issue_comment:
    types: [created]

permissions: # Permissions on the level of the workflow
  pull-requests: write
jobs:
  chat:
    runs-on: ubuntu-latest

    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}

",0a6e0d743480cdace485a1f206798e2f86f25ec5,2025-01-01 02:04:16,"name: Code Butler

permissions:
  contents: read
  pull-requests: write

on:
  issue_comment:

jobs:
  log:
    runs-on: ubuntu-latest
    steps:
      - run: echo 'comment ${{ github.event.comment.body }}'
      - run: echo '${{ toJson(github.event) }}'
  review:
    if: startsWith(github.event.comment.body, '/review')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: review
          lang: en
  chat:
    if: startsWith(github.event.comment.body, '/chat')
    runs-on: ubuntu-latest
    steps:
      - uses: ca-dp/code-butler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          cmd: chat
          comment_body: ${{ github.event.comment.body }}
          lang: en",0,4
wbat/wbat-terraform,.github/workflows/chatgpt_ci.yml,bcf292c98dd6e80e76757feeb6d34cd8abf341e3,2024-01-31 22:30:23,"name: ChatGPT CI

on: pull_request

jobs:
  test:
    name: ChatGPT explain code
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT explain code
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        with:
          model: gpt-3.5-turbo
          max_tokens: 4096
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",d97ed16af881c96e043917ee1e90805993d486f7,2024-01-31 22:37:48,"name: ChatGPT CI

on: pull_request

jobs:
  test:
    name: ChatGPT explain code
    runs-on: ubuntu-latest
    steps:
      - name: ChatGPT explain code
        uses: magnificode-ltd/chatgpt-code-reviewer@v0.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",0,3
aidar-freeed/ai-codereviewer,.github/workflows/code_review.yml,ae9e33e25815ffe7d6a2e9662acc09a90b5c2b6e,2023-03-22 22:29:23,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GH_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          exclude: ""yarn.lock,dist/**""
",5c13a26204b18fc9903b4353f8a18ebd7b2f022b,2023-12-02 21:08:33,"name: Code Review with OpenAI
on:
  pull_request:
    types:
      - opened
      - synchronize
permissions: write-all
jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Code Review
        uses: freeedcom/ai-codereviewer@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_MODEL: ""gpt-4-1106-preview""
          exclude: ""yarn.lock,dist/**""
",254,6
LeHongMinh-ST/st.student-resource-admin,.github/workflows/ai-review.yml,c17099d675e7b0d3fddd2a492dfe39f8477de62e,2024-11-28 08:30:58,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer@latest
        with:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""",580604f74b651247e6436c3f46d0cfb9b430ae77,2024-11-28 08:41:37,"name: Gemini AI Code Reviewer

on:
  issue_comment:
    types: [created]

permissions: write-all

jobs:
  gemini-code-review:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/gemini-review')
    steps:
      - name: PR Info
        run: |
          echo ""Comment: ${{ github.event.comment.body }}""
          echo ""Issue Number: ${{ github.event.issue.number }}""
          echo ""Repository: ${{ github.repository }}""

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR Details
        id: pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo ""head_sha=$(echo $PR_JSON | jq -r .head.sha)"" >> $GITHUB_OUTPUT
          echo ""base_sha=$(echo $PR_JSON | jq -r .base.sha)"" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - uses: truongnh1992/gemini-ai-code-reviewer
        with:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_MODEL: gemini-1.5-pro-002 # Optional, default is `gemini-1.5-flash-002`
          INPUT_EXCLUDE: ""*.md,*.txt,package-lock.json,*.yml,*.yaml""",0,1
hongbo-miao/hongbomiao.com,.github/workflows/test.yml,f0ce66564406ff97f8446db43b256d9ad9dbf899,2023-03-28 08:50:03,"---
name: Test

""on"":
  pull_request:
    branches: [main]
  schedule:
    - cron: 0 10 * * 0-6

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    permissions:
      pull-requests: read
    outputs:
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      api-python: ${{ steps.filter.outputs.api-python }}
      convolutional-neural-network: ${{ steps.filter.outputs.convolutional-neural-network }}
      grafana: ${{ steps.filter.outputs.grafana }}
      chatbot: ${{ steps.filter.outputs.chatbot }}
      hm-opal-client: ${{ steps.filter.outputs.hm-opal-client }}
      hm-spark-find-retired-people-scala: ${{ steps.filter.outputs.hm-spark-find-retired-people-scala }}
      mobile-android: ${{ steps.filter.outputs.mobile-android }}
      mobile-ios: ${{ steps.filter.outputs.mobile-ios }}
      mobile-react-native: ${{ steps.filter.outputs.mobile-react-native }}
      prometheus: ${{ steps.filter.outputs.prometheus }}
      robot-operating-system: ${{ steps.filter.outputs.robot-operating-system }}
      streaming: ${{ steps.filter.outputs.streaming }}
      web: ${{ steps.filter.outputs.web }}
      web-cypress: ${{ steps.filter.outputs.web-cypress }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api-go:
              - '.github/workflows/test.yml'
              - 'api-go/**'
            api-node:
              - '.github/workflows/test.yml'
              - 'api-node/**'
            api-python:
              - '.github/workflows/test.yml'
              - 'api-python/**'
            convolutional-neural-network:
              - '.github/workflows/test.yml'
              - 'convolutional-neural-network/**'
            grafana:
              - '.github/workflows/test.yml'
              - 'grafana/**'
            chatbot:
              - '.github/workflows/test.yml'
              - 'chatbot/**'
            hm-opal-client:
              - '.github/workflows/test.yml'
              - 'hm-opal-client/**'
            hm-prefect-find-taxi-top-routes:
              - '.github/workflows/test.yml'
              - 'hm-prefect/workflows/find-taxi-top-routes/**'
            hm-spark-find-retired-people-scala:
              - '.github/workflows/test.yml'
              - 'hm-spark/applications/find-retired-people-scala/**'
            mobile-android:
              - '.github/workflows/test.yml'
              - 'mobile-android/**'
            mobile-ios:
              - '.github/workflows/test.yml'
              - 'mobile-ios/**'
            mobile-react-native:
              - '.github/workflows/test.yml'
              - 'mobile-react-native/**'
            prometheus:
              - '.github/workflows/test.yml'
              - 'prometheus/**'
            robot-operating-system:
              - '.github/workflows/test.yml'
              - 'robot-operating-system/**'
            streaming:
              - '.github/workflows/test.yml'
              - 'streaming/**'
            web:
              - '.github/workflows/test.yml'
              - 'web/**'
            web-cypress:
              - '.github/workflows/test.yml'
              - 'web-cypress/**'

  lint:
    name: Lint
    uses: ./.github/workflows/.lint.yml

  static-type-check:
    name: Static Type Check
    uses: ./.github/workflows/.static-type-check.yml
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

  web-test:
    name: Web | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: web/.nvmrc
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Test
        working-directory: web
        run: |
          npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: web

  web-end-to-end-test:
    name: Web | End-to-End Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-node == 'true' || needs.detect-changes.outputs.web == 'true' || needs.detect-changes.outputs.web-cypress == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: web/.nvmrc
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web-cypress
        run: |
          npm ci
      - name: Pull Docker images
        working-directory: api-node
        run: |
          docker-compose --file=docker-compose.cypress.yaml pull
      - name: Cache Docker images
        uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
      - name: Start Docker
        working-directory: api-node
        run: |
          docker-compose --file=docker-compose.cypress.yaml up --detach
      - name: Cypress
        working-directory: web-cypress
        run: |
          npm run test:cypress:headless:5000
      - name: Stop Docker
        working-directory: api-node
        run: |
          docker-compose --file=docker-compose.cypress.yaml down

  web-lighthouse:
    name: Web | Lighthouse
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: web/.nvmrc
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Build
        working-directory: web
        run: |
          npm run build
      - name: Lighthouse
        working-directory: web
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm run lighthouse

  # https://www.chromatic.com/docs/github-actions
  web-visual-test:
    name: Web | Visual Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Required to retrieve git history
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: web/.nvmrc
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Build
        working-directory: web
        run: |
          npm run build
          npm run storybook:build
      - name: Publish storybook to Chromatic
        working-directory: web
        run: |
          npm run storybook:publish -- --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} --exit-zero-on-changes

  mobile-ios-test:
    name: Mobile - iOS | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-ios == 'true' }}
    runs-on: macos-12
    environment: test
    timeout-minutes: 90
    env:
      # To use a Gemfile which is not at the root
      # https://github.com/ruby/setup-ruby#caching-bundle-install-automatically
      BUNDLE_GEMFILE: ${{ github.workspace }}/mobile-ios/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: mobile-ios
          bundler-cache: true
      - name: Build
        working-directory: mobile-ios
        run: |
          xcodebuild build-for-testing \
            -project HMMobile.xcodeproj \
            -scheme HMMobile \
            -destination ""platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2""
      - name: Test
        uses: wandalen/wretry.action@v1.0.36
        with:
          current_path: mobile-ios
          command: |
            xcodebuild test-without-building -project HMMobile.xcodeproj -scheme HMMobile -destination ""platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2""
          attempt_limit: 3
          attempt_delay: 2000
      - name: Convert coverage to Cobertura XML format
        working-directory: mobile-ios
        run: |
          bundle exec slather
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: mobile-ios

  mobile-android-lint:
    name: Mobile - Android | Lint
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '19'
          cache: gradle
      - name: Lint
        working-directory: mobile-android
        run: |
          ./gradlew lint

  mobile-android-test:
    name: Mobile - Android | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '19'
          cache: gradle
      - name: Test
        working-directory: mobile-android
        run: |
          ./gradlew test

  mobile-android-instrumented-test:
    name: Mobile - Android | Instrumented Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
    runs-on: macos-12
    environment: test
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '19'
          cache: gradle
      - name: Instrumented Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: mobile-android
          api-level: 29
          script: ./gradlew connectedAndroidTest

  mobile-react-native-test:
    name: Mobile - React Native | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: mobile-react-native/.nvmrc
          cache: npm
          cache-dependency-path: mobile-react-native/package-lock.json
      - name: Install dependencies
        working-directory: mobile-react-native
        run: |
          npm ci
      - name: Test
        working-directory: mobile-react-native
        run: |
          npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: mobile-react-native

  api-go-test:
    name: API - Go | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: api-go/go.mod
          cache-dependency-path: api-go/go.sum
      - name: Test
        working-directory: api-go
        run: |
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: api-go

  api-node-test:
    name: API - Node.js | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-node == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: api-node/.nvmrc
          cache: npm
          cache-dependency-path: api-node/package-lock.json
      - name: Install dependencies
        working-directory: api-node
        run: |
          npm ci
      - name: Test
        working-directory: api-node
        run: |
          npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: api-node

  api-node-mutation-test:
    name: API - Node.js | Mutation Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-node == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: api-node/.nvmrc
          cache: npm
          cache-dependency-path: api-node/package-lock.json
      - name: Install dependencies
        working-directory: api-node
        run: |
          npm ci
      - name: Stryker
        working-directory: api-node
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        run: |
          npm run test:stryker

  api-python-test:
    name: API - Python | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-python == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # librdkafka is for confluent-kafka
      - name: Install librdkafka
        run: |
          # https://github.com/edenhill/librdkafka#build-from-source
          wget --no-verbose --output-document=librdkafka.tar.gz https://github.com/edenhill/librdkafka/archive/refs/tags/v1.9.2.tar.gz
          tar -x -f librdkafka.tar.gz
          rm -f librdkafka.tar.gz
          cd librdkafka-1.9.2
          ./configure
          make
          sudo make install
          sudo ldconfig
          cd ..
          rm -r -f librdkafka-1.9.2/
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: poetry
          cache-dependency-path: api-python/poetry.lock
      - name: Set Poetry environment
        working-directory: api-python
        run: |
          poetry env use 3.11
      - name: Install dependencies
        working-directory: api-python
        run: |
          poetry install
      - name: Test
        working-directory: api-python
        run: |
          poetry run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: api-python

  spark-find-retired-people-scala:
    name: Spark (find-retired-people-scala) | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-scala == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '17'
          cache: sbt
      - name: Test
        working-directory: hm-spark/applications/find-retired-people-scala
        run: |
          sbt test

  streaming-test:
    name: Streaming | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.streaming == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '11'
          cache: maven
      - name: Test
        working-directory: streaming
        run: |
          mvn test

  opa-test:
    name: OPA | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download OPA Binary
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod 755 ./opa
      - name: Test
        run: |
          ./opa test api-go/internal/graphql_server/policies/*.rego -v

  ros-test:
    name: ROS | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.robot-operating-system == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 20
    container: ubuntu:jammy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup ROS
        uses: ros-tooling/setup-ros@v0.6
        with:
          required-ros-distributions: humble
      - name: Build and test
        uses: ros-tooling/action-ros-ci@v0.3
        with:
          package-name: turtle_robot
          target-ros2-distro: humble

  rasa-test:
    name: Rasa | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.chatbot == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Train and test
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workspace: ${{ github.workspace }}/chatbot

  prometheus-test:
    name: Prometheus | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.prometheus == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test
        run: |
          docker build --file=prometheus/Dockerfile.test .

  grafana-end-to-end-test:
    name: Grafana | End-to-End Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.grafana == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: grafana/hm-panel-plugin/.nvmrc
          cache: npm
          cache-dependency-path: grafana/hm-panel-plugin/package-lock.json
      - name: Install dependencies
        working-directory: grafana/hm-panel-plugin
        run: |
          npm ci
      - name: Build
        working-directory: grafana/hm-panel-plugin
        run: |
          npm run build
      - name: Pull Docker images
        working-directory: grafana/hm-panel-plugin
        run: |
          docker-compose pull
      - name: Cache Docker images
        uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
      - name: Start Docker
        working-directory: grafana/hm-panel-plugin
        run: |
          docker-compose up --detach
      - name: Run e2e tests
        working-directory: grafana/hm-panel-plugin
        run: |
          npm run e2e
      - name: Stop Docker
        working-directory: grafana/hm-panel-plugin
        run: |
          docker-compose down

  grafana-compatibility-test:
    name: Grafana | Compatibility Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.grafana == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: grafana/hm-panel-plugin/.nvmrc
          cache: npm
          cache-dependency-path: grafana/hm-panel-plugin/package-lock.json
      - name: Install dependencies
        working-directory: grafana/hm-panel-plugin
        run: |
          npm ci
      - name: Build
        working-directory: grafana/hm-panel-plugin
        run: |
          npm run build
      - name: Check compatibility
        working-directory: grafana/hm-panel-plugin
        run: |
          npx @grafana/levitate@latest is-compatible --path=src/module.ts --target=@grafana/data,@grafana/ui,@grafana/runtime

  hm-opal-client-build:
    name: HM OPAL Client | Build
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-opal-client == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./hm-opal-client/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  cnn-cml-local-train:
    name: CNN | CML (Local) - Train
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.convolutional-neural-network == 'true' }}
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up CML
        uses: iterative/setup-cml@v1
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: poetry
          cache-dependency-path: convolutional-neural-network/poetry.lock
      - name: Set Poetry environment
        working-directory: convolutional-neural-network
        run: |
          poetry env use 3.10
      - name: Install dependencies
        working-directory: convolutional-neural-network
        run: |
          poetry install
      - name: Train model
        working-directory: convolutional-neural-network
        shell: bash -l {0}
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          poetry run poe dev-download-original-data
      - name: Write CML report
        working-directory: convolutional-neural-network
        shell: bash -l {0}
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ""# CML (Local) Report"" >> report.md
          echo ""## Params"" >> report.md
          cat output/reports/params.txt >> report.md
          cml comment create report.md

  cnn-cml-cloud-set-up:
    name: CNN | CML (Cloud) - Set Up
    runs-on: ubuntu-22.04
    environment: test
    needs: detect-changes
    if: ${{ false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up CML
        uses: iterative/setup-cml@v1
      - name: Set up cloud
        shell: bash
        env:
          REPO_TOKEN: ${{ secrets.CML_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cml-runner \
          --cloud=aws \
          --cloud-region=us-west-2 \
          --cloud-type=t2.small \
          --labels=cml-runner

  cnn-cml-cloud-train:
    name: CNN | CML (Cloud) - Train
    needs: cnn-cml-cloud-set-up
    runs-on: [self-hosted, cml-runner]
    environment: test
    # container: docker://iterativeai/cml:0-dvc2-base1-gpu
    container: docker://iterativeai/cml:0-dvc2-base1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: poetry
          cache-dependency-path: convolutional-neural-network/poetry.lock
      - name: Set Poetry environment
        working-directory: convolutional-neural-network
        run: |
          poetry env use 3.10
      - name: Install dependencies
        working-directory: convolutional-neural-network
        run: |
          poetry install
      - name: Pull Data
        working-directory: convolutional-neural-network
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          poetry run poe dvc-pull
      - name: Train model
        working-directory: convolutional-neural-network
        shell: bash -l {0}
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          poetry run poe dvc-repro
      - name: Write CML report
        working-directory: convolutional-neural-network
        shell: bash -l {0}
        env:
          REPO_TOKEN: ${{ secrets.CML_ACCESS_TOKEN }}
        run: |
          echo ""# CML (Cloud) Report"" >> report.md
          echo ""## Params"" >> report.md
          cat output/reports/params.txt >> report.md
          cml comment create report.md

  code-review:
    name: Code Review
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@v1.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",44c1da75074c43b5c0d630febee678f0804c28bf,2025-02-04 10:27:58,"---
name: Test

'on':
  pull_request:
    branches:
      - main
  schedule:
    - cron: 23 10 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            # Workflows
            workflow:
              - '.github/workflows/test.yml'
            workflow-lint:
              - '.github/workflows/.lint.yml'
            workflow-static-type-check:
              - '.github/workflows/.static-type-check.yml'
            workflow-test-aerospace:
              - '.github/workflows/.test-aerospace.yml'
            workflow-test-api:
              - '.github/workflows/.test-api.yml'
            workflow-test-cloud:
              - '.github/workflows/.test-cloud.yml'
            workflow-test-computer-vision:
              - '.github/workflows/.test-computer-vision.yml'
            workflow-test-computing:
              - '.github/workflows/.test-computing.yml'
            workflow-test-data-analytics:
              - '.github/workflows/.test-data-analytics.yml'
            workflow-test-data-orchestration:
              - '.github/workflows/.test-data-orchestration.yml'
            workflow-test-data-processing:
              - '.github/workflows/.test-data-processing.yml'
            workflow-test-data-storage:
              - '.github/workflows/.test-data-storage.yml'
            workflow-test-data-transformation:
              - '.github/workflows/.test-data-transformation.yml'
            workflow-test-data-visualization:
              - '.github/workflows/.test-data-visualization.yml'
            workflow-test-embedded-system:
              - '.github/workflows/.test-embedded-system.yml'
            workflow-test-hardware-in-the-loop:
              - '.github/workflows/.test-hardware-in-the-loop.yml'
            workflow-test-machine-learning:
              - '.github/workflows/.test-machine-learning.yml'
            workflow-test-mobile:
              - '.github/workflows/.test-mobile.yml'
            workflow-test-network-programmability:
              - '.github/workflows/.test-network-programmability.yml'
            workflow-test-operating-system:
              - '.github/workflows/.test-operating-system.yml'
            workflow-test-web:
              - '.github/workflows/.test-web.yml'
            # Languages
            ansible:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/playbook.yml'
            c-cpp:
              - '.clang-format'
              - '**/*.c'
              - '**/*.cpp'
              - '**/*.cu'
              - '**/*.cuh'
              - '**/*.h'
              - '**/*.hpp'
              - '**/*.ino'
            cmake:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/CMakeLists.txt'
            css:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '.stylelintignore'
              - '.stylelintrc.mjs'
              - '**/*.css'
            dockerfile:
              - '.hadolint.yaml'
              - '**/Dockerfile*'
            html:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '**/*.html'
            json:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '**/*.json'
            justfile:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/justfile'
            kubernetes:
              - 'kubernetes/manifests/**'
            markdown:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '**/*.md'
            matlab:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/*.m'
            natural-language:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '.textlintrc.json'
              - '.textlintignore'
              - '**/*.c'
              - '**/*.cjs'
              - '**/*.cpp'
              - '**/*.cs'
              - '**/*.csproj'
              - '**/*.cu'
              - '**/*.cuh'
              - '**/*.dbc'
              - '**/*.go'
              - '**/*.gradle'
              - '**/*.h'
              - '**/*.hpp'
              - '**/*.ino'
              - '**/*.ipynb'
              - '**/*.java'
              - '**/*.jl'
              - '**/*.js'
              - '**/*.json'
              - '**/*.kt'
              - '**/*.kts'
              - '**/*.m'
              - '**/*.md'
              - '**/*.mjs'
              - '**/*.p4'
              - '**/*.py'
              - '**/*.rego'
              - '**/*.rs'
              - '**/*.scad'
              - '**/*.scala'
              - '**/*.sh'
              - '**/*.sln'
              - '**/*.sol'
              - '**/*.sql'
              - '**/*.swift'
              - '**/*.tf'
              - '**/*.toml'
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.vhd'
              - '**/*.WizardFile'
              - '**/*.xml'
              - '**/*.yaml'
              - '**/*.yml'
            ruby:
              - 'Gemfile'
              - 'Gemfile.lock'
              # https://github.com/rubocop/rubocop/blob/master/config/default.yml
              - '**/*.gemfile'
              - '**/Vagrantfile'
            python:
              - 'pyproject.toml'
              - 'uv.lock'
              - '.mypy.ini'
              - '.ruff.toml'
              - '**/*.py'
            qml:
              - '**/*.qml'
            shell:
              - '**/*.sh'
            solidity:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '.solhint.json'
              - '.solhintignore'
              - '**/*.sol'
            sql:
              - 'pyproject.toml'
              - 'uv.lock'
              - '.sqlfluff'
              - '.sqlfluffignore'
              - '**/*.sql'
            terraform:
              - '**/*.tf'
              - '**/*.tfvars'
              - '**/.terraform.lock.hcl'
              - 'cloud-infrastructure/terraform/**'
            toml:
              - 'taplo.toml'
              - '**/*.toml'
            verilog:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/*.v'
            vhdl:
              - 'pyproject.toml'
              - 'uv.lock'
              - '**/*.vhd'
            xml:
              - '.node-version'
              - '.npmrc'
              - 'package.json'
              - 'package-lock.json'
              - '.prettierignore'
              - '.prettierrc.mjs'
              - '**/*.xml'
            yaml:
              - 'pyproject.toml'
              - 'uv.lock'
              - '.yamllint.yaml'
              - '**/*.yaml'
            # Application
            amazon-sagemaker-pytorch-mnist:
              - 'cloud-platform/aws/amazon-sagemaker/pytorch-mnist/**'
            amazon-sagemaker-triton-resnet-50-deploy:
              - 'machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy/**'
            amazon-sagemaker-triton-resnet-50-infer:
              - 'machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer/**'
            api-go:
              - 'api-go/**'
            api-node:
              - 'api-node/**'
            api-python:
              - 'api-python/**'
            api-rust:
              - 'api-rust/**'
            arrow-flight-client:
              - 'data-distribution/arrow-flight/arrow-flight-client/**'
            arrow-flight-server:
              - 'data-distribution/arrow-flight/arrow-flight-server/**'
            call-matlab-function-in-python:
              - 'matlab/call-matlab-function-in-python/**'
            decode-can-blf-data:
              - 'embedded-system/decode-can-blf-data/**'
            decode-can-mf4-data:
              - 'embedded-system/decode-can-mf4-data/**'
            decode-can-trc-data:
              - 'embedded-system/decode-can-trc-data/**'
            development-aws-glue-spark-scripts:
              - 'cloud-infrastructure/terraform/environments/development/aws/general/files/aws-glue/spark-scripts/**'
            production-aws-glue-spark-scripts:
              - 'cloud-infrastructure/terraform/environments/production/aws/general/files/aws-glue/spark-scripts/**'
            ethereum:
              - '.github/workflows/.lint.yml'
              - 'ethereum/**'
            format-can-data:
              - 'embedded-system/format-can-data/**'
            convolutional-neural-network:
              - 'machine-learning/convolutional-neural-network/**'
            dbt-hm-postgres:
              - 'data-transformation/dbt/projects/dbt_hm_postgres/**'
            delta-lake-read-delta-lake-by-amazon-athena:
              - 'data-storage/delta-lake/read-delta-lake-by-amazon-athena/**'
            delta-lake-read-delta-lake-by-trino:
              - 'data-storage/delta-lake/read-delta-lake-by-trino/**'
            delta-lake-write-to-delta-lake:
              - 'data-storage/delta-lake/write-to-delta-lake/**'
            feature-store:
              - 'machine-learning/feature-store/**'
            flink-stream-tweets:
              - 'data-processing/flink/applications/stream-tweets/**'
            grafana-hm-dashboard:
              - 'data-visualization/grafana/hm-dashboard/**'
            grafana-hm-panel-plugin:
              - 'data-visualization/grafana/hm-panel-plugin/**'
            graph-neural-network:
              - 'machine-learning/graph-neural-network/**'
            hm-aerosandbox:
              - 'aerospace/hm-aerosandbox/**'
            hm-airflow:
              - 'data-orchestration/hm-airflow/**'
            hm-autogluon:
              - 'machine-learning/hm-autogluon/**'
            hm-aws-parallelcluster:
              - 'cloud-platform/aws/aws-parallelcluster/pcluster/**'
            hm-cudf:
              - 'data-analytics/hm-cudf/**'
            hm-cuml:
              - 'machine-learning/hm-cuml/**'
            hm-cupy:
              - 'data-analytics/hm-cupy/**'
            hm-docling:
              - 'machine-learning/hm-docling/**'
            hm-duckdb-query-duckdb:
              - 'data-storage/hm-duckdb/query-duckdb/**'
            hm-duckdb-query-lance:
              - 'data-storage/hm-duckdb/query-lance/**'
            hm-duckdb-query-parquet:
              - 'data-storage/hm-duckdb/query-parquet/**'
            hm-duckdb-query-protobuf:
              - 'data-storage/hm-duckdb/query-protobuf/**'
            hm-faster-whisper:
              - 'machine-learning/hm-faster-whisper/**'
            hm-flax:
              - 'machine-learning/hm-flax/**'
            hm-genesis:
              - 'physics/hm-genesis/**'
            hm-geopandas:
              - 'data-analytics/hm-geopandas/**'
            hm-gradio-classify-image:
              - 'machine-learning/hm-gradio/applications/classify-image/**'
            hm-imagebind:
              - 'computer-vision/hm-imagebind/**'
            hm-jax:
              - 'high-performance-computing/hm-jax/**'
            hm-kubeflow-calculate:
              - 'machine-learning/hm-kubeflow/pipelines/calculate/**'
            hm-kubeflow-classify-mnist:
              - 'machine-learning/hm-kubeflow/pipelines/classify-mnist/**'
            hm-lancedb:
              - 'data-storage/hm-lancedb/**'
            hm-langchain-chat-pdf:
              - 'machine-learning/hm-langchain/applications/chat-pdf/**'
            hm-langgraph-chat-pdf:
              - 'machine-learning/hm-langgraph/applications/chat-pdf/**'
            hm-llama-index-chat-pdf:
              - 'machine-learning/hm-llama-index/applications/chat-pdf/**'
            hm-mlflow-classify-mnist:
              - 'machine-learning/hm-mlflow/experiments/classify-mnist/**'
            hm-mlflow-predict-diabetes:
              - 'machine-learning/hm-mlflow/experiments/predict-diabetes/**'
            hm-networkx:
              - 'data-analytics/hm-networkx/**'
            hm-numba:
              - 'data-analytics/hm-numba/**'
            hm-nvidia-modulus:
              - 'machine-learning/hm-nvidia-modulus/**'
            hm-opal-client:
              - 'authorization/hm-opal-client/**'
            hm-open3d:
              - 'computer-vision/hm-open3d/**'
            hm-openaerostruct:
              - 'computer-vision/hm-openaerostruct/**'
            hm-pandas:
              - 'data-analytics/hm-pandas/**'
            hm-polars:
              - 'data-analytics/hm-polars/**'
            hm-prefect-calculate:
              - 'data-orchestration/hm-prefect/workflows/calculate/**'
            hm-prefect-greet:
              - 'data-orchestration/hm-prefect/workflows/greet/**'
            hm-prefect-print-platform:
              - 'data-orchestration/hm-prefect/workflows/print-platform/**'
            hm-protobuf:
              - 'data-storage/hm-protobuf/**'
            hm-prowler:
              - 'cloud-security/hm-prowler/**'
            hm-pulumi:
              - 'cloud-infrastructure/hm-pulumi/**'
            hm-pyvista-mount-saint-helens:
              - 'computer-vision/hm-pyvista/mount-saint-helens/**'
            hm-rasa:
              - 'machine-learning/hm-rasa/**'
            hm-ray-calculate:
              - 'cloud-computing/hm-ray/applications/calculate/**'
            hm-ray-process-flight-data:
              - 'cloud-computing/hm-ray/applications/process-flight-data/**'
            hm-scikit-learn:
              - 'machine-learning/hm-scikit-learn/**'
            hm-serial:
              - 'embedded-system/hm-serial/**'
            hm-sglang:
              - 'machine-learning/hm-sglang/**'
            hm-skypilot:
              - 'cloud-computing/hm-skypilot/**'
            hm-spark-analyze-coffee-customers:
              - 'data-processing/hm-spark/applications/analyze-coffee-customers/**'
            hm-spark-find-retired-people-python:
              - 'data-processing/hm-spark/applications/find-retired-people-python/**'
            hm-spark-find-retired-people-scala:
              - 'data-processing/hm-spark/applications/find-retired-people-scala/**'
            hm-spark-find-taxi-top-routes:
              - 'data-processing/hm-spark/applications/find-taxi-top-routes/**'
            hm-spark-find-taxi-top-routes-sql:
              - 'data-processing/hm-spark/applications/find-taxi-top-routes-sql/**'
            hm-spark-ingest-from-s3-to-kafka:
              - 'data-processing/hm-spark/applications/ingest-from-s3-to-kafka/**'
            hm-spark-recommend-movies:
              - 'data-processing/hm-spark/applications/recommend-movies/**'
            hm-streamlit-live-line-chart:
              - 'machine-learning/hm-streamlit/applications/live-line-chart/**'
            hm-streamlit-map:
              - 'machine-learning/hm-streamlit/applications/map/**'
            hm-sunpy:
              - 'scientific-computing/hm-sunpy/**'
            hm-supervision-detect-objects:
              - 'computer-vision/hm-supervision/detect-objects/**'
            hm-triton:
              - 'parallel-computing/hm-triton/**'
            hm-xxhash:
              - 'hm-xxhash/**'
            hugging-face-analyze-sentiment:
              - 'machine-learning/hugging-face/analyze-sentiment/**'
            iads-config-reader:
              - 'data-visualization/iads/iads-data-manager/iads-config-reader/**'
            iads-data-producer:
              - 'data-visualization/iads/iads-rtstation/iads-data-producer/**'
            iads-data-reader:
              - 'data-visualization/iads/iads-data-manager/iads-data-reader/**'
            kafka-rust-proto-consumer:
              - 'data-processing/kafka/kafka-client/kafka-rust/proto-consumer/**'
            kafka-rust-proto-producer:
              - 'data-processing/kafka/kafka-client/kafka-rust/proto-producer/**'
            kafka-rust-udp-kafka-bridge:
              - 'data-processing/kafka/kafka-client/kafka-rust/udp-kafka-bridge/**'
            kafka-rust-zeromq-kafka-bridge:
              - 'data-processing/kafka/kafka-client/kafka-rust/zeromq-kafka-bridge/**'
            lance:
              - 'data-storage/lance/**'
            mineru:
              - 'machine-learning/mineru/**'
            mobile-android:
              - 'mobile/mobile-android/**'
            mobile-ios:
              - 'mobile/mobile-ios/**'
            mobile-react-native:
              - 'mobile/mobile-react-native/**'
            national-instruments-hm-pyvisa:
              - 'hardware-in-the-loop/national-instruments/hm-pyvisa/**'
            national-instruments-hm-tdms:
              - 'hardware-in-the-loop/national-instruments/hm-tdms/**'
            national-instruments-hm-veristand:
              - 'hardware-in-the-loop/national-instruments/veristand/hm-veristand/**'
            national-instruments-veristand-zeromq-bridge:
              - 'hardware-in-the-loop/national-instruments/veristand/VeriStandZeroMQBridge/**'
            neural-forecasting-forecast-air-passenger-number:
              - 'machine-learning/neural-forecasting/forecast-air-passenger-number/**'
            nvidia-dali:
              - 'machine-learning/nvidia-dali/**'
            open-clip:
              - 'computer-vision/open-clip/**'
            pack-unpack-data:
              - 'embedded-system/pack-unpack-data/**'
            prometheus:
              - 'data-storage/prometheus/**'
            quantum-computing:
              - 'quantum-computing/**'
            reinforcement-learning-cart-pole:
              - 'machine-learning/reinforcement-learning/cart-pole/**'
            robot-operating-system:
              - 'robotics/robot-operating-system/**'
            rti-connext-dds:
              - 'data-distribution/rti-connext-dds/**'
            stable-diffusion:
              - 'machine-learning/stable-diffusion/**'
            taichi-count-primes:
              - 'parallel-computing/hm-taichi/count-primes/**'
            taichi-fluid-solver:
              - 'parallel-computing/hm-taichi/fluid-solver/**'
            udp-receiver:
              - 'network-programmability/udp/udp-receiver/**'
            udp-sender:
              - 'network-programmability/udp/udp-sender/**'
            web:
              - 'web/**'
            web-cypress:
              - 'web-cypress/**'
            windows-calculator:
              - 'operating-system/windows/calculator/**'
            zeromq-iads-bridge:
              - 'data-visualization/iads/iads-rtstation/zeromq-iads-bridge/**'
    outputs:
      # Workflows
      workflow-lint: ${{ steps.filter.outputs.workflow-lint }}
      workflow-static-type-check: ${{ steps.filter.outputs.workflow-static-type-check }}
      workflow-test-aerospace: ${{ steps.filter.outputs.workflow-test-aerospace }}
      workflow-test-api: ${{ steps.filter.outputs.workflow-test-api }}
      workflow-test-cloud: ${{ steps.filter.outputs.workflow-test-cloud }}
      workflow-test-computer-vision: ${{ steps.filter.outputs.workflow-test-computer-vision }}
      workflow-test-computing: ${{ steps.filter.outputs.workflow-test-computing }}
      workflow-test-data-analytics: ${{ steps.filter.outputs.workflow-test-data-analytics }}
      workflow-test-data-orchestration: ${{ steps.filter.outputs.workflow-test-data-orchestration }}
      workflow-test-data-processing: ${{ steps.filter.outputs.workflow-test-data-processing }}
      workflow-test-data-storage: ${{ steps.filter.outputs.workflow-test-data-storage }}
      workflow-test-data-transformation: ${{ steps.filter.outputs.workflow-test-data-transformation }}
      workflow-test-data-visualization: ${{ steps.filter.outputs.workflow-test-data-visualization }}
      workflow-test-embedded-system: ${{ steps.filter.outputs.workflow-test-embedded-system }}
      workflow-test-hardware-in-the-loop: ${{ steps.filter.outputs.workflow-test-hardware-in-the-loop }}
      workflow-test-machine-learning: ${{ steps.filter.outputs.workflow-test-machine-learning }}
      workflow-test-mobile: ${{ steps.filter.outputs.workflow-test-mobile }}
      workflow-test-network-programmability: ${{ steps.filter.outputs.workflow-test-network-programmability }}
      workflow-test-operating-system: ${{ steps.filter.outputs.workflow-test-operating-system }}
      workflow-test-web: ${{ steps.filter.outputs.workflow-test-web }}
      workflow: ${{ steps.filter.outputs.workflow }}
      # Languages
      ansible: ${{ steps.filter.outputs.ansible }}
      c-cpp: ${{ steps.filter.outputs.c-cpp }}
      cmake: ${{ steps.filter.outputs.cmake }}
      css: ${{ steps.filter.outputs.css }}
      dockerfile: ${{ steps.filter.outputs.dockerfile }}
      html: ${{ steps.filter.outputs.html }}
      json: ${{ steps.filter.outputs.json }}
      justfile: ${{ steps.filter.outputs.justfile }}
      kubernetes: ${{ steps.filter.outputs.kubernetes }}
      markdown: ${{ steps.filter.outputs.markdown }}
      matlab: ${{ steps.filter.outputs.matlab }}
      natural-language: ${{ steps.filter.outputs.natural-language }}
      python: ${{ steps.filter.outputs.python }}
      qml: ${{ steps.filter.outputs.qml }}
      ruby: ${{ steps.filter.outputs.ruby }}
      shell: ${{ steps.filter.outputs.shell }}
      solidity: ${{ steps.filter.outputs.solidity }}
      sql: ${{ steps.filter.outputs.sql }}
      terraform: ${{ steps.filter.outputs.terraform }}
      toml: ${{ steps.filter.outputs.toml }}
      verilog: ${{ steps.filter.outputs.verilog }}
      vhdl: ${{ steps.filter.outputs.vhdl }}
      xml: ${{ steps.filter.outputs.xml }}
      yaml: ${{ steps.filter.outputs.yaml }}
      # Applications
      amazon-sagemaker-pytorch-mnist: ${{ steps.filter.outputs.amazon-sagemaker-pytorch-mnist }}
      amazon-sagemaker-triton-resnet-50-deploy: ${{ steps.filter.outputs.amazon-sagemaker-triton-resnet-50-deploy }}
      amazon-sagemaker-triton-resnet-50-infer: ${{ steps.filter.outputs.amazon-sagemaker-triton-resnet-50-infer }}
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      api-python: ${{ steps.filter.outputs.api-python }}
      api-rust: ${{ steps.filter.outputs.api-rust }}
      arrow-flight-client: ${{ steps.filter.outputs.arrow-flight-client }}
      arrow-flight-server: ${{ steps.filter.outputs.arrow-flight-server }}
      call-matlab-function-in-python: ${{ steps.filter.outputs.call-matlab-function-in-python }}
      convolutional-neural-network: ${{ steps.filter.outputs.convolutional-neural-network }}
      dbt-hm-postgres: ${{ steps.filter.outputs.dbt-hm-postgres }}
      decode-can-blf-data: ${{ steps.filter.outputs.decode-can-blf-data }}
      decode-can-mf4-data: ${{ steps.filter.outputs.decode-can-mf4-data }}
      decode-can-trc-data: ${{ steps.filter.outputs.decode-can-trc-data }}
      delta-lake-read-delta-lake-by-amazon-athena: ${{ steps.filter.outputs.delta-lake-read-delta-lake-by-amazon-athena }}
      delta-lake-read-delta-lake-by-trino: ${{ steps.filter.outputs.delta-lake-read-delta-lake-by-trino }}
      delta-lake-write-to-delta-lake: ${{ steps.filter.outputs.delta-lake-write-to-delta-lake }}
      development-aws-glue-spark-scripts: ${{ steps.filter.outputs.development-aws-glue-spark-scripts }}
      ethereum: ${{ steps.filter.outputs.ethereum }}
      feature-store: ${{ steps.filter.outputs.feature-store }}
      flink-stream-tweets: ${{ steps.filter.outputs.flink-stream-tweets }}
      format-can-data: ${{ steps.filter.outputs.format-can-data }}
      grafana-hm-dashboard: ${{ steps.filter.outputs.grafana-hm-dashboard }}
      grafana-hm-panel-plugin: ${{ steps.filter.outputs.grafana-hm-panel-plugin }}
      graph-neural-network: ${{ steps.filter.outputs.graph-neural-network }}
      hm-aerosandbox: ${{ steps.filter.outputs.hm-aerosandbox }}
      hm-airflow: ${{ steps.filter.outputs.hm-airflow }}
      hm-autogluon: ${{ steps.filter.outputs.hm-autogluon }}
      hm-aws-parallelcluster: ${{ steps.filter.outputs.hm-aws-parallelcluster }}
      hm-cudf: ${{ steps.filter.outputs.hm-cudf }}
      hm-cuml: ${{ steps.filter.outputs.hm-cuml }}
      hm-cupy: ${{ steps.filter.outputs.hm-cupy }}
      hm-docling: ${{ steps.filter.outputs.hm-docling }}
      hm-duckdb-query-duckdb: ${{ steps.filter.outputs.hm-duckdb-query-duckdb }}
      hm-duckdb-query-lance: ${{ steps.filter.outputs.hm-duckdb-query-lance }}
      hm-duckdb-query-parquet: ${{ steps.filter.outputs.hm-duckdb-query-parquet }}
      hm-duckdb-query-protobuf: ${{ steps.filter.outputs.hm-duckdb-query-protobuf }}
      hm-faster-whisper: ${{ steps.filter.outputs.hm-faster-whisper }}
      hm-flax: ${{ steps.filter.outputs.hm-flax }}
      hm-genesis: ${{ steps.filter.outputs.hm-genesis }}
      hm-geopandas: ${{ steps.filter.outputs.hm-geopandas }}
      hm-gradio-classify-image: ${{ steps.filter.outputs.hm-gradio-classify-image }}
      hm-imagebind: ${{ steps.filter.outputs.hm-imagebind }}
      hm-jax: ${{ steps.filter.outputs.hm-jax }}
      hm-kubeflow-calculate: ${{ steps.filter.outputs.hm-kubeflow-calculate }}
      hm-kubeflow-classify-mnist: ${{ steps.filter.outputs.hm-kubeflow-classify-mnist }}
      hm-lancedb: ${{ steps.filter.outputs.hm-lancedb }}
      hm-langchain-chat-pdf: ${{ steps.filter.outputs.hm-langchain-chat-pdf }}
      hm-langgraph-chat-pdf: ${{ steps.filter.outputs.hm-langgraph-chat-pdf }}
      hm-llama-index-chat-pdf: ${{ steps.filter.outputs.hm-llama-index-chat-pdf }}
      hm-mlflow-classify-mnist: ${{ steps.filter.outputs.hm-mlflow-classify-mnist }}
      hm-mlflow-predict-diabetes: ${{ steps.filter.outputs.hm-mlflow-predict-diabetes }}
      hm-networkx: ${{ steps.filter.outputs.hm-networkx }}
      hm-numba: ${{ steps.filter.outputs.hm-numba }}
      hm-nvidia-modulus: ${{ steps.filter.outputs.hm-nvidia-modulus }}
      hm-opal-client: ${{ steps.filter.outputs.hm-opal-client }}
      hm-open3d: ${{ steps.filter.outputs.hm-open3d }}
      hm-openaerostruct: ${{ steps.filter.outputs.hm-openaerostruct }}
      hm-pandas: ${{ steps.filter.outputs.hm-pandas }}
      hm-polars: ${{ steps.filter.outputs.hm-polars }}
      hm-prefect-calculate: ${{ steps.filter.outputs.hm-prefect-calculate }}
      hm-prefect-greet: ${{ steps.filter.outputs.hm-prefect-greet }}
      hm-prefect-print-platform: ${{ steps.filter.outputs.hm-prefect-print-platform }}
      hm-protobuf: ${{ steps.filter.outputs.hm-protobuf }}
      hm-prowler: ${{ steps.filter.outputs.hm-prowler }}
      hm-pulumi: ${{ steps.filter.outputs.hm-pulumi }}
      hm-pyvista-mount-saint-helens: ${{ steps.filter.outputs.hm-pyvista-mount-saint-helens }}
      hm-rasa: ${{ steps.filter.outputs.hm-rasa }}
      hm-ray-calculate: ${{ steps.filter.outputs.hm-ray-calculate }}
      hm-ray-process-flight-data: ${{ steps.filter.outputs.hm-ray-process-flight-data }}
      hm-scikit-learn: ${{ steps.filter.outputs.hm-scikit-learn }}
      hm-serial: ${{ steps.filter.outputs.hm-serial }}
      hm-sglang: ${{ steps.filter.outputs.hm-sglang }}
      hm-skypilot: ${{ steps.filter.outputs.hm-skypilot }}
      hm-spark-analyze-coffee-customers: ${{ steps.filter.outputs.hm-spark-analyze-coffee-customers }}
      hm-spark-find-retired-people-python: ${{ steps.filter.outputs.hm-spark-find-retired-people-python }}
      hm-spark-find-retired-people-scala: ${{ steps.filter.outputs.hm-spark-find-retired-people-scala }}
      hm-spark-find-taxi-top-routes-sql: ${{ steps.filter.outputs.hm-spark-find-taxi-top-routes-sql }}
      hm-spark-find-taxi-top-routes: ${{ steps.filter.outputs.hm-spark-find-taxi-top-routes }}
      hm-spark-ingest-from-s3-to-kafka: ${{ steps.filter.outputs.hm-spark-ingest-from-s3-to-kafka }}
      hm-spark-recommend-movies: ${{ steps.filter.outputs.hm-spark-recommend-movies }}
      hm-streamlit-live-line-chart: ${{ steps.filter.outputs.hm-streamlit-live-line-chart }}
      hm-streamlit-map: ${{ steps.filter.outputs.hm-streamlit-map }}
      hm-sunpy: ${{ steps.filter.outputs.hm-sunpy }}
      hm-supervision-detect-objects: ${{ steps.filter.outputs.hm-supervision-detect-objects }}
      hm-triton: ${{ steps.filter.outputs.hm-triton }}
      hm-xxhash: ${{ steps.filter.outputs.hm-xxhash }}
      hugging-face-analyze-sentiment: ${{ steps.filter.outputs.hugging-face-analyze-sentiment }}
      iads-config-reader: ${{ steps.filter.outputs.iads-config-reader }}
      iads-data-producer: ${{ steps.filter.outputs.iads-data-producer }}
      iads-data-reader: ${{ steps.filter.outputs.iads-data-reader }}
      kafka-rust-proto-consumer: ${{ steps.filter.outputs.kafka-rust-proto-consumer }}
      kafka-rust-proto-producer: ${{ steps.filter.outputs.kafka-rust-proto-producer }}
      kafka-rust-udp-kafka-bridge: ${{ steps.filter.outputs.kafka-rust-udp-kafka-bridge }}
      kafka-rust-zeromq-kafka-bridge: ${{ steps.filter.outputs.kafka-rust-zeromq-kafka-bridge }}
      lance: ${{ steps.filter.outputs.lance }}
      mineru: ${{ steps.filter.outputs.mineru }}
      mobile-android: ${{ steps.filter.outputs.mobile-android }}
      mobile-ios: ${{ steps.filter.outputs.mobile-ios }}
      mobile-react-native: ${{ steps.filter.outputs.mobile-react-native }}
      national-instruments-hm-pyvisa: ${{ steps.filter.outputs.national-instruments-hm-pyvisa }}
      national-instruments-hm-tdms: ${{ steps.filter.outputs.national-instruments-hm-tdms }}
      national-instruments-hm-veristand: ${{ steps.filter.outputs.national-instruments-hm-veristand }}
      national-instruments-veristand-zeromq-bridge: ${{ steps.filter.outputs.national-instruments-veristand-zeromq-bridge }}
      neural-forecasting-forecast-air-passenger-number: ${{ steps.filter.outputs.neural-forecasting-forecast-air-passenger-number }}
      nvidia-dali: ${{ steps.filter.outputs.nvidia-dali }}
      open-clip: ${{ steps.filter.outputs.open-clip }}
      pack-unpack-data: ${{ steps.filter.outputs.pack-unpack-data }}
      production-aws-glue-spark-scripts: ${{ steps.filter.outputs.production-aws-glue-spark-scripts }}
      prometheus: ${{ steps.filter.outputs.prometheus }}
      quantum-computing: ${{ steps.filter.outputs.quantum-computing }}
      reinforcement-learning-cart-pole: ${{ steps.filter.outputs.reinforcement-learning-cart-pole }}
      robot-operating-system: ${{ steps.filter.outputs.robot-operating-system }}
      rti-connext-dds: ${{ steps.filter.outputs.rti-connext-dds }}
      stable-diffusion: ${{ steps.filter.outputs.stable-diffusion }}
      taichi-count-primes: ${{ steps.filter.outputs.taichi-count-primes }}
      taichi-fluid-solver: ${{ steps.filter.outputs.taichi-fluid-solver }}
      udp-receiver: ${{ steps.filter.outputs.udp-receiver }}
      udp-sender: ${{ steps.filter.outputs.udp-sender }}
      web-cypress: ${{ steps.filter.outputs.web-cypress }}
      web: ${{ steps.filter.outputs.web }}
      windows-calculator: ${{ steps.filter.outputs.windows-calculator }}
      zeromq-iads-bridge: ${{ steps.filter.outputs.zeromq-iads-bridge }}

  lint:
    name: Lint
    uses: ./.github/workflows/.lint.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-lint == 'true' }}
      # Languages
      ansible: ${{ needs.detect-changes.outputs.ansible == 'true' }}
      c-cpp: ${{ needs.detect-changes.outputs.c-cpp == 'true' }}
      cmake: ${{ needs.detect-changes.outputs.cmake == 'true' }}
      css: ${{ needs.detect-changes.outputs.css == 'true' }}
      dockerfile: ${{ needs.detect-changes.outputs.dockerfile == 'true' }}
      html: ${{ needs.detect-changes.outputs.html == 'true' }}
      json: ${{ needs.detect-changes.outputs.json == 'true' }}
      justfile: ${{ needs.detect-changes.outputs.justfile == 'true' }}
      kubernetes: ${{ needs.detect-changes.outputs.kubernetes == 'true' }}
      markdown: ${{ needs.detect-changes.outputs.markdown == 'true' }}
      matlab: ${{ needs.detect-changes.outputs.matlab == 'true' }}
      natural-language: ${{ needs.detect-changes.outputs.natural-language == 'true' }}
      python: ${{ needs.detect-changes.outputs.python == 'true' }}
      qml: ${{ needs.detect-changes.outputs.qml == 'true' }}
      ruby: ${{ needs.detect-changes.outputs.ruby == 'true' }}
      shell: ${{ needs.detect-changes.outputs.shell == 'true' }}
      solidity: ${{ needs.detect-changes.outputs.solidity == 'true' }}
      sql: ${{ needs.detect-changes.outputs.sql == 'true' }}
      terraform: ${{ needs.detect-changes.outputs.terraform == 'true' }}
      toml: ${{ needs.detect-changes.outputs.toml == 'true' }}
      verilog: ${{ needs.detect-changes.outputs.verilog == 'true' }}
      vhdl: ${{ needs.detect-changes.outputs.vhdl == 'true' }}
      xml: ${{ needs.detect-changes.outputs.xml == 'true' }}
      yaml: ${{ needs.detect-changes.outputs.yaml == 'true' }}
      # Applications
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      api-rust: ${{ needs.detect-changes.outputs.api-rust == 'true' }}
      ethereum: ${{ needs.detect-changes.outputs.ethereum == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      hm-spark-find-retired-people-scala: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-scala == 'true' }}
      hm-spark-ingest-from-s3-to-kafka: ${{ needs.detect-changes.outputs.hm-spark-ingest-from-s3-to-kafka == 'true' }}
      iads-data-producer: ${{ needs.detect-changes.outputs.iads-data-producer == 'true' }}
      kafka-rust-proto-consumer: ${{ needs.detect-changes.outputs.kafka-rust-proto-consumer == 'true' }}
      kafka-rust-proto-producer: ${{ needs.detect-changes.outputs.kafka-rust-proto-producer == 'true' }}
      kafka-rust-udp-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-udp-kafka-bridge == 'true' }}
      kafka-rust-zeromq-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-zeromq-kafka-bridge == 'true' }}
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
      national-instruments-veristand-zeromq-bridge: ${{ needs.detect-changes.outputs.national-instruments-veristand-zeromq-bridge == 'true' }}
      udp-receiver: ${{ needs.detect-changes.outputs.udp-receiver == 'true' }}
      udp-sender: ${{ needs.detect-changes.outputs.udp-sender == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}
      windows-calculator: ${{ needs.detect-changes.outputs.windows-calculator == 'true' }}
      zeromq-iads-bridge: ${{ needs.detect-changes.outputs.zeromq-iads-bridge == 'true' }}

  static-type-check:
    name: Static Type Check
    uses: ./.github/workflows/.static-type-check.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-static-type-check == 'true' }}
      # Languages
      python: ${{ needs.detect-changes.outputs.python == 'true' }}
      terraform: ${{ needs.detect-changes.outputs.terraform == 'true' }}
      # Applications
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      ethereum: ${{ needs.detect-changes.outputs.ethereum == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}

  test-mobile:
    name: Test Mobile
    uses: ./.github/workflows/.test-mobile.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-mobile == 'true' }}
      # Applications
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-ios: ${{ needs.detect-changes.outputs.mobile-ios == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}

  test-web:
    name: Test Web
    uses: ./.github/workflows/.test-web.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-web == 'true' }}
      # Applications
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}

  test-api:
    name: Test API
    uses: ./.github/workflows/.test-api.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-api == 'true' }}
      # Applications
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      api-python: ${{ needs.detect-changes.outputs.api-python == 'true' }}
      api-rust: ${{ needs.detect-changes.outputs.api-rust == 'true' }}

  test-data-orchestration:
    name: Test Data Orchestration
    uses: ./.github/workflows/.test-data-orchestration.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-orchestration == 'true' }}
      # Applications
      hm-airflow: ${{ needs.detect-changes.outputs.hm-airflow == 'true' }}
      hm-prefect-calculate: ${{ needs.detect-changes.outputs.hm-prefect-calculate == 'true' }}
      hm-prefect-greet: ${{ needs.detect-changes.outputs.hm-prefect-greet == 'true' }}
      hm-prefect-print-platform: ${{ needs.detect-changes.outputs.hm-prefect-print-platform == 'true' }}

  test-data-processing:
    name: Test Data Processing
    uses: ./.github/workflows/.test-data-processing.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-processing == 'true' }}
      # Applications
      flink-stream-tweets: ${{ needs.detect-changes.outputs.flink-stream-tweets == 'true' }}
      hm-spark-analyze-coffee-customers: ${{ needs.detect-changes.outputs.hm-spark-analyze-coffee-customers == 'true' }}
      hm-spark-find-retired-people-python: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-python == 'true' }}
      hm-spark-find-retired-people-scala: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-scala == 'true' }}
      hm-spark-find-taxi-top-routes-sql: ${{ needs.detect-changes.outputs.hm-spark-find-taxi-top-routes-sql == 'true' }}
      hm-spark-find-taxi-top-routes: ${{ needs.detect-changes.outputs.hm-spark-find-taxi-top-routes == 'true' }}
      hm-spark-ingest-from-s3-to-kafka: ${{ needs.detect-changes.outputs.hm-spark-ingest-from-s3-to-kafka == 'true' }}
      hm-spark-recommend-movies: ${{ needs.detect-changes.outputs.hm-spark-recommend-movies == 'true' }}
      kafka-rust-proto-consumer: ${{ needs.detect-changes.outputs.kafka-rust-proto-consumer == 'true' }}
      kafka-rust-proto-producer: ${{ needs.detect-changes.outputs.kafka-rust-proto-producer == 'true' }}
      kafka-rust-udp-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-udp-kafka-bridge == 'true' }}
      kafka-rust-zeromq-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-zeromq-kafka-bridge == 'true' }}

  test-data-transformation:
    name: Test Data Transformation
    uses: ./.github/workflows/.test-data-transformation.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-transformation == 'true' }}
      # Applications
      dbt-hm-postgres: ${{ needs.detect-changes.outputs.dbt-hm-postgres == 'true' }}

  test-data-storage:
    name: Test Data Storage
    uses: ./.github/workflows/.test-data-storage.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-storage == 'true' }}
      # Applications
      delta-lake-read-delta-lake-by-amazon-athena: ${{ needs.detect-changes.outputs.delta-lake-read-delta-lake-by-amazon-athena == 'true' }}
      delta-lake-read-delta-lake-by-trino: ${{ needs.detect-changes.outputs.delta-lake-read-delta-lake-by-trino == 'true' }}
      delta-lake-write-to-delta-lake: ${{ needs.detect-changes.outputs.delta-lake-write-to-delta-lake == 'true' }}
      hm-duckdb-query-duckdb: ${{ needs.detect-changes.outputs.hm-duckdb-query-duckdb == 'true' }}
      hm-duckdb-query-lance: ${{ needs.detect-changes.outputs.hm-duckdb-query-lance == 'true' }}
      hm-duckdb-query-parquet: ${{ needs.detect-changes.outputs.hm-duckdb-query-parquet == 'true' }}
      hm-duckdb-query-protobuf: ${{ needs.detect-changes.outputs.hm-duckdb-query-protobuf == 'true' }}
      hm-hdf5: ${{ needs.detect-changes.outputs.hm-hdf5 == 'true' }}
      hm-lancedb: ${{ needs.detect-changes.outputs.hm-lancedb == 'true' }}
      hm-protobuf: ${{ needs.detect-changes.outputs.hm-protobuf == 'true' }}
      lance: ${{ needs.detect-changes.outputs.lance == 'true' }}
      prometheus: ${{ needs.detect-changes.outputs.prometheus == 'true' }}

  test-data-analytics:
    name: Test Data Analytics
    uses: ./.github/workflows/.test-data-analytics.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-analytics == 'true' }}
      # Applications
      hm-cudf: ${{ needs.detect-changes.outputs.hm-cudf == 'true' }}
      hm-cupy: ${{ needs.detect-changes.outputs.hm-cupy == 'true' }}
      hm-geopandas: ${{ needs.detect-changes.outputs.hm-geopandas == 'true' }}
      hm-networkx: ${{ needs.detect-changes.outputs.hm-networkx == 'true' }}
      hm-numba: ${{ needs.detect-changes.outputs.hm-numba == 'true' }}
      hm-pandas: ${{ needs.detect-changes.outputs.hm-pandas == 'true' }}
      hm-polars: ${{ needs.detect-changes.outputs.hm-polars == 'true' }}

  test-data-visualization:
    name: Test Data Visualization
    uses: ./.github/workflows/.test-data-visualization.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-data-visualization == 'true' }}
      # Applications
      grafana-hm-dashboard: ${{ needs.detect-changes.outputs.grafana-hm-dashboard == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      iads-config-reader: ${{ needs.detect-changes.outputs.iads-config-reader == 'true' }}
      iads-data-producer: ${{ needs.detect-changes.outputs.iads-data-producer == 'true' }}
      iads-data-reader: ${{ needs.detect-changes.outputs.iads-data-reader == 'true' }}
      zeromq-iads-bridge: ${{ needs.detect-changes.outputs.zeromq-iads-bridge == 'true' }}

  test-computing:
    name: Test Computing
    uses: ./.github/workflows/.test-computing.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-computing == 'true' }}
      # Applications
      # Scientific Computing
      hm-sunpy: ${{ needs.detect-changes.outputs.hm-sunpy == 'true' }}
      # Parallel Computing
      hm-triton: ${{ needs.detect-changes.outputs.hm-triton == 'true' }}
      taichi-count-primes: ${{ needs.detect-changes.outputs.taichi-count-primes == 'true' }}
      taichi-fluid-solver: ${{ needs.detect-changes.outputs.taichi-fluid-solver == 'true' }}
      # High-Performance Computing
      hm-jax: ${{ needs.detect-changes.outputs.hm-jax == 'true' }}
      # Quantum Computing
      quantum-computing: ${{ needs.detect-changes.outputs.quantum-computing == 'true' }}
      # Cloud Computing
      hm-ray-calculate: ${{ needs.detect-changes.outputs.hm-ray-calculate == 'true' }}
      hm-ray-process-flight-data: ${{ needs.detect-changes.outputs.hm-ray-process-flight-data == 'true' }}
      hm-skypilot: ${{ needs.detect-changes.outputs.hm-skypilot == 'true' }}

  test-cloud:
    name: Test Cloud
    uses: ./.github/workflows/.test-cloud.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-cloud == 'true' }}
      # Applications
      # Cloud Platform
      amazon-sagemaker-pytorch-mnist: ${{ needs.detect-changes.outputs.amazon-sagemaker-pytorch-mnist == 'true' }}
      hm-aws-parallelcluster: ${{ needs.detect-changes.outputs.hm-aws-parallelcluster == 'true' }}
      # Cloud Infrastructure
      hm-pulumi: ${{ needs.detect-changes.outputs.hm-pulumi == 'true' }}
      production-aws-glue-spark-scripts: ${{ needs.detect-changes.outputs.production-aws-glue-spark-scripts == 'true' }}
      # Cloud Security
      hm-prowler: ${{ needs.detect-changes.outputs.hm-prowler == 'true' }}

  test-machine-learning:
    name: Test Machine Learning
    uses: ./.github/workflows/.test-machine-learning.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-machine-learning == 'true' }}
      # Applications
      amazon-sagemaker-triton-resnet-50-deploy: ${{ needs.detect-changes.outputs.amazon-sagemaker-triton-resnet-50-deploy == 'true' }}
      amazon-sagemaker-triton-resnet-50-infer: ${{ needs.detect-changes.outputs.amazon-sagemaker-triton-resnet-50-infer == 'true' }}
      convolutional-neural-network: ${{ needs.detect-changes.outputs.convolutional-neural-network == 'true' }}
      feature-store: ${{ needs.detect-changes.outputs.feature-store == 'true' }}
      graph-neural-network: ${{ needs.detect-changes.outputs.graph-neural-network == 'true' }}
      hm-autogluon: ${{ needs.detect-changes.outputs.hm-autogluon == 'true' }}
      hm-cuml: ${{ needs.detect-changes.outputs.hm-cuml == 'true' }}
      hm-docling: ${{ needs.detect-changes.outputs.hm-docling == 'true' }}
      hm-faster-whisper: ${{ needs.detect-changes.outputs.hm-faster-whisper == 'true' }}
      hm-flax: ${{ needs.detect-changes.outputs.hm-flax == 'true' }}
      hm-gradio-classify-image: ${{ needs.detect-changes.outputs.hm-gradio-classify-image == 'true' }}
      hm-kubeflow-calculate: ${{ needs.detect-changes.outputs.hm-kubeflow-calculate == 'true' }}
      hm-kubeflow-classify-mnist: ${{ needs.detect-changes.outputs.hm-kubeflow-classify-mnist == 'true' }}
      hm-langchain-chat-pdf: ${{ needs.detect-changes.outputs.hm-langchain-chat-pdf == 'true' }}
      hm-langgraph-chat-pdf: ${{ needs.detect-changes.outputs.hm-langgraph-chat-pdf == 'true' }}
      hm-llama-index-chat-pdf: ${{ needs.detect-changes.outputs.hm-llama-index-chat-pdf == 'true' }}
      hm-mlflow-classify-mnist: ${{ needs.detect-changes.outputs.hm-mlflow-classify-mnist == 'true' }}
      hm-mlflow-predict-diabetes: ${{ needs.detect-changes.outputs.hm-mlflow-predict-diabetes == 'true' }}
      hm-nvidia-modulus: ${{ needs.detect-changes.outputs.hm-nvidia-modulus == 'true' }}
      hm-rasa: ${{ needs.detect-changes.outputs.hm-rasa == 'true' }}
      hm-scikit-learn: ${{ needs.detect-changes.outputs.hm-scikit-learn == 'true' }}
      hm-sglang: ${{ needs.detect-changes.outputs.hm-sglang == 'true' }}
      hm-streamlit-live-line-chart: ${{ needs.detect-changes.outputs.hm-streamlit-live-line-chart == 'true' }}
      hm-streamlit-map: ${{ needs.detect-changes.outputs.hm-streamlit-map == 'true' }}
      hugging-face-analyze-sentiment: ${{ needs.detect-changes.outputs.hugging-face-analyze-sentiment == 'true' }}
      mineru: ${{ needs.detect-changes.outputs.mineru == 'true' }}
      neural-forecasting-forecast-air-passenger-number: ${{ needs.detect-changes.outputs.neural-forecasting-forecast-air-passenger-number == 'true' }}
      nvidia-dali: ${{ needs.detect-changes.outputs.nvidia-dali == 'true' }}
      reinforcement-learning-cart-pole: ${{ needs.detect-changes.outputs.reinforcement-learning-cart-pole == 'true' }}
      stable-diffusion: ${{ needs.detect-changes.outputs.stable-diffusion == 'true' }}

  test-computer-vision:
    name: Test Computer Vision
    uses: ./.github/workflows/.test-computer-vision.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-computer-vision == 'true' }}
      # Applications
      hm-imagebind: ${{ needs.detect-changes.outputs.hm-imagebind == 'true' }}
      hm-open3d: ${{ needs.detect-changes.outputs.hm-open3d == 'true' }}
      hm-pyvista-mount-saint-helens: ${{ needs.detect-changes.outputs.hm-pyvista-mount-saint-helens == 'true' }}
      hm-supervision-detect-objects: ${{ needs.detect-changes.outputs.hm-supervision-detect-objects == 'true' }}
      open-clip: ${{ needs.detect-changes.outputs.open-clip == 'true' }}

  test-network-programmability:
    name: Test Network Programmability
    uses: ./.github/workflows/.test-network-programmability.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-network-programmability == 'true' }}
      # Applications
      udp-receiver: ${{ needs.detect-changes.outputs.udp-receiver == 'true' }}
      udp-sender: ${{ needs.detect-changes.outputs.udp-sender == 'true' }}

  test-operating-system:
    name: Test Operating System
    uses: ./.github/workflows/.test-operating-system.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-operating-system == 'true' }}
      # Applications
      windows-calculator: ${{ needs.detect-changes.outputs.windows-calculator == 'true' }}

  test-embedded-system:
    name: Test Embedded System
    uses: ./.github/workflows/.test-embedded-system.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-embedded-system == 'true' }}
      # Applications
      decode-can-blf-data: ${{ needs.detect-changes.outputs.decode-can-blf-data == 'true' }}
      decode-can-mf4-data: ${{ needs.detect-changes.outputs.decode-can-mf4-data == 'true' }}
      decode-can-trc-data: ${{ needs.detect-changes.outputs.decode-can-trc-data == 'true' }}
      format-can-data: ${{ needs.detect-changes.outputs.format-can-data == 'true' }}
      hm-serial: ${{ needs.detect-changes.outputs.hm-serial == 'true' }}
      pack-unpack-data: ${{ needs.detect-changes.outputs.pack-unpack-data == 'true' }}

  test-hardware-in-the-loop:
    name: Test Hardware-in-the-Loop
    uses: ./.github/workflows/.test-hardware-in-the-loop.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-hardware-in-the-loop == 'true' }}
      # Applications
      national-instruments-hm-pyvisa: ${{ needs.detect-changes.outputs.national-instruments-hm-pyvisa == 'true' }}
      national-instruments-hm-tdms: ${{ needs.detect-changes.outputs.national-instruments-hm-tdms == 'true' }}
      national-instruments-hm-veristand: ${{ needs.detect-changes.outputs.national-instruments-hm-veristand == 'true' }}

  test-aerospace:
    name: Test Aerospace
    uses: ./.github/workflows/.test-aerospace.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Workflows
      workflow: ${{ needs.detect-changes.outputs.workflow-test-aerospace == 'true' }}
      # Applications
      hm-aerosandbox: ${{ needs.detect-changes.outputs.hm-aerosandbox == 'true' }}
      hm-openaerostruct: ${{ needs.detect-changes.outputs.hm-openaerostruct == 'true' }}

  genesis-test:
    name: Genesis | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-genesis == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: physics/hm-genesis/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: physics/hm-genesis/pyproject.toml
      - name: Install dependencies
        working-directory: physics/hm-genesis
        run: |
          uv sync --dev
      - name: Test
        working-directory: physics/hm-genesis
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          directory: physics/hm-genesis

  call-matlab-function-in-python:
    name: Call MATLAB Function in Python | Test
    needs: detect-changes
    if: ${{ false }}
    # if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.call-matlab-function-in-python == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2.3.0
        with:
          release: R2024a
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: matlab/call-matlab-function-in-python/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: matlab/call-matlab-function-in-python/pyproject.toml
      - name: Install dependencies
        working-directory: matlab/call-matlab-function-in-python
        run: |
          uv sync --dev
      - name: Test
        working-directory: matlab/call-matlab-function-in-python
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          directory: matlab/call-matlab-function-in-python

  arrow-flight-client-test:
    name: Data Distribution Service | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.arrow-flight-client == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: data-distribution/arrow-flight/arrow-flight-client/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: data-distribution/arrow-flight/arrow-flight-client/pyproject.toml
      - name: Install dependencies
        working-directory: data-distribution/arrow-flight/arrow-flight-client
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-distribution/arrow-flight/arrow-flight-client
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          directory: data-distribution/arrow-flight/arrow-flight-client

  arrow-flight-server-test:
    name: UDP Sender | Test
    if: ${{ inputs.workflow || inputs.arrow-flight-server }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      # protoc is for prost
      - name: Install protoc
        uses: arduino/setup-protoc@v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 28.3
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
      - name: Install dependencies
        working-directory: data-distribution/arrow-flight/arrow-flight-server
        run: |
          cargo build
      - name: Test
        working-directory: data-distribution/arrow-flight/arrow-flight-server
        run: |
          cargo test --all-features

  rti-connext-dds-test:
    name: Data Distribution Service | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.rti-connext-dds == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: data-distribution/rti-connext-dds/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: data-distribution/rti-connext-dds/pyproject.toml
      - name: Install dependencies
        working-directory: data-distribution/rti-connext-dds
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-distribution/rti-connext-dds
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          directory: data-distribution/rti-connext-dds

  xxhash-test:
    name: xxHash | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-xxhash == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: hm-xxhash/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version-file: hm-xxhash/pyproject.toml
      - name: Install dependencies
        working-directory: hm-xxhash
        run: |
          uv sync --dev
      - name: Test
        working-directory: hm-xxhash
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          directory: hm-xxhash

  opa-test:
    name: OPA | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up OPA
        uses: open-policy-agent/setup-opa@v2.2.0
        with:
          version: 0.70.0
      - name: Test
        run: |
          opa test api-go/internal/graphql_server/policies/*.rego -v

  ros-test:
    name: ROS | Test
    needs: detect-changes
    if: ${{ false }}
    # if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.robot-operating-system == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 20
    container:
      image: ubuntu:noble
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Setup ROS
        uses: ros-tooling/setup-ros@0.7.9
        with:
          required-ros-distributions: jazzy
      - name: Build and test
        uses: ros-tooling/action-ros-ci@0.3.16
        with:
          package-name: turtle_robot
          target-ros2-distro: jazzy

  hm-opal-client-build:
    name: HM OPAL Client | Build
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-opal-client == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Build Docker image
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: ./authorization/hm-opal-client/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  code-review:
    name: Code Review
    if: ${{ false }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@v1.0.20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
",679,378
