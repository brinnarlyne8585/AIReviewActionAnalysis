Comment_URL,Classification,Issue_Suggestion_List
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1171806715,2,"the review comment suggests changing ""fisherman"" to ""fishermen"" in the comment line to maintain consistent plural form."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160180621,2,- can you add a comment on the key-value types here? (the comment suggests adding more specific documentation about what types the keys and values in the `validatorkeys` map represent)
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184436462,2,"- maybe a `consideration: if switching to newrandomsub, there will be a max size`"
https://api.github.com/repos/xun082/create-neat/pulls/comments/1528641886,1,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174214813,2,"- add a techdebt comment to indicate that the structures were copied as placeholders from v0 and need to be updated to reflect changes in v1, with a link to the v0 reference."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829250184,2,"i suggest changing
```
+                    f\""data index for {reader.pattern} contains out-of-order timestamps!\"",
+                    stacklevel=2,
```
to
```
+                    f\""data index for {reader.pattern} contains out-of-order timestamps!\"", stacklevel=2
```
revert black"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228789399,2,"1. can't we just get it directly from `session`?
2. if not, we should be able to do `s.getbus().getconsensusmodule().currentheight()`
3. if neither 1 or 2 work, this is `techdebt`, not `improve` imo"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160294627,0,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1826216808,2,"1. the docstring formatting needs to be corrected. bullet lists need to start after a linebreak, and when breaking bullet descriptions into multiple lines, they need to align with the first line for proper rendering. the reviewer provides a complete reformatted docstring that fixes these issues and removes the need for noqa 501.

2. the reviewer suggests keeping line 4 about shifting back pellet delivery timestamps, which was removed in the change."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820625134,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1254315920,2,- need to check `m.isstakedactor()` here when checking the peerstore size
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220512526,2,- add a very short comment for each of the new fields (noninteractive and verbose)
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1479556773,2,- the reviewer suggests deleting `/*ktlint-disable*/` as local execution of `./gradlew ktlintcheck` passed successfully without it.
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1824905241,2,"the reviewer is asking to revert the added import statements:
```python
+import datajoint as dj
+import pandas as pd
```"
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1867684164,2,"1. the code should use `jsonpayload.extra.offer_data_api_call_id` instead of just `offer_data_api_call_id`
2. the reviewer suggests renaming the field to be more explicit, providing alternative column name suggestions:
   - offer_suggestion_api_id
   - subcategory_predict_api_id
   - predictive_model_call_id
   - suggested_offer_api_id
   - api_call_subcat_suggestion_id
   - predictive_offer_call_id
   - subcat_offer_api_id
   - suggestion_model_api_id
   - api_offer_prediction_id
   - offer_creation_api_id"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184450214,2,"1. can you rename `fisherman.json` to `fisherman1.json` in case we add more; ditto for the servicer
2. can you rename the `config*.json` to `validator*.json` so everything is semantically identified"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220406444,2,optional nit: i feel like single lining this whole statement (even if it's > 80 chars) will make it easier to read
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1182005752,2,"i suggest changing
```
+          description: session servicer response
```
to
```
+          description: session response
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1201133126,2,"- rename the variable `appmsgdata` to `pocketenvelopebz` to be more explicit about what the variable contains, since it represents the serialized pocket envelope data extracted from the raintree message."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184416497,2,"the reviewer suggests changing the code structure from:
```
if height == 0 {
    currentheight := int64(s.getbus().getconsensusmodule().currentheight())
    if currentheight > 0 {
        currentheight -= 1
    }
    return currentheight
}
return height
```
to:
```
if height != 0 {
    return height
}
currentheight := int64(s.getbus().getconsensusmodule().currentheight())
if currentheight > 0 {
    currentheight -= 1
}
return currentheight
```
this restructuring makes the code easier to read by handling the simple case first and reducing nesting."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1195874598,2,- let's log a warning here with details (in the case where the type assertion `event.object.(*corev1.pod)` fails)
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1581104089,2,- can we drop the `return` statement in the fixture that does not return anything?
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1173565356,2,"the reviewer suggests multi-lining the function signature of `newgenesisstate` for better readability, as it currently has many parameters on a single line."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228800495,2,"the reviewer suggests adding a comment ""// addtest: need to add more unit tests for the numerical portion of this functionality"" before the function declaration."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220445042,2,"1. rename `relayaccracyparameter` to `relayminingvolumeaccuracy`
2. add a reference to https://arxiv.org/abs/2305.10672 in the code"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251317366,2,"- suggestion to change the wording from ""_discuss(team): if you feel this needs a diagram, please reach out to the team for additional details._"" to ""_note: if you (the reader) feel this needs a diagram, please reach out to the team for additional details._"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184471728,2,- can you reflect the same name of the wg as what you passed in. it'll help with the flow of the code to the reader.
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1206007090,2,"1. consider decoupling ""getsession"" and ""getservicer"" or getting the session in place and passing that to `fetchservicer`
2. it feels weird to get back a session from a function called `fetchservicer`"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820652338,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174221617,2,"1. add `defer readctx.release()` after creating the read context:
```
+	}
+	defer readctx.release()
```
2. make the same change everywhere else where a read context is created."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251330088,0,
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1880340949,2,"- there is a typo in the variable name ""deploy_model_taks"" which should be ""deploy_model_tasks"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1210858477,2,- why not assign to `payload.jsonrpcpayload.headers[header.name]` directly? i believe it's auto initialized to an empty map.
https://api.github.com/repos/parkpow/deep-license-plate-recognition/pulls/comments/1906709003,2,"- the reviewer suggests using `datetime.strptime` instead of manually splitting the time string and creating a datetime object, which would be a more elegant approach for parsing the time format."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228700393,2,"- the reviewer suggests that for the `incomplete` comment in the code, a ticket should be created and referenced in the comment as `incomplete(#xxx): ...` since it's part of a multi-day effort with related incomplete items."
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1483859108,2,"i suggest changing
```
+    <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">you\'ve solved %d problems today. great job! unlock unlimited problems with mobile only plan</string>
```
to
```
+    <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">you\'ve solved %d problems today. great job! unlock unlimited problems with mobile only plan.</string>
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1180838572,2,"- the reviewer suggests adding `t.helper()` at the beginning of the `assertactorsdifference` function, referencing the go testing package documentation."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243115416,2,"the reviewer suggests an optional style change to reduce indentation for better readability, providing an alternative code structure:

```go
isstaked, err := m.isstakedactor()
if err != nil {
   return err
}
if !isstaked {
   return nil
}
// business logic
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220421661,1,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820658854,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1235980764,2,"1. should update the test to get pocket height instead of using `pokt-unittest` with `eth_blocknumber` which is confusing.
2. specific suggestions:
   - use pokt-unittest with rest payload getting `/v1/height`
   - use eth goerli with `eth_blocknumber` and json rpc"
https://api.github.com/repos/QuickSwap/interface-v2/pulls/comments/1188377629,2,"the review comment ""remove it"" suggests removing the commented-out import line:
```
// import { abi } from '@uniswap/v3-periphery/artifacts/contracts/swaprouter.sol/swaprouter.json'
```"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1828128411,2,"1. change the multi-line dictionary format to a single line:
```
+            {\n+                \""strain_id\"": animal_resp[\""strain_id\""],\n+                \""strain_name\"": animal_resp[\""strain_id\""],\n+            },
```
to
```
+            {\""strain_id\"": animal_resp[\""strain_id\""], \""strain_name\"": animal_resp[\""strain_id\""]},
```

2. similarly convert other dictionaries in the file (lines 74-85) to single-line format."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228792764,2,"1. the reviewer suggests using utility functions to generate keys that are guaranteed to be compatible, instead of manually creating them:
```go
operatorkey, err := crypto.generatepublickey()
if err != nil {
    return nil, err
}

outputaddr, err := crypto.generateaddress()
if err != nil {
    return nil, err
}
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1205997356,2,- we have a helper in `shared/crypto/sha3.go` you might be able to use. can you see if it can be leveraged? (this suggests replacing the custom `hash` function implementation with an existing helper function from another file)
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829515344,2,"remove the ""up017"" rule as the project requires python >= 3.11, so we can use the `datetime.utc` alias."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251331098,2,"the reviewer suggests adding a comment to the `setuppubsub` function to describe its purpose:
```
+// setuppubsub sets up a new gossip sub topic using libp2p
+func (rtr *backgroundrouter) setuppubsub(ctx context.context) (err error) {
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243081568,1,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1209947205,2,"the reviewer is suggesting that since the `txindexer` now works on the same hash for both proto and indexed transactions, there might be no need for the new `getindexedtransaction` function. they're questioning whether the txindexer alone could be used for this functionality instead of implementing this new method."
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1863764089,2,"the reviewer suggests changing the word ""structures"" to ""cultural entities"" in the added text."
