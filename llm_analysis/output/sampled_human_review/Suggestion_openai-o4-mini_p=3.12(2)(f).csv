Comment_URL,Classification,Issue_Suggestion_List
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1171806715,2,"- in the comment  
  `// returns all the staked fisherman at this session height`  
  change “fisherman” to “fishermen”."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160180621,2,- “can you add a comment on the key‐value types here?” (i.e. on the `validatorkeys map[string]string` declaration)
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184436462,2,"- “consideration: if switching to `pubsub.newrandomsub`, there will be a max size.”"
https://api.github.com/repos/xun082/create-neat/pulls/comments/1528641886,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174214813,2,"- add a techdebt comment at the top of `shared/core/types/proto/challenge.proto`, for example:
  ```
  // techdebt: these structures were copied as placeholders from v0 and need to be updated to reflect changes in v1; <insert_link_to_v0_ref_here>
  ```"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829250184,2,"- “i suggest changing
  ```diff
  +                    f""data index for {reader.pattern} contains out-of-order timestamps!"",
  +                    stacklevel=2,
  ```
  to
  ```diff
  +                    f""data index for {reader.pattern} contains out-of-order timestamps!"", stacklevel=2
  ```
  (revert black)"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228789399,2,"1. ""can't we just get it directly from `session`?""
2. ""if not, we should be able to do `s.getbus().getconsensusmodule().currentheight()`""
3. ""if neither 1 or 2 work, this is `techdebt`, not `improve` imo"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160294627,0,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1826216808,2,"1. “full suggestion that gets rid of noqa 501.”  
   replace the existing docstring with the following so that `# noqa:501` is no longer needed:
   ```python
       """"""gets pellet delivery timestamps for each patch threshold update within the specified time range.

       1. get all patch state update timestamps (depletionstate): let's call these events ""a""

          - remove all events within 1 second of each other
          - remove all events without threshold value (nan)
       2. get all pellet delivery timestamps (deliverpellet): let's call these events ""b""

          - find matching beam break timestamps within 1.2s after each pellet delivery
       3. for each event ""a"", find the nearest event ""b"" within 100ms before or after the event ""a""

          - these are the pellet delivery events ""b"" associated with the previous threshold update event ""a""
       4. shift back the pellet delivery timestamps by 1 to match the pellet delivery with the
          previous threshold update
       5. remove all threshold updates events ""a"" without a corresponding pellet delivery event ""b""

       args:
           patch_key (dict): primary key for the patch
           start (datetime): start timestamp
           end (datetime): end timestamp

       returns:
           pd.dataframe: dataframe with the following columns:

           - threshold_update_timestamp (index)
           - pellet_timestamp
           - beam_break_timestamp
           - offset
           - rate
       """"""
   ```
2. “note that bullet lists need to start after a linebreak.”
3. “when breaking the bullet description into multiple lines, these need to align with the first line for the docs to render correctly.”"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820625134,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1254315920,2,- need to check `m.isstakedactor()` here (i.e. add a conditional check for `m.isstakedactor()` around this code)
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220512526,2,- “can you add a very short comment for each of them?” (i.e. add brief comments for the new `noninteractive` and `verbose` fields in flags.go)
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1479556773,2,"- i think yo can delete `/*ktlint-disable*/`, local execution `./gradlew ktlintcheck` passed successfully"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1824905241,2,"- “would you revert this change as well?”  
  *action:* remove the newly added lines  
    ```diff
    - import datajoint as dj
    - import pandas as pd
    ```"
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1867684164,2,"- `offer_data_api_call_id` ⇒ `jsonpayload.extra.offer_data_api_call_id`
- pourrait-on expliciter ce que contient ce champ ainsi que les suivants :
- here are some alternative column name suggestions :
  - offer_suggestion_api_id
  - subcategory_predict_api_id
  - predictive_model_call_id
  - suggested_offer_api_id
  - api_call_subcat_suggestion_id
  - predictive_offer_call_id
  - subcat_offer_api_id
  - suggestion_model_api_id
  - api_offer_prediction_id
  - offer_creation_api_id"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184450214,2,"1. rename `fisherman.json` to `fisherman1.json` (and similarly for the servicer file)  
2. rename all `config*.json` files to `validator*.json` so they’re semantically identified"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220406444,2,- “single line this whole statement (even if it's > 80 chars) to make it easier to read”
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1182005752,2,"- i suggest changing
  ```yaml
  +          description: session servicer response
  ```
  to
  ```yaml
  +          description: session response
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1201133126,2,"- rename the newly added variable `appmsgdata` to `pocketenvelopebz`, e.g.  
  ```diff
  -    appmsgdata, err := rtr.handleraintreemsg(data)
  +    pocketenvelopebz, err := rtr.handleraintreemsg(data)
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184416497,2,"1. suggest changing the current `if height == 0 { … }` block to an early-return style. specifically, replace

    ```go
    if height == 0 {
        currentheight := int64(s.getbus().getconsensusmodule().currentheight())
        if currentheight > 0 {
            currentheight -= 1
        }
        return currentheight
    }
    return height
    ```

    with

    ```go
    if height != 0 {
        return height
    }
    currentheight := int64(s.getbus().getconsensusmodule().currentheight())
    if currentheight > 0 {
        currentheight -= 1
    }
    return currentheight
    ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1195874598,2,- “let’s log a warning here with details” – add a log statement inside the `if !ok { … }` block to report the unexpected `event.object` type.
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1581104089,2,- can we drop the `return` statements in the fixtures that do not return anything?
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1173565356,2,- “what do you think about multi-lining this signature for readability?”
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228800495,2,"1. i suggest changing
   ```diff
   +func (s *servicer) calculateservicerappsessiontokens(session *coretypes.session) (*big.int, error) {
   ```
   to
   ```diff
   +// addtest: need to add more unit tests for the numerical portion of this functionality
   +func (s *servicer) calculateservicerappsessiontokens(session *coretypes.session) (*big.int, error) {
   ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220445042,2,"1. make the parameter client‐configurable in `utilityconfig` (“it's client configurable based on how much risk (opportunity?) they're willing to take to mine.”)
2. rename `relayaccracyparameter` to `relayminingvolumeaccuracy`
3. add a reference to https://arxiv.org/abs/2305.10672"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251317366,2,"- i suggest changing  
  ```diff
  - _discuss(team): if you feel this needs a diagram, please reach out to the team for additional details._
  + _note: if you (the reader) feel this needs a diagram, please reach out to the team for additional details._
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184471728,2,"- “can you reflect the same name of the wg as what you passed in. it'll help with the flow of the code to the reader.”  
  *rename the `wg` parameter in `readsubscription` to the same identifier used at the call site so that the names line up.*"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1206007090,2,"1. decouple “getsession” and “getservicer”, so that session acquisition is separated from servicer fetching.
2. obtain the session before calling `fetchservicer` and pass that session into it, rather than having `fetchservicer` return the session.
3. rename or refactor `fetchservicer` so it doesn’t return a session (since its name implies it only fetches a servicer)."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820652338,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174221617,2,"1. i suggest changing
   ```diff
   +   }
   ```
   to
   ```diff
   +   }
   +   defer readctx.release()
   ```
   ditto everywhere else"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251330088,0,
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1880340949,1,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1210858477,2,- why not assign to `payload.jsonrpcpayload.headers[header.name]` directly? i believe it's auto initialized to an empty map.
https://api.github.com/repos/parkpow/deep-license-plate-recognition/pulls/comments/1906709003,2,"1. ""nit: isn't `datetime.strptime` better for this?"" – i.e. replace manual splitting of `data[""timeutc""]` with a call to `datetime.strptime(data[""timeutc""], ""%h:%m:%s"")`."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228700393,2,"- suggestion: create a tracking ticket and update the `// incomplete: implement this` comment to include the ticket number in the form  
  ```go
  // incomplete(#xxx): implement this
  ```"
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1483859108,2,"1. change  
   ```xml
   <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">
     you\'ve solved %d problems today. great job! unlock unlimited problems with mobile only plan
   </string>
   ```  
   to  
   ```xml
   <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">
     you\'ve solved %d problems today. great job! unlock unlimited problems with mobile only plan.
   </string>
   ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1180838572,2,"- suggest adding `t.helper()` to the new helper function. for example, change

  ```go
  func assertactorsdifference(t *testing.t, actors1, actors2 []*coretypes.actor, maxsimilaritythreshold float64) {
  ```
  to
  ```go
  func assertactorsdifference(t *testing.t, actors1, actors2 []*coretypes.actor, maxsimilaritythreshold float64) {
      t.helper()
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243115416,2,"1. optional personal style nit: reduce indent for readability by replacing the `else if isstaked { … }` block with early returns. for example:
```go
isstaked, err := m.isstakedactor()
if err != nil {
   return err
}
if !isstaked {
   return nil
}
// business logic
```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220421661,1,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820658854,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1235980764,2,"1. update the test in utility/servicer/module_test.go so that the “pokt-unittest” case uses a rest payload fetching `/v1/height` (i.e. pocket height) instead of the current json-rpc `eth_blocknumber`.
2. add (or adjust) an eth goerli test case that uses the json-rpc `eth_blocknumber` payload."
https://api.github.com/repos/QuickSwap/interface-v2/pulls/comments/1188377629,2,"- remove the commented import line:
  ```ts
  // import { abi } from '@uniswap/v3-periphery/artifacts/contracts/swaprouter.sol/swaprouter.json'
  ```"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1828128411,2,"1. i suggest changing
   ```diff
   +            {
   +                ""strain_id"": animal_resp[""strain_id""],
   +                ""strain_name"": animal_resp[""strain_id""],
   +            },
   ```
   to
   ```diff
   +            {""strain_id"": animal_resp[""strain_id""], ""strain_name"": animal_resp[""strain_id""]},
   ```
2. likewise the following dicts can fit in a single line:
   https://github.com/sainsburywellcomecentre/aeon_mecha/blob/48493cbc0de8b6e2a5e20bcebc0f30f3f7e6719b/aeon/dj_pipeline/subject.py#l74-l85"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228792764,2,"- instead of hard-coding the `address` and `publickey` in `testservicer1`, use the existing utilities to generate compatible values. for example:
  
  ```go
  operatorkey, err := crypto.generatepublickey()
  if err != nil {
      return nil, err
  }

  outputaddr, err := crypto.generateaddress()
  if err != nil {
      return nil, err
  }
  ```
  then assign `publickey: operatorkey` and `address: outputaddr` in the test setup."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1205997356,2,- “we have a helper in `shared/crypto/sha3.go` you might be able to use. can you see if it can be leveraged?”
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829515344,2,- “remove this as project requires python >= 3.11 we can use the `datetime.utc` alias”
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251331098,2,"- i suggest changing
  ```go
  +func (rtr *backgroundrouter) setuppubsub(ctx context.context) (err error) {
  ```
  to
  ```go
  +// setuppubsub sets up a new gossip sub topic using libp2p
  +func (rtr *backgroundrouter) setuppubsub(ctx context.context) (err error) {
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243081568,2,- “maybe just update the todo you have below?”
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1209947205,2,"- now that the `txindexer` works on the same hash for both proto and indexed transactions, use `txindexer` alone for this call instead of the hydrate function."
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1863764089,2,"- replace “structures” with “cultural entities” in the added line:
  “cultural partners include all permanent venues (facilities which are opened to the public and belong to the institution) as well as structures which have no permanent venue (which are not open to the public nor belong to the institution).”"
