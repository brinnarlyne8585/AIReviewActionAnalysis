Comment_URL,Classification,Issue_Suggestion_List
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1171806715,2,"- suggest replacing ""fisherman"" with ""fishermen"" in the comment line: 
  ""// returns all the staked fisherman at this session height"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160180621,2,"- ""can you add a comment on the key-value types here?"" (this comment requests that the reviewer add a specific comment explaining the key-value types of the `validatorkeys` map in the reviewed change.)"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184436462,2,"- ""if switching to newrandomsub, there will be a max size"" – this comment suggests that if the code is changed to call newrandomsub, the developer must be aware of and handle the maximum size constraint. it directs attention to the reviewed file where the call to pubsub.newrandomsub is made."
https://api.github.com/repos/xun082/create-neat/pulls/comments/1528641886,1,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174214813,2,"- ""can you add a `techdebt: these structures were copied as placeholders from v0 and need to be updated to reflect changes in v1; <insert_link_to_v0_ref_here>`"" – this suggestion focuses directly on the reviewed file by addressing the copied structures, is actionable (requesting an addition to the code), and is specific (mentions the structures and provides a placeholder for the link)."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829250184,2,"- ""i suggest changing
  ```
  +                    f\""data index for {reader.pattern} contains out-of-order timestamps!\"",
  +                    stacklevel=2,
  ```
  to
  ```
  +                    f\""data index for {reader.pattern} contains out-of-order timestamps!\"", stacklevel=2
  ```""
- ""revert black"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228789399,2,"- ""can't we just get it directly from `session`?"" (suggests checking if the current session can provide the necessary height, which is specific to the file's logic.)
- ""if not, we should be able to do `s.getbus().getconsensusmodule().currentheight()`"" (provides a specific alternative with clear code reference in the reviewed file.)
- ""if neither 1 or 2 work, this is `techdebt`, not `improve` imo"" (points out that the current usage of the comment `improve` might be inappropriate, which is an actionable suggestion regarding the labeling in the code.)"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1160294627,0,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1826216808,2,"1. remove the use of ""noqa 501"" from the docstring.
2. ensure that bullet lists in the docstring start after a linebreak.
3. when breaking a bullet description into multiple lines, align the subsequent lines with the first line for proper documentation rendering."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820625134,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1254315920,2,"- ""need to check `m.isstakedactor()` here..."" (suggests that the code should include a check for `m.isstakedactor()` in this location.)"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220512526,2,"- ""can you add a very short comment for each of them?"" this comment is requesting that each of the new flags “noninteractive” and “verbose” in the reviewed file should have a short comment explaining their purpose."
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1479556773,2,"- ""i think yo can delete `/*ktlint-disable*/`, local execution `./gradlew ktlintcheck` passed successfully"" – the suggestion is to remove the `/*ktlint-disable*/` comment since ktlintcheck passes locally."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1824905241,2,"- the reviewer asks, ""@milagrosmarin would you revert this change as well?"" implying that the added import statements in ""aeon/dj_pipeline/streams.py"" should be removed."
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1867684164,2,"1. replace the current column identifier ""offer_data_api_call_id"" with ""jsonpayload.extra.offer_data_api_call_id"", as indicated by the suggestion ""`offer_data_api_call_id` ⇾ `jsonpayload.extra.offer_data_api_call_id`"".
2. explicate or add documentation detailing what the field (and the subsequent ones) contains, as suggested by ""pourrait-on expliciter ce que contient ce champ ainsi que les suivants"".
3. consider the provided alternative column name suggestions (e.g., ""offer_suggestion_api_id"", ""subcategory_predict_api_id"", etc.) to improve clarity and consistency in naming."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184450214,2,"• “can you rename `fisherman.json` to `fisherman1.json` in case we add more; ditto for the servicer”  
  – this suggestion explicitly asks to change the file name of the reviewed file and is both specific and actionable.

• “can you rename the `config*.json` to `validator*.json` so everything is semantically identified”  
  – this suggestion is not directly focused on the reviewed file (which is “fisherman.json”) and therefore does not meet the criteria for a valid suggestion in this context."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220406444,2,"- ""optional nit: i feel like single lining this whole statement (even if it's > 80 chars) will make it easier to read"" – suggesting that the statement should be converted to a single line for readability."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1182005752,2,"- i suggest changing
  ```
  +          description: session servicer response
  ```
  to
  ```
  +          description: session response
  ```"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1201133126,2,- the reviewer suggests renaming the variable from `appmsgdata` to `pocketenvelopebz` (using the substitution suggestion `s/appmsgdata/pocketenvelopebz`) to be more explicit in the context of the code change.
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184416497,2,"1. the reviewer suggests changing the way the condition is checked. instead of checking ""if height == 0"" and then performing several steps, they recommend rewriting it to check ""if height != 0"" first, immediately returning height, and then handling the case when height is zero. this is a specific, actionable suggestion for the reviewed file."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1195874598,2,"- ""let's log a warning here with details"" – the reviewer is suggesting that a warning should be logged (with details) in this part of the code change."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1581104089,2,"- ""can we drop the `return` statements in the fixtures that do not return anything?"" – this is a specific suggestion targeting the fixture in the reviewed file (line with `+    return`) to remove the unnecessary return statement."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1173565356,2,"- ""what do you think about multi-lining this signature for readability?"" (this suggestion is focused on the specific function signature in the reviewed file and advocates for improving the code's readability by adjusting its formatting.)"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228800495,2,"- the reviewer suggests modifying the code by inserting the comment:
// addtest: need to add more unit tests for the numerical portion of this functionality
above the function declaration line. this change is specific (indicating the exact function), actionable (requires adding the comment line), and focused on the reviewed file."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220445042,2,"- rename the parameter to `relayminingvolumeaccuracy` in the file.
- update the parameter’s documentation (or inline comment) to point to the reference at https://arxiv.org/abs/2305.10672."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251317366,2,"- change the added line from 
  _discuss(team): if you feel this needs a diagram, please reach out to the team for additional details._
  to 
  _note: if you (the reader) feel this needs a diagram, please reach out to the team for additional details._"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1184471728,2,"- ""can you reflect the same name of the wg as what you passed in. it'll help with the flow of the code to the reader."" this suggests renaming the variable in the reviewed change to match the variable name already in use when passed in, improving consistency and readability."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1206007090,2,"1. suggest decoupling ""getsession"" and ""getservicer"" by either splitting the responsibilities or by obtaining the session separately. this is actionable since it directly targets the design of the reviewed file.
2. recommend modifying `fetchservicer` so that it either does not return a session or accepts a session as an argument. this is specific as it refers to the function's behavior (i.e., ""getting the session in place and passing that to `fetchservicer`"") and is actionable."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820652338,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1174221617,2,"- the reviewer suggests modifying the code block in ""rpc/handlers.go"" by replacing:
  +	}
with:
  +	}
  +	defer readctx.release()
this change is intended to ensure that resources (readctx) are released properly. the reviewer also indicates that the same change should be applied in similar contexts (""ditto everywhere else"")."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251330088,0,
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1880340949,2,- fix the apparent typo in the variable name “deploy_model_taks” (likely intended to be “deploy_model_task”).
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1210858477,2,"- ""why not assign to `payload.jsonrpcpayload.headers[header.name]` directly? i believe it's auto initialized to an empty map."" this suggestion implies modifying the assignment in the reviewed change to use the already initialized map in the `payload.jsonrpcpayload` structure."
https://api.github.com/repos/parkpow/deep-license-plate-recognition/pulls/comments/1906709003,2,"- ""nit: isn't datetime.strptime better for this?"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228700393,2,"- the review suggests modifying the ""incomplete: implement this"" comment in ""persistence/local.go"" by creating a ticket and updating the comment to include a ticket reference (e.g., changing it to `incomplete(#xxx): ...`)."
https://api.github.com/repos/hyperskill/mobile-app/pulls/comments/1483859108,2,"- the comment suggests modifying the added string line:
  original:
  +    <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">you've solved %d problems today. great job! unlock unlimited problems with mobile only plan</string>
  suggested change:
  +    <string name=""problems_limit_reached_modal_unlock_unlimited_problems_description"">you've solved %d problems today. great job! unlock unlimited problems with mobile only plan.</string>
  this change adds a period at the end of the string."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1180838572,2,"- suggestion to change the function definition by adding a call to t.helper() inside the function body (i.e. modify the code from:
  +func assertactorsdifference(t *testing.t, actors1, actors2 []*coretypes.actor, maxsimilaritythreshold float64) {
  to:
  +func assertactorsdifference(t *testing.t, actors1, actors2 []*coretypes.actor, maxsimilaritythreshold float64) {
  +  t.helper()"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243115416,2,"- ""optional personal style nit: reduce indent for readability"" – with the provided code snippet suggesting that the indent should be reduced (e.g., placing the call to m.isstakedactor() and its subsequent error/condition checks with less nesting)."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1220421661,1,
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1820658854,0,
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1235980764,2,"1. “should we update the test to getting pocket height? otherwise, this is confusing of using `pokt-unittest` with `eth_blocknumber`.”  
   - this comment indicates that the test in module_test.go should be modified to clearly differentiate between test cases, specifically by updating the pokt-unittest to use a rest payload retrieving `/v1/height` instead of using `eth_blocknumber`.
2. “my suggestion:
   1. pokt-unittest with rest payload getting `/v1/height`
   2. eth goerli with `eth_blocknumber` and json rpc”  
   - this specifies that the reviewed file should be updated so that the pokt-unittest uses a rest payload for `/v1/height`, while tests intended for eth goerli should retain the `eth_blocknumber` with json rpc."
https://api.github.com/repos/QuickSwap/interface-v2/pulls/comments/1188377629,2,"- the reviewer suggests to remove the commented-out import statement:  
  // import { abi } from '@uniswap/v3-periphery/artifacts/contracts/swaprouter.sol/swaprouter.json'"
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1828128411,2,"- ""i suggest changing
  ```
  +            {
  +                ""strain_id"": animal_resp[""strain_id""],
  +                ""strain_name"": animal_resp[""strain_id""],
  +            },
  ```
  to
  ```
  +            {""strain_id"": animal_resp[""strain_id""], ""strain_name"": animal_resp[""strain_id""]},
  ```""
- ""revert black""
- ""likewise the following dicts can fit in a single line
  https://github.com/sainsburywellcomecentre/aeon_mecha/blob/48493cbc0de8b6e2a5e20bcebc0f30f3f7e6719b/aeon/dj_pipeline/subject.py#l74-l85"""
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1228792764,2,"1. the reviewer questions the method used to generate the key and address by asking, ""how did you generate these?"" and then suggests that instead of hardcoding values, the test should use the available utilities (crypto.generatepublickey() and crypto.generateaddress()). the provided go code snippet indicates exactly where and how to generate these values, implying that the test code should be modified accordingly."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1205997356,2,"- ""we have a helper in `shared/crypto/sha3.go` you might be able to use. can you see if it can be leveraged?"" – this suggests considering using the existing helper function from `shared/crypto/sha3.go` in the reviewed change instead of, or in addition to, the custom hash implementation."
https://api.github.com/repos/SainsburyWellcomeCentre/aeon_mecha/pulls/comments/1829515344,2,"- ""remove this as project requires python >= 3.11 we can use the `datetime.utc` alias""  
  this suggestion specifically targets the reviewed file by instructing to remove the up017 skip configuration, as the new python version allows the use of `datetime.utc` directly."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1251331098,2,"- the reviewer suggests modifying the function declaration by inserting a descriptive comment above it. specifically, they propose changing:
  +func (rtr *backgroundrouter) setuppubsub(ctx context.context) (err error) {
  
  to:
  +// setuppubsub sets up a new gossip sub topic using libp2p
  +func (rtr *backgroundrouter) setuppubsub(ctx context.context) (err error) {"
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1243081568,2,"1. ""maybe just update the todo you have below?"" – this suggests updating an existing todo comment in the reviewed file (p2p/utils_test.go) to possibly reflect an alternative approach similar to the one in waitforeventsinternal in consensus."
https://api.github.com/repos/pokt-network/pocket/pulls/comments/1209947205,2,"- ""now with the `txindexer` working on the same hash for both proto and indexed txs what is stopping us from using the txindexer alone for this call?"" this suggestion directly questions the need for the current approach in the reviewed file and implies that the code should be modified to use the txindexer alone."
https://api.github.com/repos/pass-culture/data-gcp/pulls/comments/1863764089,2,"- suggest replacing ""structures"" with ""cultural entities"" in the sentence: 
  ""as well as structures which have no permanent venue (which are not open to the public nor belong to the institution)."""
